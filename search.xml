<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Markdown grammar</title>
      <link href="/2019/09/19/Markdown-grammar/"/>
      <url>/2019/09/19/Markdown-grammar/</url>
      
        <content type="html"><![CDATA[<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h3 id="1-Markdown是什么？"><a href="#1-Markdown是什么？" class="headerlink" title="1. Markdown是什么？"></a>1. Markdown<em>是什么</em>？</h3><p><strong>Markdown</strong>是一种轻量级<strong>标记语言</strong>，它以纯文本形式(<em>易读、易写、易更改</em>)编写文档，并最终以HTML格式发布。<br><strong>Markdown</strong>也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。    </p><a id="more"></a><h3 id="2-谁创造了它？"><a href="#2-谁创造了它？" class="headerlink" title="2. 谁创造了它？"></a>2. <em>谁</em>创造了它？</h3><p>它由<a href="http://www.aaronsw.com/" target="_blank" rel="noopener"><strong>Aaron Swartz</strong></a>和<strong>John Gruber</strong>共同设计，<strong>Aaron Swartz</strong>就是那位于去年（<em>2013年1月11日</em>）自杀,有着<strong>开挂</strong>一般人生经历的程序员。维基百科对他的<a href="http://zh.wikipedia.org/wiki/%E4%BA%9A%E4%BC%A6%C2%B7%E6%96%AF%E6%B2%83%E8%8C%A8" target="_blank" rel="noopener">介绍</a>是：<strong>软件工程师、作家、政治组织者、互联网活动家、维基百科人</strong>。    </p><p>他有着足以让你跪拜的人生经历：    </p><ul><li><strong>14岁</strong>参与RSS 1.0规格标准的制订。     </li><li><strong>2004</strong>年入读<strong>斯坦福</strong>，之后退学。   </li><li><strong>2005</strong>年创建<a href="http://infogami.org/" target="_blank" rel="noopener">Infogami</a>，之后与<a href="http://www.reddit.com/" target="_blank" rel="noopener">Reddit</a>合并成为其合伙人。   </li><li><strong>2010</strong>年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。   </li><li><strong>2011</strong>年7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。     </li><li><strong>2013</strong>年1月自杀身亡。    </li></ul><p><img src="https://github.com/younghz/Markdown/raw/master/resource/Aaron_Swartz.jpg" alt="Aaron Swartz"></p><p>天才都有早逝的归途。</p><h3 id="3-为什么要使用它？"><a href="#3-为什么要使用它？" class="headerlink" title="3. 为什么要使用它？"></a>3. <em>为什么</em>要使用它？</h3><ul><li>它是易读（看起来舒服）、易写（语法简单）、易更改<strong>纯文本</strong>。处处体现着<strong>极简主义</strong>的影子。</li><li>兼容HTML，可以转换为HTML格式发布。</li><li>跨平台使用。</li><li>越来越多的网站支持Markdown。</li><li>更方便清晰地组织你的电子邮件。（Markdown-here, Airmail）</li><li>摆脱Word（我不是认真的）。</li></ul><h3 id="4-怎么使用？"><a href="#4-怎么使用？" class="headerlink" title="4. 怎么使用？"></a>4. <em>怎么</em>使用？</h3><p>如果不算<strong>扩展</strong>，Markdown的语法绝对<strong>简单</strong>到让你爱不释手。</p><p>Markdown语法主要分为如下几大部分：<br><strong>标题</strong>，<strong>段落</strong>，<strong>区块引用</strong>，<strong>代码区块</strong>，<strong>强调</strong>，<strong>列表</strong>，<strong>分割线</strong>，<strong>链接</strong>，<strong>图片</strong>，<strong>反斜杠 <code>\</code></strong>，<strong>符号’`’</strong>。</p><h4 id="4-1-标题"><a href="#4-1-标题" class="headerlink" title="4.1 标题"></a>4.1 标题</h4><p>两种形式：<br>1）使用<code>=</code>和<code>-</code>标记一级和二级标题。</p><blockquote><p>一级标题<br><code>=========</code><br>二级标题<br><code>---------</code></p></blockquote><p>效果：</p><blockquote><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题   "></a>一级标题   </h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2></blockquote><p>2）使用<code>#</code>，可表示1-6级标题。</p><blockquote><p># 一级标题<br>## 二级标题<br>### 三级标题<br>#### 四级标题<br>##### 五级标题<br>###### 六级标题    </p></blockquote><p>效果：</p><blockquote><h1 id="一级标题-1"><a href="#一级标题-1" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6></blockquote><h4 id="4-2-段落"><a href="#4-2-段落" class="headerlink" title="4.2 段落"></a>4.2 段落</h4><p>段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用<strong>两个以上</strong>空格加上回车（引用中换行省略回车）。</p><h4 id="4-3-区块引用"><a href="#4-3-区块引用" class="headerlink" title="4.3 区块引用"></a>4.3 区块引用</h4><p>在段落的每行或者只在第一行使用符号<code>&gt;</code>,还可使用多个嵌套引用，如：</p><blockquote><p>&gt; 区块引用<br>&gt;&gt; 嵌套引用  </p></blockquote><p>效果：</p><blockquote><p>区块引用  </p><blockquote><p>嵌套引用</p></blockquote></blockquote><h4 id="4-4-代码区块"><a href="#4-4-代码区块" class="headerlink" title="4.4 代码区块"></a>4.4 代码区块</h4><p>代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如<br>普通段落：</p><p>void main()<br>{<br>    printf(“Hello, Markdown.”);<br>}    </p><p>代码区块：</p><pre><code>void main(){    printf(&quot;Hello, Markdown.&quot;);}</code></pre><p><strong>注意</strong>:需要和普通段落之间存在空行。</p><h4 id="4-5-强调"><a href="#4-5-强调" class="headerlink" title="4.5 强调"></a>4.5 强调</h4><p>在强调内容两侧分别加上<code>*</code>或者<code>_</code>，如：</p><blockquote><p>*斜体*，_斜体_<br>**粗体**，__粗体__</p></blockquote><p>效果：</p><blockquote><p><em>斜体</em>，<em>斜体</em><br><strong>粗体</strong>，<strong>粗体</strong></p></blockquote><h4 id="4-6-列表"><a href="#4-6-列表" class="headerlink" title="4.6 列表"></a>4.6 列表</h4><p>使用<code>·</code>、<code>+</code>、或<code>-</code>标记无序列表，如：</p><blockquote><p>-（+*） 第一项<br>-（+*） 第二项<br>- （+*）第三项</p></blockquote><p><strong>注意</strong>：标记后面最少有一个_空格<em>或</em>制表符_。若不在引用区块中，必须和前方段落之间存在空行。</p><p>效果：</p><blockquote><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></blockquote><p>有序列表的标记方式是将上述的符号换成数字,并辅以<code>.</code>，如：</p><blockquote><p>1 . 第一项<br>2 . 第二项<br>3 . 第三项    </p></blockquote><p>效果：</p><blockquote><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol></blockquote><h4 id="4-7-分割线"><a href="#4-7-分割线" class="headerlink" title="4.7 分割线"></a>4.7 分割线</h4><p>分割线最常使用就是三个或以上<code>*</code>，还可以使用<code>-</code>和<code>_</code>。</p><h4 id="4-8-链接"><a href="#4-8-链接" class="headerlink" title="4.8 链接"></a>4.8 链接</h4><p>链接可以由两种形式生成：<strong>行内式</strong>和<strong>参考式</strong>。<br><strong>行内式</strong>：</p><blockquote><p>[younghz的Markdown库](https:://github.com/younghz/Markdown “Markdown”)。</p></blockquote><p>效果：</p><blockquote><p><a href="https:://github.com/younghz/Markdown" title="Markdown" target="_blank" rel="noopener">younghz的Markdown库</a>。</p></blockquote><p><strong>参考式</strong>：</p><blockquote><p>[younghz的Markdown库1][1]<br>[younghz的Markdown库2][2]<br>[1]:https:://github.com/younghz/Markdown “Markdown”<br>[2]:https:://github.com/younghz/Markdown “Markdown”    </p></blockquote><p>效果：</p><blockquote><p><a href="https:://github.com/younghz/Markdown" title="Markdown" target="_blank" rel="noopener">younghz的Markdown库1</a><br><a href="https:://github.com/younghz/Markdown" title="Markdown" target="_blank" rel="noopener">younghz的Markdown库2</a></p></blockquote><p><strong>注意</strong>：上述的<code>[1]:https:://github.com/younghz/Markdown &quot;Markdown&quot;</code>不出现在区块中。</p><h4 id="4-9-图片"><a href="#4-9-图片" class="headerlink" title="4.9 图片"></a>4.9 图片</h4><p>添加图片的形式和链接相似，只需在链接的基础上前方加一个<code>！</code>。</p><h4 id="4-10-反斜杠"><a href="#4-10-反斜杠" class="headerlink" title="4.10 反斜杠\"></a>4.10 反斜杠<code>\</code></h4><p>相当于<strong>反转义</strong>作用。使符号成为普通符号。</p><h4 id="4-11-符号’-’"><a href="#4-11-符号’-’" class="headerlink" title="4.11 符号’`’"></a>4.11 符号’`’</h4><p>起到标记作用。如：</p><blockquote><p>`ctrl+a`</p></blockquote><p>效果：</p><blockquote><p><code>ctrl+a</code>    </p></blockquote><h4 id="5-谁在用？"><a href="#5-谁在用？" class="headerlink" title="5. 谁在用？"></a>5. <em>谁</em>在用？</h4><p>Markdown的使用者：</p><ul><li>GitHub</li><li>简书</li><li>Stack Overflow</li><li>Apollo</li><li>Moodle</li><li>Reddit</li><li>等等</li></ul><h4 id="6-尝试一下"><a href="#6-尝试一下" class="headerlink" title="6. 尝试一下"></a>6. 尝试一下</h4><ul><li><p><strong>Chrome</strong>下的插件诸如<code>stackedit</code>与<code>markdown-here</code>等非常方便，也不用担心平台受限。</p></li><li><p><strong>在线</strong>的dillinger.io评价也不错   </p></li><li><p><strong>Windowns</strong>下的MarkdownPad也用过，不过免费版的体验不是很好。    </p></li><li><p><strong>Mac</strong>下的Mou是国人贡献的，口碑很好。</p></li><li><p><strong>Linux</strong>下的ReText不错。 </p></li></ul><p>  <strong>最好的Markdown编辑器[个人认为]: Typora ,支持Mac、Linux、Windows</strong>   </p><p><strong>当然，最终境界永远都是笔下是语法，心中格式化 :)。</strong></p><hr><p><strong>注意</strong>：不同的Markdown解释器或工具对相应语法（扩展语法）的解释效果不尽相同，具体可参见工具的使用说明。<br>虽然有人想出面搞一个所谓的标准化的Markdown，[没想到还惹怒了健在的创始人John Gruber]<br>(<a href="http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/)。" target="_blank" rel="noopener">http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/)。</a></p><hr><p>以上基本是所有traditonal markdown的语法。</p><h3 id="其它："><a href="#其它：" class="headerlink" title="其它："></a>其它：</h3><p>列表的使用(非traditonal markdown)：</p><p>用<code>|</code>表示表格纵向边界，表头和表内容用<code>-</code>隔开，并可用<code>:</code>进行对齐设置，两边都有<code>:</code>则表示居中，若不加<code>:</code>则默认左对齐。</p><table><thead><tr><th align="center">代码库</th><th>链接</th></tr></thead><tbody><tr><td align="center">MarkDown</td><td><a href="https://github.com/younghz/Markdown" title="Markdown" target="_blank" rel="noopener">https://github.com/younghz/Markdown</a></td></tr></tbody></table><p>关于其它扩展语法可参见具体工具的使用说明。</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java小题库</title>
      <link href="/2019/09/15/Java%E5%B0%8F%E9%A2%98%E5%BA%93/"/>
      <url>/2019/09/15/Java%E5%B0%8F%E9%A2%98%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaEE"><a href="#JavaEE" class="headerlink" title="JavaEE"></a>JavaEE</h1><h2 id="Java基础篇"><a href="#Java基础篇" class="headerlink" title="Java基础篇"></a>Java基础篇</h2><h4 id="1-JVM运行原理（运行机制）？"><a href="#1-JVM运行原理（运行机制）？" class="headerlink" title="1. JVM运行原理（运行机制）？"></a>1. JVM运行原理（运行机制）？</h4><a id="more"></a><blockquote><p><img src="H:%5CDocuments%5CDocs%5Cnote%5CJava%5Cpics%5Cjava_run.gif" alt="javarun"></p></blockquote><ol><li>Java虚拟机的体系结构<ul><li>每个JVM都有两种机制<blockquote><ol><li>类装载子系统：装载具有适合名称的类或接口</li><li>执行引擎：负责执行包含在已装载的类或接口中的指令</li></ol></blockquote></li><li>每个JVM都包含：<blockquote><ul><li><p>JVM内存模型主要组成：</p><ul><li><p>堆内存</p></li><li><p>方法区</p></li><li><p>虚拟机栈</p></li><li><p>本地方法栈</p></li><li><p>指令计数器</p></li><li><p>其他隐含寄存器</p><p><img src="H:%5CDocuments%5CDocs%5Cnote%5CJava%5Cpics%5Cjava_platform.jpeg" alt="java"></p></li></ul></li></ul></blockquote></li></ul></li></ol><ul><li><p>JVM中学习最主要的几个部分：</p><blockquote><ul><li>Java代码编译和执行的整个过程</li><li>JVM内存管理及垃圾回收机制</li></ul></blockquote></li></ul><ol start="2"><li><p>Java编译执行过程</p><blockquote><p>运行期环境代表着Java平台，开发人员编写Java代码(.java文件)，然后将之编译成字节码(.class文件)，再然后将字节码装入内存，一旦<strong>字节码</strong>进入<strong>JVM虚拟机</strong>，就会被<strong>JVM虚拟机解释执行</strong>，或者被<strong>即时代码发生器</strong>有选择的转换成<strong>机器码</strong>执行</p><ol><li><p>Java代码编译是由Java源码编译器来完成，即由Java代码到JVM字节码(.class文件)</p><p><img src="H:%5CDocuments%5CDocs%5Cnote%5CJava%5Cpics%5Cjava2class.jpeg" alt="java2class"></p></li><li><p>Java字节码执行由JVM执行引擎完成</p><p><img src="H:%5CDocuments%5CDocs%5Cnote%5CJava%5Cpics%5Cclassrun.jpeg" alt="classrun"></p></li></ol></blockquote></li></ol><h4 id="2-try块里如果有return语句会不会执行，若执行那么return和finally语句执行的顺序是怎么样的？"><a href="#2-try块里如果有return语句会不会执行，若执行那么return和finally语句执行的顺序是怎么样的？" class="headerlink" title="2. try块里如果有return语句会不会执行，若执行那么return和finally语句执行的顺序是怎么样的？"></a>2. try块里如果有return语句会不会执行，若执行那么return和finally语句执行的顺序是怎么样的？</h4><blockquote><p>在正常情况（即程序正常执行try catch finally语句块，不会在语句中出现退出程序、线程终止等特殊情况）下，都会执行finally语句块，如果finally中有return,则程序会走finally中的return，如果没有，则先执行try或者catch中的return.在try中执行到return语句时，不会真正的return，即只是会计算return中的表达式（本题为执行a+b），之后将结果保存在一个临时栈中，接着执行finally中的语句，最后才会从临时栈中取出之前的结果返回</p></blockquote><h4 id="3-HashMap里的hashcode和equal方法什么时候需要重写？如不重写会产生什么后果？"><a href="#3-HashMap里的hashcode和equal方法什么时候需要重写？如不重写会产生什么后果？" class="headerlink" title="3. HashMap里的hashcode和equal方法什么时候需要重写？如不重写会产生什么后果？"></a>3. HashMap里的hashcode和equal方法什么时候需要重写？如不重写会产生什么后果？</h4><blockquote><p> Java语言对equals()要求是：</p><p> <strong>对称性</strong>：如果x.equals(y)返回是“true”，那么y.equals(x)也应该返回是“true”。</p><p> <strong>反射性</strong>：x.equals(x)必须返回是“true”。</p><p> <strong>类推性</strong>：如果x.equals(y)返回是“true”，而且y.equals(z)返回是“true”，那么z.equals(x)也应该返回是“true”。</p><p> <strong>一致性</strong>：如果x.equals(y)返回是“true”，只要x和y内容一直不变，不管你重复x.equals(y)多少次，返回都是“true”  </p><ol><li>equals()相等的两个对象，hashcode()一定相等</li><li>hashcode()不等，一定能推出equals()也不等；</li><li>hashcode()相等，equals()可能相等，也可能不等。</li></ol></blockquote><blockquote><p>因为Object的equal方法默认是两个对象的引用的比较，意思就是指向同一内存,地址则相等，否则不相等；如果你现在需要利用对象里面的值来判断是否相等，则重载equal方法</p></blockquote><h3 id="4-方法的重写和重载的区别？"><a href="#4-方法的重写和重载的区别？" class="headerlink" title="4. 方法的重写和重载的区别？"></a>4. 方法的重写和重载的区别？</h3><ul><li>方法重写(Overwrite)</li></ul><blockquote><ol><li>也称为子类的方法覆盖父类的方法，要求返回值、方法名和参数个数、顺序都相同。</li><li>子类抛出的异常不能超过父类相应方法抛出的异常。（子类异常不能超出父类异常）</li><li>子类方法的访问级别不能低于父类相应方法的访问级别（子类访问等级不能低于父类访问级别）</li></ol></blockquote><ul><li>方法重载(Override)</li></ul><blockquote><ol><li><p>方法名相同</p></li><li><p>方法的参数类型</p></li><li><p>方法的参数个数或顺序不一样</p></li><li><p>方法的返回值不同</p></li><li><p>方法的修饰符可以不同</p></li><li><p>main方法也可以被重载</p></li></ol><p><strong>注：只要符合上述2~4的其中一条即会构成重载</strong></p></blockquote><h4 id="5-ArrayList和LinkedList底层实现有什么区别，各自适用于哪些场合？"><a href="#5-ArrayList和LinkedList底层实现有什么区别，各自适用于哪些场合？" class="headerlink" title="5. ArrayList和LinkedList底层实现有什么区别，各自适用于哪些场合？"></a>5. ArrayList和LinkedList底层实现有什么区别，各自适用于哪些场合？</h4><blockquote><ol><li><p>ArrayList的底层实现基于动态数组的数据结构，LinkedList的底层实现基于链表的数据结构。</p></li><li><p>对于新增和删除操作 Linked比较占优势，只需要对所指向数据对象的指针作修改即可。但ArrayList则需要对所要修改的那个位置及其后面的所有元素作移动操作。</p></li><li><p>对于随机访问get和set，ArrayList优于LinkedList</p></li></ol><table><thead><tr><th align="center">操作</th><th align="center">add()操作</th><th align="center">delete()操作</th><th align="center">insert操作</th><th align="center">index取值操作</th><th align="center">iterator取值操作</th></tr></thead><tbody><tr><td align="center">ArrayList/Vector/Stack</td><td align="center">好</td><td align="center">差</td><td align="center">差</td><td align="center">极好</td><td align="center">极好</td></tr><tr><td align="center">LinkedList</td><td align="center">好</td><td align="center">好</td><td align="center">好</td><td align="center">差</td><td align="center">极好</td></tr></tbody></table></blockquote><h4 id="6-volatile关键字有什么作用？"><a href="#6-volatile关键字有什么作用？" class="headerlink" title="6. volatile关键字有什么作用？"></a>6. volatile关键字有什么作用？</h4><blockquote><p>用volatile修饰的变量，线程在每次使用变量的时候，都会读取变量修改后的值(主线程中修改过的值)</p><p><strong>注：在JVM中Java为了优化性能，一般Java HotSpot 设置为Server，而不是Client。使得线程默认是在启动时通过对象的引用来获取主线程堆内存的变量值然后复制到线程栈的本地内存中，当执行完后再回写到对象的堆内存中</strong></p></blockquote><h4 id="7-多线程？"><a href="#7-多线程？" class="headerlink" title="7. 多线程？"></a>7. 多线程？</h4><blockquote></blockquote><h4 id="8-final-finally-finalize的区别"><a href="#8-final-finally-finalize的区别" class="headerlink" title="8. final,finally,finalize的区别?"></a>8. final,finally,finalize的区别?</h4><blockquote><ul><li><p>final 关键字，可以用来修饰类、方法和变量</p><ul><li>修饰类时，表明该类不可继承。即final类没有子类</li></ul></li></ul><p><strong>注：final类中的所有成员方法都会隐式的定义为final方法</strong></p><ul><li><p>修饰变量时，表示该属性为常量，不可更改</p></li><li><p>修饰方法时，此方法将不能被重写<br><em>使用 final 方法的原因主要有两个：</em></p><ol><li>把方法锁定，以防止继承类对其进行更改。</li><li>效率，在早期的Java版本中，会将final方法转为内嵌调用。但若方法过于庞大，可能在性能上不会有多大提升。因此在最近版本中，不需要final方法进行这些优化了。</li></ol><p><strong>注意：若父类中final方法的访问权限为private，将导致子类中不能直接继承该方法，因此，此时可以在子类中定义相同方法名的函数，此时不会与重写final的矛盾，而是在子类中重新地定义了新方法。</strong></p><ul><li>finally 作为异常处理的一部分，他只是用try catch语句后，表示异常处理完成后最终一定执行的语句（不论catch语句是否有异常）经常被用来释放一些资源。<br>但如下几种情况下，finally语句块不执行：</li></ul></li><li><p>在finally语句块中出现异常</p></li><li><p>在finally之前的代码存在System.exit()导致系统退出</p></li><li><p>当前线程死亡</p></li><li><p>CPU关闭</p></li></ul></blockquote><h4 id="9-java中实现多态的机制是什么？"><a href="#9-java中实现多态的机制是什么？" class="headerlink" title="9. java中实现多态的机制是什么？"></a>9. java中实现多态的机制是什么？</h4><h4 id="10-最常见的runtime-Exception有哪些？"><a href="#10-最常见的runtime-Exception有哪些？" class="headerlink" title="10. 最常见的runtime Exception有哪些？"></a>10. 最常见的runtime Exception有哪些？</h4><h4 id="11-死锁"><a href="#11-死锁" class="headerlink" title="11. 死锁"></a>11. 死锁</h4><p>当两个以上线程都需要对方线程的资源，且都等待着对方释放。同时都不释放自己所占用的资源时。会发生死锁。</p><ul><li>锁顺序死锁</li><li>动态锁顺序死锁</li><li>协作对象之间发生死锁</li></ul><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><ul><li><p>描述JSP的内置对象及方法？</p></li><li><p>Servlet的生命周期？</p></li><li><p>应用服务器有哪些？</p><blockquote><p>Weblogic、Tomcat、Jboss</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构相关零碎知识点</title>
      <link href="/2019/09/15/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%9B%B8%E5%85%B3%E9%9B%B6%E7%A2%8E%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
      <url>/2019/09/15/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%9B%B8%E5%85%B3%E9%9B%B6%E7%A2%8E%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1><h2 id="树"><a href="#树" class="headerlink" title="树"></a>树</h2><h3 id="二叉查找树"><a href="#二叉查找树" class="headerlink" title="二叉查找树"></a>二叉查找树</h3><h3 id="红黑树"><a href="#红黑树" class="headerlink" title="红黑树"></a>红黑树</h3><ul><li><p>简介</p><blockquote><p>R-B Tree 全称是Red-Black Tree,又称为“红黑树”，它是一种特殊的平衡二叉树。</p></blockquote><blockquote><p>红黑树的每个节点上都有存储位，用来表示红或黑两种颜色，非黑即红。</p></blockquote></li><li><p>特征</p><blockquote><ol><li><p>每个节点或是黑色，亦或者是红色</p></li><li><p>根节点是黑色</p></li><li><p>每个叶子节点（NIL）是黑色的空节点。[<strong>注意：这里的叶子节点，是指为空（NIL或NULL）的叶子节点!</strong>]</p></li><li><p>如果一个节点是红色的，则它的子节点必须是黑色的。</p></li><li><p>从一个节点到该节点的子孙节点的所有路径上包含相同数目的黑节点。</p></li></ol><p><strong>注意：</strong><br><strong>a. 特征（3）中的叶子节点，是只为空（NIL或Null）的节点</strong>。</p><p>  <strong>b. 特征（5），确保没有一条路径会比其他路径长出2倍。因而，红黑树是相对接近平衡的二叉树。</strong></p></blockquote></li></ul><a id="more"></a><ul><li><p>左右旋</p><blockquote><ul><li>当右子树深度过深时，导致节点不平衡，无法满足红黑树特征。通过左旋，使其根节点的两边平衡，同时也需要调整颜色，使其符合红黑树特征。</li><li>当左子树深度过深时，导致节点不平衡，无法满足红黑树特征。通过右旋，使其根节点的两边平衡，同时也需要调整颜色，使其符合红黑树特征。</li></ul></blockquote></li><li><p>时间复杂度</p><blockquote><p>时间复杂度为O(lgN)。 </p></blockquote></li><li><p>在Java中的应用</p><blockquote><p>java中的TreeMap以及JDK1.8以后的HashMap在当个节点中链表<strong>长度大于8时</strong>都会用到</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Data Structure </category>
          
      </categories>
      
      
        <tags>
            
            <tag> algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell学习指北</title>
      <link href="/2019/09/15/shell%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8C%97/"/>
      <url>/2019/09/15/shell%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8C%97/</url>
      
        <content type="html"><![CDATA[<h1 id="shell入门"><a href="#shell入门" class="headerlink" title="shell入门"></a>shell入门</h1><h3 id="1-第一个-hello-world-！脚本"><a href="#1-第一个-hello-world-！脚本" class="headerlink" title="1. 第一个 hello world ！脚本"></a>1. 第一个 hello world ！脚本</h3><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">！/bin/sh</span></span><br><span class="line">echo "hello world !"</span><br></pre></td></tr></table></figure><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p><em>变量命名规则和C、Java、python等语言一致</em></p><ol><li>要是只能是字母或下划线开头</li><li>不能以数字开头</li><li>变量名可以使用数字、字母、下划线，且只能能包含这三种</li></ol><ul><li>使用变量<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">a = 13</span><br><span class="line">echo $a</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">a = 13</span><br><span class="line">echo $&#123;a&#125;</span><br><span class="line"></span><br><span class="line">name = "alex"</span><br><span class="line">echo $name</span><br></pre></td></tr></table></figure><p><strong>注意：尽量用${}这种方式，如 ${skill}script,没有{}，则变成$skillscrpit,这是个未赋值的变量</strong></p><ul><li>只读变量 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">url="www.baidu.com"</span><br><span class="line">readonly url</span><br><span class="line">url="www.google.com"</span><br></pre></td></tr></table></figure></li></ul><p><em>提示信息</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3.sh: 4: 3.sh: url: is read only</span><br></pre></td></tr></table></figure><ul><li>删除变量<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">unset [变量名]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">url="www.baidu.com"</span><br><span class="line">unset url</span><br><span class="line">echo $url</span><br></pre></td></tr></table></figure></li></ul><h4 id="变量类型"><a href="#变量类型" class="headerlink" title="变量类型"></a>变量类型</h4><ol><li>局部变量</li><li>环境变量</li><li>shell变量</li></ol><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><h4 id="单引号"><a href="#单引号" class="headerlink" title="单引号"></a>单引号</h4><ul><li>单引号里的任何字符都会原样输出，单引号字符串中的变量是无效的；</li><li>单引号字串中不能出现单独一个的单引号（对单引号使用转义符后也不行），但可成对出现，作为字符串拼接使用<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str='this is string'</span><br></pre></td></tr></table></figure></li></ul><h4 id="双引号"><a href="#双引号" class="headerlink" title="双引号"></a>双引号</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">string="shell"</span><br><span class="line">str="this is $&#123;string&#125;"</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name='kitbar'</span><br><span class="line">str="hello, I'm "$name"! \n "</span><br></pre></td></tr></table></figure><p><strong>双引号的优点：</strong></p><ul><li>双引号里可以有变量</li><li>双引号里可以出现转义字符</li></ul><h4 id="查找子字符串"><a href="#查找子字符串" class="headerlink" title="查找子字符串"></a>查找子字符串</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">string="kitbar is great site"</span><br><span class="line">echo `expr index "$string" ba`</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h1 id="shell入门-1"><a href="#shell入门-1" class="headerlink" title="shell入门"></a>shell入门</h1><h3 id="1-第一个-hello-world-！脚本-1"><a href="#1-第一个-hello-world-！脚本-1" class="headerlink" title="1. 第一个 hello world ！脚本"></a>1. 第一个 hello world ！脚本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">！/bin/sh</span></span><br><span class="line">echo "hello world !"</span><br></pre></td></tr></table></figure><h3 id="变量-1"><a href="#变量-1" class="headerlink" title="变量"></a>变量</h3><p><em>变量命名规则和C、Java、python等语言一致</em></p><ol><li>要是只能是字母或下划线开头</li><li>不能以数字开头</li><li>变量名可以使用数字、字母、下划线，且只能能包含这三种</li></ol><ul><li>使用变量<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">a = 13</span><br><span class="line">echo $a</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">a = 13</span><br><span class="line">echo $&#123;a&#125;</span><br><span class="line"></span><br><span class="line">name = "alex"</span><br><span class="line">echo $name</span><br></pre></td></tr></table></figure><p><strong>注意：尽量用${}这种方式，如 ${skill}script,没有{}，则变成$skillscrpit,这是个未赋值的变量</strong></p><ul><li>只读变量 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">url="www.baidu.com"</span><br><span class="line">readonly url</span><br><span class="line">url="www.google.com"</span><br></pre></td></tr></table></figure></li></ul><p><em>提示信息</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3.sh: 4: 3.sh: url: is read only</span><br></pre></td></tr></table></figure><ul><li>删除变量<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">unset [变量名]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">url="www.baidu.com"</span><br><span class="line">unset url</span><br><span class="line">echo $url</span><br></pre></td></tr></table></figure></li></ul><h3 id="字符串-1"><a href="#字符串-1" class="headerlink" title="字符串"></a>字符串</h3><h4 id="单引号-1"><a href="#单引号-1" class="headerlink" title="单引号"></a>单引号</h4><ul><li>单引号里的任何字符都会原样输出，单引号字符串中的变量是无效的；</li><li>单引号字串中不能出现单独一个的单引号（对单引号使用转义符后也不行），但可成对出现，作为字符串拼接使用<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str='this is string'</span><br></pre></td></tr></table></figure></li></ul><h4 id="双引号数组"><a href="#双引号数组" class="headerlink" title="双引号数组"></a>双引号数组</h4><h4 id="定义数值"><a href="#定义数值" class="headerlink" title="定义数值"></a>定义数值</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">arr_name=(value0,value1,value2,value3,value4)</span><br><span class="line">或</span><br><span class="line">arr_name[0]=value0</span><br><span class="line">arr_name[1]=value1</span><br><span class="line">arr_name[2]=value2</span><br><span class="line">arr_name[2]=value3</span><br><span class="line">arr_name[2]=value4</span><br></pre></td></tr></table></figure><h4 id="读取数值"><a href="#读取数值" class="headerlink" title="读取数值"></a>读取数值</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">&#123;arr_name[n]&#125;// n代表下标</span></span><br><span class="line"></span><br><span class="line">value=$&#123;arr_name[n]&#125;</span><br></pre></td></tr></table></figure><h4 id="获取所有元素"><a href="#获取所有元素" class="headerlink" title="获取所有元素"></a>获取所有元素</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $&#123;arr_name[@]&#125;</span><br></pre></td></tr></table></figure><h4 id="获取数组的长度"><a href="#获取数组的长度" class="headerlink" title="获取数组的长度"></a>获取数组的长度</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">length=$&#123;#arr_name[@]&#125;</span><br><span class="line">或</span><br><span class="line">length=$&#123;#arr_name[*]&#125;</span><br><span class="line">或</span><br><span class="line">length=$&#123;#arr_name[n]&#125;</span><br></pre></td></tr></table></figure><h3 id="shell-注释"><a href="#shell-注释" class="headerlink" title="shell 注释"></a>shell 注释</h3><h4 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a>单行注释</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 注释</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> author： huangzy</span></span><br><span class="line">str="sid"</span><br></pre></td></tr></table></figure><h4 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">:&lt;&lt;EOF</span><br><span class="line">注释内容</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">:&lt;&lt;!</span><br><span class="line">注释内容</span><br><span class="line">!</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">:&lt;&lt;@</span><br><span class="line">注释内容</span><br><span class="line">@</span><br></pre></td></tr></table></figure><h2 id="Shell传递参数"><a href="#Shell传递参数" class="headerlink" title="Shell传递参数"></a>Shell传递参数</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">0// 执行的文件名</span></span><br><span class="line"><span class="meta">$</span><span class="bash">1// 第一个参数</span></span><br><span class="line"><span class="meta">$</span><span class="bash">2// 第二个参数</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"><span class="comment">#// 传递到脚本的参数个数</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">*[只做了解，主要用<span class="variable">$@</span>]// 以一个单字符串显示所有向脚本传递的参数</span></span><br><span class="line">// "$*" 则会显示所有参数"$1 $2...$n"</span><br><span class="line"><span class="meta">$</span><span class="bash">$// 脚本运行的当前进程ID号</span></span><br><span class="line"><span class="meta">$</span><span class="bash">!// 后台运行的最后一个进程的ID号</span></span><br><span class="line"><span class="meta">$</span><span class="bash">@// 与$*相同，但是使用时加引号，并在引号中返回每个参数</span></span><br><span class="line">// "$@" 则显示参数"$1" "$2"..."$n"</span><br><span class="line"><span class="meta">$</span><span class="bash">-// 显示shell使用的当前选项，与<span class="built_in">set</span>命令功能相同</span></span><br><span class="line"><span class="meta">$</span><span class="bash">?// 显示最后命令的退出状态</span></span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ul><li><p>算术运算符</p></li><li><p>关系运算符</p></li><li><p>布尔运算符</p></li><li><p>字符串运算符</p></li><li><p>文件测试运算符</p></li></ul><p>通过expr来支持运算</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">val = `expr 2+2`</span><br><span class="line">echo "两数和为：$val"</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">+</span><br><span class="line">-</span><br><span class="line">*</span><br><span class="line">/</span><br><span class="line">%</span><br><span class="line">=</span><br><span class="line">==</span><br><span class="line">!=</span><br></pre></td></tr></table></figure><p><strong>注意：条件表达式要放在方括号之间，并且要有空格，例如: [$a==$b]是错误的，必须写成 [ $a == $b ]</strong></p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-eq检测两个数是否相等，相等返回 true。</span><br><span class="line">-ne 检测两个数是否不相等，不相等返回 true。</span><br><span class="line">-gt 检测左边的数是否大于右边的，如果是，则返回 true。</span><br><span class="line">-lt 检测左边的数是否小于右边的，如果是，则返回 true。</span><br><span class="line">-ge 检测左边的数是否大于等于右边的，如果是，则返回 true。</span><br><span class="line">-le 检测左边的数是否小于等于右边的，如果是，则返回 true。</span><br></pre></td></tr></table></figure><h3 id="echo-命令"><a href="#echo-命令" class="headerlink" title="echo 命令"></a>echo 命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">命令格式</span><br><span class="line">echo string</span><br></pre></td></tr></table></figure><ol><li><p>显示普通字符串</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo "It is a test"</span><br></pre></td></tr></table></figure></li><li><p>显示转义字符</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo "\"It is a test\""</span><br></pre></td></tr></table></figure></li><li><p>显示变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name="xiaoming"</span><br><span class="line">echo "who is $name"</span><br></pre></td></tr></table></figure></li><li><p>显示换行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">echo -e "OK！ \n"  </span><br><span class="line">echo "It is a test"</span><br><span class="line"></span><br><span class="line">echo -e "OK！ \c"  # -e 开启转义 \c 不换行</span><br><span class="line">echo "It is a test"</span><br></pre></td></tr></table></figure></li><li><p>不换行显示</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -n "ok"</span><br></pre></td></tr></table></figure></li><li><p>不转义字符</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo '$name\"\n'# 单引号内不进行任何转义</span><br></pre></td></tr></table></figure></li><li><p>显示执行结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo `date`</span><br><span class="line">echo `cal`</span><br></pre></td></tr></table></figure></li></ol><h3 id="printf-命令"><a href="#printf-命令" class="headerlink" title="printf 命令"></a>printf 命令</h3><p>使用语法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">printf  format-string  [arguments...]</span><br><span class="line"><span class="meta">#</span><span class="bash"> format-string 为格式控制字符</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> arguments 为参数列表</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">%</span><span class="bash">s %c %d %f 都是格式替代符</span></span><br><span class="line"></span><br><span class="line"><span class="meta">%</span><span class="bash">-10s指一个宽度为10个字符（-表示左对齐，没有则是右对齐）</span></span><br><span class="line"><span class="meta">%</span><span class="bash">-4.2f指格式化为<span class="built_in">float</span>类型的小数，其中.2表示保留2位小数</span></span><br></pre></td></tr></table></figure><p><strong>格式只指定了一个参数，但多出的参数仍然会按照该格式输出，format-string 被重用</strong></p><p><em>如果没有 arguments，那么 %s 用NULL代替，%d 用 0 代替，%f用0.000000代替，%c则直接是空代替</em></p><h4 id="转义的字符"><a href="#转义的字符" class="headerlink" title="转义的字符"></a>转义的字符</h4><table><thead><tr><th>\a</th><th>警告字符，通常为ASCII的BEL字符</th></tr></thead><tbody><tr><td>\b</td><td>后退</td></tr><tr><td>\c</td><td>抑制（不显示）输出结果中任何结尾的换行字符（只在%b格式指示符控制下的参数字符串中有效），而且，任何留在参数里的字符、任何接下来的参数以及任何留在格式字符串中的字符，都被忽略</td></tr><tr><td>\f</td><td>换页（formfeed）</td></tr><tr><td>\n</td><td>换行</td></tr><tr><td>\r</td><td>回车（Carriage return）</td></tr><tr><td>\t</td><td>水平制表符</td></tr><tr><td>\v</td><td>垂直制表符</td></tr><tr><td>\</td><td>一个字面上的反斜杠字符</td></tr><tr><td>\ddd</td><td>表示1到3位数八进制值的字符。仅在格式字符串中有效</td></tr><tr><td>\0ddd</td><td>表示1到3位的八进制值字符</td></tr></tbody></table><h3 id="test命令"><a href="#test命令" class="headerlink" title="test命令"></a>test命令</h3><p><strong>一般用在if判断里</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">cd ~/tmp</span><br><span class="line">if test -d ./11.sh</span><br><span class="line">then</span><br><span class="line">echo "is dir"</span><br><span class="line">else</span><br><span class="line">echo "is not dir"</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-eq | -ne | -gt | -ge | -lt | -le</span><br><span class="line">实际判断规则与运算符中介绍一致</span><br></pre></td></tr></table></figure><h4 id="文件测试"><a href="#文件测试" class="headerlink" title="文件测试"></a>文件测试</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-e 文件名如果文件存在则为真</span><br><span class="line">-r 文件名如果文件存在且可读则为真</span><br><span class="line">-w 文件名如果文件存在且可写则为真</span><br><span class="line">-x 文件名如果文件存在且可执行则为真</span><br><span class="line">-s 文件名如果文件存在且至少有一个字符则为真</span><br><span class="line">-d 文件名如果文件存在且为目录则为真</span><br><span class="line">-f 文件名如果文件存在且为普通文件则为真</span><br><span class="line">-c 文件名如果文件存在且为字符型特殊文件则为真</span><br><span class="line">-b 文件名如果文件存在且为块特殊文件则为真</span><br><span class="line">! test -e 文件名 如果文件不存在则为真    [对第一种情况取反]</span><br></pre></td></tr></table></figure><h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3><h4 id="if-else"><a href="#if-else" class="headerlink" title="if else"></a>if else</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if condition</span><br><span class="line">then</span><br><span class="line">cmd1</span><br><span class="line">cmd2</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">if condition</span><br><span class="line">then</span><br><span class="line">cmd1</span><br><span class="line">cmd2</span><br><span class="line">cmd3</span><br><span class="line">else</span><br><span class="line">cmd1</span><br><span class="line">cmd2</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h4 id="if-elif-else"><a href="#if-elif-else" class="headerlink" title="if elif else"></a>if elif else</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">if condition</span><br><span class="line">then</span><br><span class="line">cmd1</span><br><span class="line">cmd2</span><br><span class="line">cmd3</span><br><span class="line">elif condition</span><br><span class="line">then</span><br><span class="line">cmd1</span><br><span class="line">cmd2</span><br><span class="line">cmd3</span><br><span class="line">else</span><br><span class="line">cmd1</span><br><span class="line">cmd2</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h4 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">for var in item1 item2 ... itemN</span><br><span class="line">do</span><br><span class="line">    command1</span><br><span class="line">    command2</span><br><span class="line">    ...</span><br><span class="line">    commandN</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h4 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">while 条件:</span><br><span class="line">do</span><br><span class="line">command</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h4 id="until循环"><a href="#until循环" class="headerlink" title="until循环"></a>until循环</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">until condition</span><br><span class="line">do</span><br><span class="line">command</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h4 id="case循环"><a href="#case循环" class="headerlink" title="case循环"></a>case循环</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">case i in</span><br><span class="line">opt1)</span><br><span class="line">command1</span><br><span class="line">    command2</span><br><span class="line">    ...$#传递到脚本的参数个数</span><br><span class="line"><span class="meta">$</span><span class="bash">*以一个单字符串显示所有向脚本传递的参数</span></span><br><span class="line"><span class="meta">$</span><span class="bash">$脚本运行的当前进程ID号</span></span><br><span class="line"><span class="meta">$</span><span class="bash">!后台运行的最后一个进程的ID号</span></span><br><span class="line"><span class="meta">$</span><span class="bash">@与$*相同，但是使用时加引号，并在引号中返回每个参数。</span></span><br><span class="line"><span class="meta">$</span><span class="bash">-显示Shell使用的当前选项，与<span class="built_in">set</span>命令功能相同。</span></span><br><span class="line"><span class="meta">$</span><span class="bash">?显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误</span></span><br><span class="line">    ;;</span><br><span class="line">opt2)</span><br><span class="line">command1</span><br><span class="line">command2</span><br><span class="line">...</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p><strong>注意:case的语法和C family语言差别很大，它需要一个esac（就是case反过来）作为结束标记，每个case分支用右圆括号，用两个分号表示break。</strong></p><h4 id="break-continue"><a href="#break-continue" class="headerlink" title="break  continue"></a>break  continue</h4><blockquote><p>和C、Java一样，break是退出整个循环，continue是退出单次循环</p></blockquote><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><table><thead><tr><th>$#</th><th>传递到脚本的参数个数</th></tr></thead><tbody><tr><td>$*</td><td>以一个单字符串显示所有向脚本传递的参数</td></tr><tr><td>$$</td><td>脚本运行的当前进程ID号</td></tr><tr><td>$!</td><td>后台运行的最后一个进程的ID号</td></tr><tr><td>$@</td><td>与$*相同，但是使用时加引号，并在引号中返回每个参数。</td></tr><tr><td>$-</td><td>显示Shell使用的当前if选项，与set命令功能相同。</td></tr><tr><td>$?</td><td>显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误</td></tr></tbody></table><h3 id="输入、输出重定向"><a href="#输入、输出重定向" class="headerlink" title="输入、输出重定向"></a>输入、输出重定向</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">command &gt; file# 输出重定向到file</span><br><span class="line">command &lt; file# 输入重定向到file</span><br><span class="line">command &gt;&gt; file# 输出追加到file里</span><br><span class="line">n &gt; file# 将文件描述符为n的文件重定向到file</span><br><span class="line">n &gt;&gt; file# 将文件描述符为n</span><br><span class="line">n &gt;&amp; m# 将输出文件 m 和 n 合并。</span><br><span class="line">n &lt;&amp; m# 将输入文件 m 和 n 合并。</span><br><span class="line">&lt;&lt; tag</span><br></pre></td></tr></table></figure><p><strong>注意：文件描述符 0 通常是标准输入（STDIN），1 是标准输出（STDOUT），2 是标准错误输出（STDERR）</strong></p>]]></content>
      
      
      <categories>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> shell </tag>
            
            <tag> bash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git使用手记</title>
      <link href="/2019/09/15/git%E4%BD%BF%E7%94%A8%E6%89%8B%E8%AE%B0/"/>
      <url>/2019/09/15/git%E4%BD%BF%E7%94%A8%E6%89%8B%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>Git 手记 （持续更新）</p><h2 id="git-提交后，撤销提交"><a href="#git-提交后，撤销提交" class="headerlink" title="git 提交后，撤销提交"></a>git 提交后，撤销提交</h2><a id="more"></a><p>原因：</p><ul><li><p>由于之前Ubuntu系统备份在NTFS文件系统的缘故，导致昨晚git提交时没有注意到权限，从而更改了整个handbook项目的文件权限。</p></li><li><p>今天在提交时突然误按了回车，致使提交内容不完整。</p></li></ul><p>事故 预防和解决方案：</p><ul><li><p>在每次<code>git push</code>之前先<code>git status</code>查看之前的commit有没有出问题</p></li><li><p>发现问题时利用<code>git reset</code>来撤销提交，具体方式如下：</p><blockquote><p><code>git reset --soft HEAD^</code> 撤销了前一次提交</p><p><strong>仅仅撤销了commit，而代码的改动并没有撤销</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; HEAD^   表示上一个版本</span><br><span class="line">&gt; 其与HEAD~1等价</span><br><span class="line">&gt; </span><br><span class="line">&gt; HEAD~2   表示上两个版本</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> git reset --mixed</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">               不删除工作空间的代码改动，撤销 git commit和 git add</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">           --soft</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">               不删除空间代码，只撤销 git commit，不撤销 git add</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">           --hard</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">               删除空间代码，并撤销 git commit 和 git add ，完全恢复到上一次commit状态</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Version Control </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDBC连接数据库基本介绍</title>
      <link href="/2019/09/15/JDBC%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/"/>
      <url>/2019/09/15/JDBC%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h1><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li><p>注册驱动/加载驱动</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br></pre></td></tr></table></figure></li><li><p>获取连接对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// getConnection(url jdbc:mysql://[hostname]:[port]/[dbname]/[encode_format])</span></span><br><span class="line">Connection conn = <span class="keyword">null</span>;<span class="comment">//需要在try块外声明,否则在finally里无法关闭</span></span><br><span class="line"><span class="comment">//获取连接器对象</span></span><br><span class="line">conn = DriverManager.getConnection(<span class="string">"jdbc:mysql://127.0.0.1:3306/bookmanagement?useUnicode=true&amp;charaterEncoding=utf8"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>);</span><br></pre></td></tr></table></figure></li></ol><a id="more"></a><p><em>注：导包导的是java.sql.Connection、java.sql.DriverManager</em></p><ol start="3"><li>获取sql执行器对象Statement/PreparedStatement</li></ol><p><strong>Statement后期不会常用，有sql注入的风险</strong></p><p>Statement写法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Statement st = <span class="keyword">null</span>;<span class="comment">//需要在try块外声明,否则在finally里无法关闭</span></span><br><span class="line"><span class="comment">//下面代码需要放在try块里</span></span><br><span class="line">st = conn.createStatement();</span><br></pre></td></tr></table></figure><p>PreparedStatement写法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PreparedStatement pst = <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><ol start="4"><li>执行并返回处理结果<blockquote><p>增、删、改、返回的受影响的行数 int整数值executeUpdate()查询，返回的结果及对象ResultSet对象，返回的是一个集合executeQuery()</p></blockquote></li></ol><p><strong>Statement后期不会常用，有sql注入的风险</strong><br>Statement写法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ResultSet rs = <span class="keyword">null</span>;<span class="comment">//需要在try块外声明,否则在finally里无法关闭</span></span><br><span class="line"><span class="comment">//下面代码需要放在try块里</span></span><br><span class="line">String sql = <span class="string">"select * from bookmanager"</span>;</span><br><span class="line">rs = st.executeQuery(sql);</span><br><span class="line"><span class="keyword">while</span> (rs.next)&#123;</span><br><span class="line">System.out.println(rs.getInt(<span class="string">"t_stuNo"</span>+<span class="string">"\t"</span>+rs.getString(<span class="string">"t_stuName"</span>)</span><br><span class="line">                       +<span class="string">"\t"</span>+rs.getInt(<span class="string">"t_classId"</span>)+<span class="string">"\t"</span>+rs.getInt(<span class="string">"t_score"</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PreparedStatement写法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//获取sql执行器对象</span></span><br><span class="line">String sql = <span class="string">"insert into t_user(t_userName,t_pwd) values(?,?)"</span>;</span><br><span class="line">pst = conn.preparedStatement(sql);</span><br><span class="line"><span class="comment">//设置占位符</span></span><br><span class="line">pst.setString(<span class="number">1</span>,username);</span><br><span class="line">pst.setString(<span class="number">2</span>,pwd);</span><br><span class="line"><span class="comment">//执行并返回处理结果</span></span><br><span class="line">rs.pst.executeQuery();</span><br></pre></td></tr></table></figure><ol start="5"><li>释放资源<blockquote><p>关闭顺序1: ResultSet rs —&gt; Statement/PreparedStatement —&gt; Connection（查询的关闭）</p><p>关闭顺序2: Statement/PreparedStatement —&gt; Connection (增，删，改的关闭)</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 每一个需要异常捕获</span></span><br><span class="line"><span class="keyword">if</span> (rs != <span class="keyword">null</span>)&#123;</span><br><span class="line">rs.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (st != <span class="keyword">null</span>)&#123;</span><br><span class="line">st.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (conn != <span class="keyword">null</span>)&#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (rs != <span class="keyword">null</span>)&#123;</span><br><span class="line">rs.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (pst != <span class="keyword">null</span>)&#123;</span><br><span class="line">pst.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (conn != <span class="keyword">null</span>)&#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JdbcUtil"><a href="#JdbcUtil" class="headerlink" title="JdbcUtil"></a>JdbcUtil</h3><p>需要定义下面两个属性：</p><ul><li>属性1 ： DataSource ds = null</li><li>属性2 ： ThreadLocal<connection> threadLocal = new  ThreadLocal<connection>();</connection></connection></li></ul><ol><li>静态代码块中（加载配置文件、从连接池中拿数据源对象，</li><li>获取连接对象并存储在线程里</li><li>关闭连接对象，移除线程</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> DataSource ds = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> ThreadLocal threadLocal = <span class="keyword">new</span> ThreadLocal();</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">    Properties p = <span class="keyword">new</span> Properties();</span><br><span class="line">    p.load(JdbcUtil.class.getClassLoader.getResourceAsStream(<span class="string">"datasource.properties"</span>));</span><br><span class="line"></span><br><span class="line">    ds = BaseDataSourceFactory.createDataSource(p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Connection conn = threadLocal.get();</span><br><span class="line">    <span class="keyword">if</span>(conn == <span class="keyword">null</span>)&#123;</span><br><span class="line">        conn = ds.getConnection();</span><br><span class="line">    threadLocal.set(conn);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> threadLocal.get();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Connection conn = threadLocal.get();</span><br><span class="line">    <span class="keyword">if</span> (conn != <span class="keyword">null</span>)&#123;</span><br><span class="line">            conn.close();</span><br><span class="line">    threadLocal.remove();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet rs,PreparedStatement pst)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (rs != <span class="keyword">null</span>)&#123;</span><br><span class="line">        rs.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (pst != <span class="keyword">null</span>)&#123;</span><br><span class="line">        pst.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="JdbcTemplate"><a href="#JdbcTemplate" class="headerlink" title="JdbcTemplate"></a>JdbcTemplate</h3><ul><li>这个类主要有三个方法：</li></ul><ol><li>设置sql语句中的参数  主要参数pst 和 Object…params</li><li>实现增、删、改，即 executeUpdate()  主要参数 sql 、Object…params</li><li>实现查，即executeQuery() 主要参数 sql 、RowMapper mapper、Object…params</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcTemplate</span></span>&#123;</span><br><span class="line"><span class="comment">//1.设置占位符</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setParams</span><span class="params">(PreparedStatement pst,Object...params)</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line"><span class="keyword">if</span> (params!=<span class="keyword">null</span> &amp;&amp; params.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; params.length;i++)&#123;</span><br><span class="line">pst.setObject(i+<span class="number">1</span>,params[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//增、删、改</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">executeUpdate</span><span class="params">(String sql,Object..params)</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//获取连接对象</span></span><br><span class="line">Connection conn = JdbcUtil.getConnection();</span><br><span class="line">PreparedStatement pst = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//获取SQL执行器</span></span><br><span class="line">pst = conn.perparedStatement(sql);</span><br><span class="line"></span><br><span class="line">setParams(pst,params);</span><br><span class="line">count = pst.executeUpdate();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line"><span class="keyword">throw</span> e;</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">JdbcUtil.close(<span class="keyword">null</span>,pst);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List <span class="title">executeQuery</span><span class="params">(String sql,RowMapper mapper,object..params)</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">List list = <span class="keyword">new</span> List();</span><br><span class="line"><span class="comment">//获取连接对象</span></span><br><span class="line">Connection conn = JdbcUtil.getConnection();</span><br><span class="line">PreparedStatement pst = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//获取SQL执行器</span></span><br><span class="line">pst = conn.perparedStatement(sql);</span><br><span class="line"></span><br><span class="line">setParams(pst,params);</span><br><span class="line">rs = pst.executeQuery();</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">Object obj = mapper.mapperObj(rs);</span><br><span class="line">list.add(obj);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line"><span class="keyword">throw</span> e;</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">JdbcUtil.close(rs,pst);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jdbc </tag>
            
            <tag> java </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单节点和分布式登录会话问题</title>
      <link href="/2019/09/15/%E5%8D%95%E8%8A%82%E7%82%B9%E5%92%8C%E5%88%86%E5%B8%83%E5%BC%8F%E7%99%BB%E5%BD%95%E4%BC%9A%E8%AF%9D%E9%97%AE%E9%A2%98/"/>
      <url>/2019/09/15/%E5%8D%95%E8%8A%82%E7%82%B9%E5%92%8C%E5%88%86%E5%B8%83%E5%BC%8F%E7%99%BB%E5%BD%95%E4%BC%9A%E8%AF%9D%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="服务端登录验证问题简解"><a href="#服务端登录验证问题简解" class="headerlink" title="服务端登录验证问题简解"></a>服务端登录验证问题简解</h2><ol><li><p>单服务器 Tomcat</p><ul><li>session保存浏览器和服务器的会话信息</li><li>用户登录后，生成一个session，会分配一个SESSIONID</li><li>客户端会把session保存到cookie中，每次发送请求是会携带sessionI让服务端去校验</li></ul></li><li><p>分布式session共享</p><ul><li><p>Tomcat支持session共享，但会有广播风暴</p></li><li><p>使用redis存储token</p><p>服务端通过UUID，生成64或128位token，存入redis，然后返回给客户端</p><p>客户端之后的每次请求都会携带token</p></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tomcat </tag>
            
            <tag> web </tag>
            
            <tag> distributed </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis速成笔记</title>
      <link href="/2019/09/15/Redis%E9%80%9F%E6%88%90%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/09/15/Redis%E9%80%9F%E6%88%90%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis下载和安装"><a href="#Redis下载和安装" class="headerlink" title="Redis下载和安装"></a>Redis下载和安装</h1><h2 id="Redis简介"><a href="#Redis简介" class="headerlink" title="Redis简介"></a>Redis简介</h2><blockquote><p>Redis 是完全开源免费的，使用ANSI C语言编写，支持网络，遵守BSD协议，是一个高性能的key-value数据库。</p></blockquote><a id="more"></a><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><ul><li><p><a href="https://github.com/microsoftarchive/redis/releases" target="_blank" rel="noopener">Windows (非官方)</a></p></li><li><p><a href="https://redis.io/download" target="_blank" rel="noopener">Unix</a></p></li></ul><p>安装</p><ul><li><p>Linux</p><blockquote><p>make    //简单编译</p><p>make MALLOC=libc    //编译添加malloc加速引擎</p><p>二进制可执行文件在./src目录下</p></blockquote></li></ul><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="5种常见数据类型"><a href="#5种常见数据类型" class="headerlink" title="5种常见数据类型"></a>5种常见数据类型</h3><ul><li>String （字符串）</li><li>Hash （哈希）</li><li>List （列表）</li><li>Set （集合）</li><li>zset （sorted set ：有序集合）</li></ul><h4 id="String-字符串"><a href="#String-字符串" class="headerlink" title="String 字符串"></a>String 字符串</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> &#123;key&#125; &#123;value&#125;    // 设置 key=value</span><br><span class="line">get &#123;key&#125;    // 获取key对应的值</span><br><span class="line">append &#123;key&#125; &#123;value&#125;    // 追加值到一个键</span><br><span class="line">incr &#123;key&#125;    // 增加key的值加一次</span><br><span class="line">rename &#123;key&#125; &#123;newkeyname&#125;    // 重命名key的值</span><br></pre></td></tr></table></figure><h4 id="Hash-哈希"><a href="#Hash-哈希" class="headerlink" title="Hash 哈希"></a>Hash 哈希</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hset &#123;key&#125; &#123;field&#125; &#123;value&#125;   // 设置 &#123;key&#125;的&#123;field&#125;属性的值为&#123;value&#125;</span><br><span class="line">hget &#123;key&#125; &#123;field&#125;    // 获取&#123;key&#125;的&#123;field&#125;属性的值</span><br><span class="line">hgetall person    // 获取&#123;key&#125;的所有属性的值</span><br></pre></td></tr></table></figure><h4 id="List-列表"><a href="#List-列表" class="headerlink" title="List 列表"></a>List 列表</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">lpush list1 aa1     // 从右边加</span><br><span class="line">lpush list1 aa1</span><br><span class="line">rpush list1 word// 从左边加</span><br><span class="line"></span><br><span class="line">lrange &#123;key&#125; &#123;start_index&#125; &#123;stop_index&#125;</span><br><span class="line">lrange list1 0 2    // 将list1中的值取出，取出范围0~2</span><br></pre></td></tr></table></figure><h4 id="Set-集合"><a href="#Set-集合" class="headerlink" title="Set 集合"></a>Set 集合</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sadd &#123;key&#125; &#123;member&#125;    // 添加member到key的集合中</span><br><span class="line">smembers &#123;key&#125;     // 查看名为key的集合成员</span><br><span class="line">sismember &#123;key&#125; &#123;member1&#125; // 确定member1是否在key中存在</span><br></pre></td></tr></table></figure><h4 id="zset-Sorted-Set-有序集合"><a href="#zset-Sorted-Set-有序集合" class="headerlink" title="zset(Sorted Set) 有序集合"></a>zset(Sorted Set) 有序集合</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zadd &#123;key&#125; &#123;score&#125; &#123;member&#125;</span><br></pre></td></tr></table></figure><p>例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">zadd vicker 0 redis</span><br><span class="line">zadd vicker 0 mongodb</span><br><span class="line">zadd vicker 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Memory Database </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux SKill(Linux技巧)</title>
      <link href="/2019/09/15/Linux-SKill-Linux%E6%8A%80%E5%B7%A7/"/>
      <url>/2019/09/15/Linux-SKill-Linux%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="1-apt"><a href="#1-apt" class="headerlink" title="1. apt"></a>1. apt</h2><ul><li>静默更新</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update -qq</span><br></pre></td></tr></table></figure><a id="more"></a><ul><li>静默下载安装</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -q -y vim</span><br></pre></td></tr></table></figure><ul><li>处理安装时的错误</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get intall -f</span><br></pre></td></tr></table></figure><h2 id="2-aptitude"><a href="#2-aptitude" class="headerlink" title="2. aptitude"></a>2. aptitude</h2><p>当遇到大量依赖包无法处理时。使用aptitude处理</p><p>其具有强大是依赖处理问题</p><p><strong>使用方式</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">aptitude</span><br><span class="line">update  更新源</span><br><span class="line">install 安装软件包</span><br><span class="line">remove  卸载软件包</span><br><span class="line">purge   卸载软件包并删除配置文件</span><br><span class="line">search  搜索软件包</span><br><span class="line">show    显示软件包的详细信息</span><br></pre></td></tr></table></figure><h2 id="3-利用cat添加文本文件"><a href="#3-利用cat添加文本文件" class="headerlink" title="3. 利用cat添加文本文件"></a>3. 利用cat添加文本文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:~# cat &gt; /etc/profile.d/env.sh</span><br><span class="line">export EDITOR=vim     [Enter ， Ctrl+C]</span><br><span class="line">^C</span><br><span class="line">root@localhost:~# cat /etc/profile.d/env.sh</span><br><span class="line">export EDITOR=vim</span><br></pre></td></tr></table></figure><h2 id="4-apt卸载文件时，出现的问题"><a href="#4-apt卸载文件时，出现的问题" class="headerlink" title="4. apt卸载文件时，出现的问题"></a>4. apt卸载文件时，出现的问题</h2><blockquote><p>在卸载之前安装的mysql 或者 mariadb后，再次安装mysql或者mariadb时，如果现在安装的版本地低于之前的安装，要删除/etc/mysql和/usr/lib/mysql 中的文件，否则会出现错误导致安装不上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 建议在每次利用包管理卸载时，使用 purge 参数，可以彻底移出 安装包相关文件</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> apt remove --purge [PackageName]</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> apt-get purge [PackageName]</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> apt-get autoremove --purge</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><h2 id="5-Ubuntu-输入正确密码却无法进入桌面"><a href="#5-Ubuntu-输入正确密码却无法进入桌面" class="headerlink" title="5. Ubuntu 输入正确密码却无法进入桌面"></a>5. Ubuntu 输入正确密码却无法进入桌面</h2><blockquote><p>查询网上，得出解决方案</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> 原因：用户主目录中的.Xauthority的所有者变成了root，导致用户没有.Xauthority权限startx无法读入display信息</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> -rw-------  1 root   root         466 8月  19 09:54 .Xauthority</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="comment"># sudo chown ts:ts /home/ts/.Xauthority</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> -rw-------  1 ts   ts         466 8月  19 09:54 .Xauthority</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><blockquote><p>更改所有者解决</p></blockquote><h2 id="6-获取Ubuntu本地IP地址"><a href="#6-获取Ubuntu本地IP地址" class="headerlink" title="6. 获取Ubuntu本地IP地址"></a>6. 获取Ubuntu本地IP地址</h2><ul><li><p>通用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmpip=$(ip a | grep inet | sed -e 's/^.*inet//g' | sed -e '1,2 d' | sed -e '$d');echo $&#123;tmpip%%/*&#125;</span><br></pre></td></tr></table></figure></li><li><p>Ubuntu 16.04</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eno1 | grep inet | sed -e s/^.*addr:// | sed -e s/B.*$// | sed -e '$d'</span><br></pre></td></tr></table></figure></li><li><p>Ubuntu 18.04</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eno1 | grep inet | sed -e s/^.*inet// | sed -e s/netmask.*$// | sed -e '$d'</span><br></pre></td></tr></table></figure></li></ul><h2 id="7-修改-etc-sudoers-文件格式错误，导致无法使用sudo"><a href="#7-修改-etc-sudoers-文件格式错误，导致无法使用sudo" class="headerlink" title="7. 修改/etc/sudoers 文件格式错误，导致无法使用sudo"></a>7. 修改/etc/sudoers 文件格式错误，导致无法使用sudo</h2><ul><li><p>解决方式一</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su -</span><br><span class="line">登录到root账户修改/etc/sudoers到原来状态</span><br><span class="line">[前提：设置过root密码]</span><br></pre></td></tr></table></figure></li><li><p>解决方式二</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">重启机器在开机准备进入系统时按Shift键进入到grub恢复模式，然后在root环境下修改/etc/sudoers文件到原来状态，然后重启机器</span><br></pre></td></tr></table></figure></li></ul><h2 id="8-LVM修改卷组名后忘记修改fstab，导致重启失败"><a href="#8-LVM修改卷组名后忘记修改fstab，导致重启失败" class="headerlink" title="8. LVM修改卷组名后忘记修改fstab，导致重启失败"></a>8. LVM修改卷组名后忘记修改fstab，导致重启失败</h2><blockquote><p>由于修改卷组名后，/etc/fstab未做对应得修改使系统重启时无法挂载逻辑卷<br>系统不停的扫描导致重启失败</p></blockquote><ul><li>解决方式</li></ul><ol><li>重启机器在开机准备进入系统时按Shift键进入到高级启动模式，按e键，修改grub启动文件将对应得卷组名改正</li><li>再进入恢复模式进root账户修改/etc/fstab文件和其他启动相关的文件</li></ol><h2 id="9-Linux-apt安装弹窗设置干扰自动化安装"><a href="#9-Linux-apt安装弹窗设置干扰自动化安装" class="headerlink" title="9. Linux apt安装弹窗设置干扰自动化安装"></a>9. Linux apt安装弹窗设置干扰自动化安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo debconf-set-selections &lt;&lt;&lt; '弹窗相关的设置信息'</span><br></pre></td></tr></table></figure><p>Example：</p><ul><li>LDAP</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">debconf-set-selections &lt;&lt;&lt; 'slapd slapd/internal/adminpw password mypass'</span><br><span class="line">debconf-set-selections &lt;&lt;&lt; 'slapd slapd/internal/generated_adminpw password mypass'</span><br><span class="line">debconf-set-selections &lt;&lt;&lt; 'slapd slapd/password1 password mypass'</span><br><span class="line">debconf-set-selections &lt;&lt;&lt; 'slapd slapd/password2 password mypass'</span><br></pre></td></tr></table></figure><ul><li>MySQL</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">debconf-set-selections &lt;&lt;&lt; 'mysql-server-5.7 mysql-server/root_password password mypass'</span><br><span class="line">debconf-set-selections &lt;&lt;&lt; 'mysql-server-5.7 mysql-server/root_password_again password mypass'</span><br></pre></td></tr></table></figure><h2 id="10-vim快捷注释方法"><a href="#10-vim快捷注释方法" class="headerlink" title="10. vim快捷注释方法"></a>10. vim快捷注释方法</h2><p>批量插入字符快捷键：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+v进入VISUAL BLOCK（可视块）模式，按 j （向下选取列）或者 k （向上选取列），再按Shift + i 进入编辑模式然后输入你想要插入的字符（任意字符），再按两次Esc就可以实现批量插入字符，不仅仅实现批量注释而已。</span><br></pre></td></tr></table></figure><p>批量删除字符快捷键：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+v进入VISUAL BLOCK（可视块）模式，按 j （向下选取列）或者 k （向上选取列），直接（不用进入编辑模式）按 x 或者 d 就可以直接删去，再按Esc退出</span><br></pre></td></tr></table></figure><h2 id="11-mariadb普通用户无法登录的问题"><a href="#11-mariadb普通用户无法登录的问题" class="headerlink" title="11. mariadb普通用户无法登录的问题"></a>11. mariadb普通用户无法登录的问题</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">是由于mariadb在10版本后mysql库的user表中plugin字段默认为unix<span class="emphasis">_socket所导致的将其改为mysql_</span>native_password则解决</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> mysql; </span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> <span class="keyword">plugin</span>=<span class="string">'mysql_native_password'</span> <span class="keyword">where</span> <span class="keyword">User</span>=<span class="string">'root'</span>;</span><br></pre></td></tr></table></figure><h2 id="12-Docker修改镜像默认存储位置"><a href="#12-Docker修改镜像默认存储位置" class="headerlink" title="12. Docker修改镜像默认存储位置"></a>12. Docker修改镜像默认存储位置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>在其中加入下列内容，注意：内容格式是json格式</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"graph": "/home/$Path"   # $Path表示路径</span><br></pre></td></tr></table></figure><h2 id="13-ln-find-du-sed命令使用简介"><a href="#13-ln-find-du-sed命令使用简介" class="headerlink" title="13. ln,find,du,sed命令使用简介"></a>13. ln,find,du,sed命令使用简介</h2><p>每次想创建软链都会忘了ln -s的前后参数规则，每次都要百度或Google搜一下，实在是烦死了，所以这次干脆记在博客上吧，算是个备忘了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s a文件路径 b文件路径</span><br></pre></td></tr></table></figure><blockquote><p>其中a文件代表你要链接的文件或文件夹路径，也即被链接文件或文件夹路径<br>其中b文件代表将要创建链接的文件，其指向a文件（文件夹）。好比C语言中的指针</p></blockquote><h3 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">使用方法： </span><br><span class="line">find   path   -option   [-print ]   [ -exec  -ok  command ]  &#123;&#125; \;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#####  根据文件名查找 #######</span></span></span><br><span class="line">find / -name filename 再根目录里面搜索文件名为filename的文件</span><br><span class="line">find /home -name "*.txt"</span><br><span class="line">find /home -iname "*.txt"  # 忽略大小写</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#####  根据文件类型查找 #######</span></span></span><br><span class="line">find . -type 类型参数</span><br><span class="line">f 普通文件</span><br><span class="line">l 符号连接 </span><br><span class="line">d 目录 </span><br><span class="line">c 字符设备 </span><br><span class="line">b 块设备 </span><br><span class="line">s 套接字 </span><br><span class="line">p Fifo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#####  根据目录深度查找 #######</span></span></span><br><span class="line">find . -maxdepth 3 -type f  # 最大深度为3</span><br><span class="line">find . -mindepth 2 -type f  # 最小深度为2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">########   根据文件的权限或者大小名字类型进行查找 ###########</span></span></span><br><span class="line"></span><br><span class="line">find . -type f -size (+|-)文件大小 # +表示大于 -表示小于 </span><br><span class="line">b —— 块（512字节） </span><br><span class="line">c —— 字节 </span><br><span class="line">w —— 字（2字节） </span><br><span class="line">k —— 千字节 </span><br><span class="line">M —— 兆字节 </span><br><span class="line">G —— 吉字节</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">########   按照时间查找  ############</span></span></span><br><span class="line"></span><br><span class="line">-atime（+|-）n  # 此选项代表查找出n天以前被读取过的文件。</span><br><span class="line">-mtime（+|-）n  # 此选项代表查找出n天以前文件内容发生改变的文件。</span><br><span class="line">-ctime（+|-）n  # 此选项代表查找出n天以前的文件的属性发生改变的文件。</span><br><span class="line">-newer file  # 此选项代表查找出所有比file新的文件。</span><br><span class="line">-newer file1 ! –newer file2  # 此选项代表查找比file1文件时间新但是没有file2时间新的文件。</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 注意：   </span></span><br><span class="line"><span class="meta">#</span><span class="bash">  n为数字，如果前面没有+或者-号，代表的是查找出n天以前的，但是只是一天之内的范围内发生变化的文件。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  如果n前面有+号，则代表查找距离n天之前的发生变化的文件。如果是减号，则代表查找距离n天之内的所有发生变化的文件。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  -newer file1 ! –newer file2中的!是逻辑非运算符</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">########   按照用户/权限查找  ############</span></span></span><br><span class="line"></span><br><span class="line">-user 用户名：根据文件的属主名查找文件。</span><br><span class="line">-group 组名：根据文件的属组名查找文件。</span><br><span class="line">-uid n：根据文件属主的UID进行查找文件。</span><br><span class="line">-gid n：根据文件属组的GID进行查找文件。</span><br><span class="line">-nouser：查询文件属主在/etc/passwd文件中不存在的文件。</span><br><span class="line">-nogroup：查询文件属组在/etc/group文件中不存在的文件</span><br><span class="line">-perm 777： 查询权限为777的文件</span><br><span class="line"></span><br><span class="line">来自: http://man.linuxde.net/find</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#######  查找时指定多个条件   ############</span></span></span><br><span class="line"></span><br><span class="line">-o：逻辑或，两个条件只要满足一个即可。</span><br><span class="line">-a：逻辑与，两个条件必须同时满足。</span><br><span class="line"></span><br><span class="line">find  /etc -size +2M -a -size -10M</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">########  对查找结果进行处理  #############</span></span></span><br><span class="line">-exec  shell命令  &#123;&#125;  \;</span><br><span class="line">-ok  shell命令  &#123;&#125;  \;</span><br><span class="line">其中-exec就是代表要执行shell命令，后面加的是shell指令，再后面的“&#123;&#125;”表示的是要对前面查询到的结果进行查询，最后的“\；”表示命令结束。需要注意的是“&#123;&#125;”和“\”之间是要有空格的。而-ok选项与-exec的唯一区别就是它在执行shell命令的时候会事先进行询问，-print选项是将结果显示在标准输入上</span><br><span class="line"></span><br><span class="line">find /home -name  “*.txt” -ok ls -l &#123;&#125; \;</span><br><span class="line">find /home -name  “*.txt” -ok rm &#123;&#125; \;</span><br></pre></td></tr></table></figure><h3 id="du"><a href="#du" class="headerlink" title="du"></a>du</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">du dirname # 显示dirname下所有目录及其子目录的大小</span><br><span class="line">-s ： 如果后面是目录，只显示一层</span><br><span class="line">-h : 以能显示的最大单位显示</span><br></pre></td></tr></table></figure><p><strong>初识正则表达式</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">^ : 匹配开头</span><br><span class="line"><span class="meta">$</span><span class="bash"> : 匹配结尾</span></span><br><span class="line">[] ： 范围匹配</span><br><span class="line">[a-z] : 匹配有小写字母</span><br><span class="line">[A-Z] : 匹配所有大写字母</span><br><span class="line">[0-9] : 匹配所有数字</span><br><span class="line">. ： 匹配单个字符</span><br><span class="line">* ： 表示*前面的内容出现0次或多次</span><br><span class="line">+ ： 表示+前面的内容出现1次或多次</span><br><span class="line">? ： 表示？前面的内容出现0次或1次</span><br><span class="line"></span><br><span class="line">cat a.txt |grep hat$ # 匹配以hat结尾的行</span><br><span class="line">cat a.txt |grep ^hat # 匹配以hat开头的行</span><br><span class="line">cat a.txt | grep -E "[0-9]*"  # 匹配有0到多个数字的行</span><br><span class="line">cat a.txt | grep -E "[0-9]+"  # 匹配有至少有1个数字的行</span><br><span class="line">cat a.txt | grep -E "[0-9]？"  # 匹配有0到1个数字的行</span><br></pre></td></tr></table></figure><h3 id="sed-流编辑器，一次处理一行内容"><a href="#sed-流编辑器，一次处理一行内容" class="headerlink" title="sed : 流编辑器，一次处理一行内容"></a>sed : 流编辑器，一次处理一行内容</h3><h4 id="复制代码"><a href="#复制代码" class="headerlink" title="复制代码"></a>复制代码</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed [-nefr] [动作] [文件]</span><br></pre></td></tr></table></figure><h4 id="选项与参数："><a href="#选项与参数：" class="headerlink" title="选项与参数："></a>选项与参数：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-n ：使用安静(silent)模式。在一般 sed 的用法中，所有来自 STDIN 的数据一般都会被列出到终端上。但如果加上 -n 参数后，则只有经过sed 特殊处理的那一行(或者动作)才会被列出来</span><br><span class="line">-e ：直接在命令列模式上进行 sed 的动作编辑</span><br><span class="line">-f ：直接将 sed 的动作写在一个文件内， -f filename 则可以运行 filename 内的 sed 动作</span><br><span class="line">-r ：sed 的动作支持的是延伸型正规表示法的语法。(默认是基础正规表示法语法)</span><br><span class="line">-i ：直接修改读取的文件内容，而不是输出到终端。</span><br></pre></td></tr></table></figure><p><em>动作说明： [n1[,n2]]</em></p><pre><code>动作：n1, n2 ：不一定存在，一般代表选择进行动作的行数，比如，如果我的动作是需要在 10 到 20 行之间进行的，则10,20[动作行为]</code></pre><h4 id="动作："><a href="#动作：" class="headerlink" title="动作："></a>动作：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">a ：新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)</span></span><br><span class="line"><span class="meta">#</span><span class="bash">c ：取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！</span></span><br><span class="line"><span class="meta">#</span><span class="bash">d ：删除，因为是删除啊，所以 d 后面通常不接任何咚咚；</span></span><br><span class="line">sed  "3d"  file  #  删除第三行</span><br><span class="line">sed  "1,3d"  # 删除前三行</span><br><span class="line">sed  "1d;3d;5d"  # 删除1、3、5行</span><br><span class="line">sed  "/^$/d" #删除空行   </span><br><span class="line">sed  "/abc/d" #删除所有含有abc的行</span><br><span class="line">sed  "/abc/，/def/d" #删除abc 和 def 之间的行，包括其自身</span><br><span class="line">sed  "1，/def/d" #删除第一行到 def 之间的行，包括其自身</span><br><span class="line">sed  "/abc/，+3d " # 删除含有abc的行之后，在删除3行</span><br><span class="line">sed  "/abc/，～3d" #从含有abc的行开始，共删除3行</span><br><span class="line">sed  "1~2d"  # 从第1行开始，每2行删除一行， 删除奇数行</span><br><span class="line">sed  "2~2d"  # 从第2行开始，每2行删除一行， 删除奇数行</span><br><span class="line">sed  "\$d"  # 删除最后一行</span><br><span class="line">sed  "/dd\|cc/d"  删除有dd或者cc的行</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">i ：插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)；</span></span><br><span class="line"><span class="meta">#</span><span class="bash">p ：列印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运行</span></span><br><span class="line"></span><br><span class="line">sed -n  "3p"  file  #  显示第三行</span><br><span class="line">sed -n  "1,3p"  # 显示前三行</span><br><span class="line">sed -n  "2,+3p"  # 显示第二行，及后面的三行</span><br><span class="line">sed -n  "\$p"  # 显示最后一行</span><br><span class="line">sed -n "1p;3p;5p"  # 只显示文件1、3、5行</span><br><span class="line">sed -n  "$="  # 显示文件行数</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">s ：替换，可以直接进行取代的工作。通常这个 s 的动作可以搭配正规表示法，例如 1,20s/old/new/g</span></span><br><span class="line"></span><br><span class="line">'s/old/new/g'  </span><br><span class="line"></span><br><span class="line">sed  "s/\(all\)/bb/"</span><br><span class="line">sed -r "s/(all)/bb/"</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> ubuntu </tag>
            
            <tag> debian </tag>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python相关知识点</title>
      <link href="/2019/09/15/python%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
      <url>/2019/09/15/python%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><h2 id="变量的命名格式："><a href="#变量的命名格式：" class="headerlink" title="变量的命名格式："></a>变量的命名格式：</h2><pre><code>1.由数字、字母、下划线组成，不得含有其他特殊字符2.首字母不能为数字3.要注意区分大小写4.变量名不能为保留字(关键字)5.描述性单词命名你的变量，不能用中文、拼音6.驼峰式、下划线分割</code></pre><a id="more"></a><h1 id="数据运算"><a href="#数据运算" class="headerlink" title="数据运算"></a>数据运算</h1><h1 id="数据类型初识"><a href="#数据类型初识" class="headerlink" title="数据类型初识"></a>数据类型初识</h1><h3 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h3><h4 id="整数-int-integer"><a href="#整数-int-integer" class="headerlink" title="整数 int(integer)"></a>整数 int(integer)</h4><pre><code>整型  能表示的长度为-2^30-1~2^30-1.长整型in python3 已经不区分整型和长整型，统一叫整型。</code></pre><h4 id="浮点数-float"><a href="#浮点数-float" class="headerlink" title="浮点数 float"></a>浮点数 float</h4><h4 id="复数-x-yj-x是实部-y是虚部-x，y实际都是实数"><a href="#复数-x-yj-x是实部-y是虚部-x，y实际都是实数" class="headerlink" title="复数  x + yj  x是实部 y是虚部 x，y实际都是实数"></a>复数  x + yj  x是实部 y是虚部 x，y实际都是实数</h4><h4 id="布尔值（bool）"><a href="#布尔值（bool）" class="headerlink" title="布尔值（bool）"></a>布尔值（bool）</h4><pre><code>只有两种状态，分别是    True    真    False   假字符串    salary.isdigit()    计算机中，一切皆为对象    世界万物，皆为对象，一切对象皆可分类 </code></pre><h4 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h4><pre><code>算术运算符：+ - * / // % **赋值运算符：= += -= *= /= //= **= %=比较运算符：&gt; &lt; &gt;= &lt;= != ==逻辑运算符：and   or  not短路运算：当and第一个条件为False后面的就不会计算          当or 第一个条件为True后面的就不会计算优先级：()身份运算符：is    is not成员运算符：in    not in字符格式化输出 占位符 %s s = string       %d d = digit       %f f = float</code></pre><h1 id="循环loop"><a href="#循环loop" class="headerlink" title="循环loop"></a>循环loop</h1><pre><code>有限循环，次数限制无限循环=死循环continue 结束本次循环，继续下一次循环（在多层中，指continue所在的一层的循环）break 跳出整个当前一层循环</code></pre><p>for<br>while<br>break，continue</p><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><h2 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h2><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><h2 id="列表，元组"><a href="#列表，元组" class="headerlink" title="列表，元组"></a>列表，元组</h2><pre><code>    查        索引（下标），都是从0开始        切片        a.count(&apos;@value&apos;) 查某个元素的出现次数        a.index(&apos;@value&apos;) 根据内容找其对应的位置        &apos;xxx&apos; in a    增加        a.append(@object)        a.insert(@index,&apos;@content&apos;)        a.extend 扩展    修改        a[index] = &apos;@new value&apos;        a[start:end] = [1,2,3,4] (其中的数字代表第一二三...个值)    删除        a.remove(&apos;@value&apos;)        a.pop(@index)        del a ,del a[@index]        a.clear()   清空    排序        a.sort()    （默认括号里面的参数reverse=False）从小到大排序        a.sort(reverse = True)  从大到小排序        a.reverse() 倒序    身份判断        type(a) is list购物车程序</code></pre><h2 id="集合（Set）"><a href="#集合（Set）" class="headerlink" title="集合（Set）"></a>集合（Set）</h2><pre><code>不重复的无序的s.add() 添加元素，一个元素s.update()  更新，添加，多个元素s.remove() 删除元素，一个元素s.pop() 删除del s 删除整个集合</code></pre><h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><pre><code>    字典是python中唯一的映射类型，采用键值对应的形式存储的数据类型。    注意：        字典是无序存储的        key必须是可哈希的        可哈希表示key必须是不可变的类型，如：数字，字符串，元组。三级菜单</code></pre><h1 id="深浅拷贝"><a href="#深浅拷贝" class="headerlink" title="深浅拷贝"></a>深浅拷贝</h1><pre><code>1.浅拷贝：只拷贝第一层    import copy   copy.copy2.深拷贝：克隆整个整体    import copy   copy.deepcopy</code></pre><h1 id="函数："><a href="#函数：" class="headerlink" title="函数："></a>函数：</h1><pre><code>1.概念2.创建3.参数4.return5.作用域    B-G-E-L</code></pre><h1 id="装饰器-（函数）"><a href="#装饰器-（函数）" class="headerlink" title="装饰器 （函数）"></a>装饰器 （函数）</h1><h2 id="1-作用域"><a href="#1-作用域" class="headerlink" title="1.作用域"></a>1.作用域</h2><pre><code>B-G-E-L</code></pre><h2 id="2-高阶函数"><a href="#2-高阶函数" class="headerlink" title="2.高阶函数"></a>2.高阶函数</h2><pre><code>1.函数名可以作为参数2.函数名可以作为返回值</code></pre><h2 id="3-闭包"><a href="#3-闭包" class="headerlink" title="3.闭包"></a>3.闭包</h2><h1 id="生成器"><a href="#生成器" class="headerlink" title="生成器"></a>生成器</h1><h2 id="创建生成器的两种方式："><a href="#创建生成器的两种方式：" class="headerlink" title="创建生成器的两种方式："></a>创建生成器的两种方式：</h2><pre><code>1.（x*2 for x in range (10)） &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; generator object2.def f():      yield 2      print(&quot;ok&quot;)      f() &gt;&gt;&gt;&gt;&gt;&gt;generator object yield from iterable本质上等于for item in iterable: yield item的缩写版</code></pre><h2 id="生成器的使用方法"><a href="#生成器的使用方法" class="headerlink" title="生成器的使用方法;"></a>生成器的使用方法;</h2><pre><code>1.next(f()) - - - - - - - - - - 计算出一个值    注意：生成器再创建的时候已经决定了能计算出值个数，调用next的次数超过这个值时就会报StopIteration    遍历所有元素可以通过for循环：        for i in [1,2,3]:            print(i)    for 循环内部做了三件事：        1.调用对象的iter()方法，返回一个迭代器对象        2.while:               try:                   i = next(Iterator)               except StopIteration:                   break 2.send():    f().send(None) # 等价于next(f())</code></pre><h1 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h1><h2 id="满足迭代器协议"><a href="#满足迭代器协议" class="headerlink" title="满足迭代器协议"></a>满足迭代器协议</h2><pre><code>1.内部有next方法2.内部有iter()方法li=[1,2,3]:Iterable (内部有__iter__方法)&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;i = iter(li):List_Iteratornext(i) - - - - - - - - - - 计算出一个值</code></pre><p><strong><em>注意：生成器再创建的时候已经决定了能计算出值个数，调用next的次数超过这个值时就会报StopIteration</em></strong></p><pre><code>遍历所有元素可以通过for循环：    for i in [1,2,3]:        print(i)for 循环内部做了三件事：    1.调用对象的iter()方法，返回一个迭代器对象    2.while:           try:               i = next(Iterator)           except StopIteration:               break</code></pre><h1 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h1><h1 id="time"><a href="#time" class="headerlink" title="time"></a>time</h1><pre><code>time.time()time.sleep()time.strftime()time.striptimetime.gmtime()   :UTC    结构化格式time.localtime()    :本地时间 结构化格式</code></pre><h1 id="datetime"><a href="#datetime" class="headerlink" title="datetime"></a>datetime</h1><pre><code>datetime.datetime.now()print(time.clock()) #返回处理器时间,3.3开始已废弃 , 改成了time.process_time()测量处理器运算时间,不包括sleep时间,不稳定,mac上测不出来print(time.altzone)  #返回与utc时间的时间差,以秒计算\print(time.asctime()) #返回时间格式&quot;Fri Aug 19 11:14:16 2016&quot;,print(time.localtime()) #返回本地时间 的struct time对象格式print(time.gmtime(time.time()-800000)) #返回utc时间的struc时间对象格式print(time.asctime(time.localtime())) #返回时间格式&quot;Fri Aug 19 11:14:16 2016&quot;,print(time.ctime()) #返回Fri Aug 19 12:38:29 2016 格式, 同上日期字符串 转成  时间戳string_2_struct = time.strptime(&quot;2016/05/22&quot;,&quot;%Y/%m/%d&quot;) #将 日期字符串 转成 struct时间对象格式print(string_2_struct)struct_2_stamp = time.mktime(string_2_struct) #将struct时间对象转成时间戳print(struct_2_stamp)将时间戳转为字符串格式print(time.gmtime(time.time()-86640)) #将utc时间戳转换成struct_time格式print(time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;,time.gmtime()) ) #将utc struct_time格式转成指定的字符串格式时间加减import datetimeprint(datetime.datetime.now()) #返回 2016-08-19 12:47:03.941925print(datetime.date.fromtimestamp(time.time()) )  # 时间戳直接转成日期格式 2016-08-19print(datetime.datetime.now() )print(datetime.datetime.now() + datetime.timedelta(3)) #当前时间+3天print(datetime.datetime.now() + datetime.timedelta(-3)) #当前时间-3天print(datetime.datetime.now() + datetime.timedelta(hours=3)) #当前时间+3小时print(datetime.datetime.now() + datetime.timedelta(minutes=30)) #当前时间+30分c_time  = datetime.datetime.now()print(c_time.replace(minute=3,hour=2)) #时间替换%a    Locale’s abbreviated weekday name.%A    Locale’s full weekday name.%b    Locale’s abbreviated month name.%B    Locale’s full month name.%c    Locale’s appropriate date and time representation.%d    Day of the month as a decimal number [01,31].%H    Hour (24-hour clock) as a decimal number [00,23].%I    Hour (12-hour clock) as a decimal number [01,12].%j    Day of the year as a decimal number [001,366].%m    Month as a decimal number [01,12].%M    Minute as a decimal number [00,59].%p    Locale’s equivalent of either AM or PM.    (1)%S    Second as a decimal number [00,61].    (2)%U    Week number of the year (Sunday as the first day of the week) as a decimal number [00,53]. All days in a new year preceding the first Sunday are considered to be in week 0.    (3)%w    Weekday as a decimal number [0(Sunday),6].%W    Week number of the year (Monday as the first day of the week) as a decimal number [00,53]. All days in a new year preceding the first Monday are considered to be in week 0.    (3)%x    Locale’s appropriate date representation.%X    Locale’s appropriate time representation.%y    Year without century as a decimal number [00,99].%Y    Year with century as a decimal number.%z    Time zone offset indicating a positive or negative time difference from UTC/GMT of the form +HHMM or -HHMM, where H represents decimal hour digits and M represents decimal minute digits [-23:59, +23:59].%Z    Time zone name (no characters if no time zone exists).%%    A literal &apos;%&apos; character.</code></pre><h1 id="random"><a href="#random" class="headerlink" title="random"></a>random</h1><pre><code>random.random()random.choice()random.randint()random.randrange()random.uniform()chr()数字按ASCII码转换成字母</code></pre><h1 id="re"><a href="#re" class="headerlink" title="re"></a>re</h1><pre><code>findall():所有结果都返回到一个列表里search():返回匹配到的第一个对象（object），对象可以调用group()返回结果match() :只在字符串的开始,也返回匹配到的第一个对象（object），对象可以调用group()返回结果split() :sub()   :文字替换</code></pre><h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><h2 id="匹配字符"><a href="#匹配字符" class="headerlink" title="匹配字符"></a>匹配字符</h2><h3 id="元字符"><a href="#元字符" class="headerlink" title="元字符:"></a>元字符:</h3><pre><code>.通配符^$*   匹配前面的子表达式零次或多次。例如，zo* 能匹配 &quot;z&quot; 以及 &quot;zoo&quot;。* 等价于{0,}。+   匹配前面的子表达式一次或多次。例如，&apos;zo+&apos; 能匹配 &quot;zo&quot; 以及 &quot;zoo&quot;，但不能匹配 &quot;z&quot;。+ 等价于 {1,}。?   匹配前面的子表达式零次或一次。例如，&quot;do(es)?&quot; 可以匹配 &quot;do&quot; 、 &quot;does&quot; 中的 &quot;does&quot; 、 &quot;doxy&quot; 中的 &quot;do&quot; 。? 等价于 {0,1}。{}  限定符  限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配[]\()|</code></pre><h1 id="random-1"><a href="#random-1" class="headerlink" title="random,"></a>random,</h1><h1 id="json"><a href="#json" class="headerlink" title="json"></a>json</h1><h1 id="pickle"><a href="#pickle" class="headerlink" title="pickle"></a>pickle</h1><h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><h2 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h2><h3 id="特殊作用："><a href="#特殊作用：" class="headerlink" title="特殊作用："></a>特殊作用：</h3><pre><code>在    obj = 类名</code></pre><h3 id="如何创建类"><a href="#如何创建类" class="headerlink" title="如何创建类"></a>如何创建类</h3><pre><code>class 类名：    pass</code></pre><h3 id="创建方法"><a href="#创建方法" class="headerlink" title="创建方法"></a>创建方法</h3><pre><code>构造方法，__init__(self,arg)    obj = 类(&apos;a1&apos;)普通方法    obj= 类(&apos;xxx&apos;)    obj.普通方法名()</code></pre><h2 id="面向对象三大特性之一：封装"><a href="#面向对象三大特性之一：封装" class="headerlink" title="面向对象三大特性之一：封装"></a>面向对象三大特性之一：封装</h2><pre><code>class Bar:    def __init__(self,n,a):        self.name = n        self.age = a        self.xue = &apos;o&apos;b1 = Bar(&apos;mi&apos;,12)b2 = Bar(&apos;oric&apos;,8)</code></pre><h3 id="适用场景："><a href="#适用场景：" class="headerlink" title="适用场景："></a>适用场景：</h3><pre><code>如果多个函数中有一些相同的参数时，转换成面向对象    class DatabaseHelper:        def __init__(self,ip,port,username,pwd):            self.ip = ip            self.port = port            self.username = username            self.pwd =pwd        def add(self,content):            # 利用self中封装的用户名、密码等 连接数据            print(&apos;content&apos;)            # 关闭数据连接        def update(self,content):            # 利用self中封装的用户名、密码等 连接数据            print(&apos;content&apos;)            # 关闭数据连接        def delete(self,content):            # 利用self中封装的用户名、密码等 连接数据            print(&apos;content&apos;)            # 关闭数据连接        def get(self,content):            # 利用self中封装的用户名、密码等 连接数据            print(&apos;content&apos;)            # 关闭数据连接    s1 = DatabaseHelper(&apos;1.0.0.2&apos;,3306,&apos;vk&apos;,&apos;nb&apos;)</code></pre><h2 id="面向对象三大特性之二：继承"><a href="#面向对象三大特性之二：继承" class="headerlink" title="面向对象三大特性之二：继承"></a>面向对象三大特性之二：继承</h2><pre><code>1.继承    class 父类:        pass    class 子类(父类):        pass2.重写    防止执行父类中的方法3.self永远是执行该方法的调用者4.super(子类,self).父类中的方法()  父类名.父类中的方法()5.python中支持多继承    a.左侧优先    b.一条道走到黑    c.同一个根时，根最后执行</code></pre><h2 id="面向对象三大特性之三：多态"><a href="#面向对象三大特性之三：多态" class="headerlink" title="面向对象三大特性之三：多态"></a>面向对象三大特性之三：多态</h2><pre><code>函数的参数需要声明类型（python不需要，java，C#，C++需要）python原生多态</code></pre><h1 id="面向对象中级"><a href="#面向对象中级" class="headerlink" title="====================面向对象中级===================="></a>====================面向对象中级====================</h1><pre><code>class Foo:    def __init__(self,name):        # 普通字段        self.name = name    # 普通方法    def show(self):        print(self.name)obj = Foo(&apos;hu&apos;)obj.nameobj.show()</code></pre><h2 id="类成员："><a href="#类成员：" class="headerlink" title="类成员："></a>类成员：</h2><h3 id="字段"><a href="#字段" class="headerlink" title="字段"></a>字段</h3><pre><code>- 普通字段，保存在对象中，执行时，只能通过对象访问- 静态字段，保存在类中，执行时，可以通过对象访问，也可以通过类访问</code></pre><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><pre><code>- 普通方法，保存在类中，由对象调用 ，self--&gt;对象- 静态方法，保存在类中，由类直接调用- 类方法，保存在类中，由类直接调用，cls--&gt;当前类</code></pre><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><pre><code>如果对象中需要保存一些值，执行某个功能时，需要使用对象中的值 --&gt; 普通方法不需要任何对象中的值 --&gt; 静态方法</code></pre><h3 id="属性、特性"><a href="#属性、特性" class="headerlink" title="属性、特性"></a>属性、特性</h3><pre><code>- 不伦不类</code></pre><p>​<br>​<br>中国的所有省份，用面向对象表示</p><pre><code>class Province:                        # 静态字段，属于类                country = &apos;China&apos;            def __init__(self,name):        # 普通字段，属于对象            self.name = name    henan = Province(&quot;HeNan&quot;)    hebei = Province(&quot;HeBei&quot;)</code></pre><p>​<br>​        hebei.name                        </p><p>​                        </p><h4 id="一、成员修饰符"><a href="#一、成员修饰符" class="headerlink" title="一、成员修饰符"></a>一、成员修饰符</h4><pre><code>公有成员私有成员    __</code></pre><h4 id="二、特殊成员"><a href="#二、特殊成员" class="headerlink" title="二、特殊成员"></a>二、特殊成员</h4><pre><code>__init__    类()自动执行__call__    对象()  类() 自动执行__int__        int(对象)__str__        str(对象)__add____dict__    # 讲对象中的封装的所有内容通过字典的形式返回__getitem__    # 切片(slice类型)或者索引__setitem____delitem____iter__    # 如果类中有__iter__方法，对象--&gt;可迭代对象            # 对象，__iter__()的返回值：迭代器            # for 循环，迭代器,next            # for 循环，可迭代对象，对象，__iter__方法，迭代器，next            # 1、执行lioo对象的类ioo类的 __iter__方法，并获取其返回值            # 2、循环上一步中返回的对象</code></pre><h4 id="三、metaclass，类的祖宗"><a href="#三、metaclass，类的祖宗" class="headerlink" title="三、metaclass，类的祖宗"></a>三、metaclass，类的祖宗</h4><pre><code>a.Python中一切事物皆是对象b.    class Foo:        pass    obj = Foo()    # obj是对象，Foo类    # Foo类也是一个对象，type的对象c.    类都是type类的对象    type(..)    “对象“都是以类的对象 类()</code></pre><h4 id="四、异常处理"><a href="#四、异常处理" class="headerlink" title="四、异常处理"></a>四、异常处理</h4><pre><code>raise Exception(&apos;数据库处理错误。。。&apos;)</code></pre><h4 id="五、反射"><a href="#五、反射" class="headerlink" title="五、反射"></a>五、反射</h4><h4 id="六、单例模式"><a href="#六、单例模式" class="headerlink" title="六、单例模式"></a>六、单例模式</h4><p>================================</p><pre><code>class Foo:    def func(self):        print(123)</code></pre><p>================================</p><pre><code>    def function(self):        print(&apos;1258&apos;)    Foo = type(&apos;Foo&apos;,(object,),{&apos;func&apos;:function})    # type(&apos;Foo&apos;,(object,),{&apos;func&apos;:lambda x:125})    # 声明一个类    Foo = type(&apos;Foo&apos;,(object,),{&apos;func&apos;:lambda x:125})    obj = Foo()# 声明了一个类</code></pre><p>################################</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> python </tag>
            
            <tag> it </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RSS收集库</title>
      <link href="/2019/09/15/RSS%E6%94%B6%E9%9B%86%E5%BA%93/"/>
      <url>/2019/09/15/RSS%E6%94%B6%E9%9B%86%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.imgur.com/NZpRScX.png" alt="rsshub"></p><h1 id="RSSHub"><a href="#RSSHub" class="headerlink" title="RSSHub"></a>RSSHub</h1><p><a href="https://docs.rsshub.app" target="_blank" rel="noopener">RSSHub Docs</a></p><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><a id="more"></a><p><a href="https://www.coolapk.com/apk/com.seazon.feedme" target="_blank" rel="noopener">FeedMe</a><br><a href="https://www.lanzous.com/i4gdpad" target="_blank" rel="noopener">Palabre</a></p><h2 id="云同步"><a href="#云同步" class="headerlink" title="云同步"></a>云同步</h2><p><a href="https://tt-rss.org/" target="_blank" rel="noopener">Tiny Tiny RSS</a><br><a href="https://github.com/HenryQW/Awesome-TTRSS" target="_blank" rel="noopener">部署Tiny Tiny RSS</a></p><h2 id="订阅源"><a href="#订阅源" class="headerlink" title="订阅源"></a>订阅源</h2><hr><h3 id="Youtube"><a href="#Youtube" class="headerlink" title="Youtube"></a>Youtube</h3><ul><li>Macie Jay:</li></ul><p><code>https://rsshub.app/youtube/channel/UC4Z78mWMtyeHN8EjBbgufNw</code></p><ul><li>J.flaMusic:</li></ul><p><code>https://rsshub.app/youtube/channel/UClkRzsdvg7_RKVhwDwiDZOA</code></p><p>or</p><p><code>https://rsshub.app/youtube/user/JFlaMusic</code></p><ul><li>217仮面ライアー</li></ul><p><code>https://rsshub.app/youtube/channel/UCxmgDpyo22S9d-nktYNIkAQ</code></p><ul><li>Aimer Official YouTube Channel</li></ul><p><code>https://rsshub.app/youtube/channel/UCR1zT1s524Hbc85bdvno_8w</code></p><h3 id="哔哩哔哩bilibili"><a href="#哔哩哔哩bilibili" class="headerlink" title="哔哩哔哩bilibili"></a>哔哩哔哩bilibili</h3><ul><li>nya酱的一生:</li></ul><p><code>https://rsshub.vicker.cn/bilibili/user/video/1885078</code></p><ul><li>日食记:</li></ul><p><code>https://rsshub.vicker.cn/bilibili/user/video/8960728</code></p><ul><li>女污Mika:</li></ul><p><code>https://rsshub.vicker.cn/bilibili/user/video/8020903</code></p><ul><li>主播真会玩女神篇:</li></ul><p><code>https://rsshub.vicker.cn/bilibili/user/channel/3682229/54324</code></p><h3 id="有趣博客站"><a href="#有趣博客站" class="headerlink" title="有趣博客站"></a>有趣博客站</h3><ul><li>黑客派:</li></ul><p><code>https://hacpai.com/rss/domain/play.xml</code></p><ul><li>逗比根据地:</li></ul><p><code>https://doub.io/feed</code></p><ul><li>扩软博客:</li></ul><p><a href="https://blog.kuoruan.com/feed" target="_blank" rel="noopener">https://blog.kuoruan.com/feed</a></p><ul><li>老D：</li></ul><p><code>https://laod.cn/feed</code></p><ul><li>秋水逸冰:</li></ul><p><code>https://teddysun.com/feed</code></p><ul><li>DIY.god:</li></ul><p><code>https://diygod.me/atom.xml</code></p><h3 id="资讯站"><a href="#资讯站" class="headerlink" title="资讯站"></a>资讯站</h3><ul><li>少数派：</li></ul><p><code>https://sspai.com/feed</code></p><ul><li>小众软件：</li></ul><p><code>https://feeds.appinn.com/appinns</code></p><h3 id="影视站"><a href="#影视站" class="headerlink" title="影视站"></a>影视站</h3><ul><li>电影首发站：</li></ul><p><code>https://rsshub.app/dysfz</code></p>]]></content>
      
      
      <categories>
          
          <category> Lifestyle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSS </tag>
            
            <tag> rsshub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL学习记录</title>
      <link href="/2019/09/15/MySQL%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
      <url>/2019/09/15/MySQL%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><h1 id="一、数据库管理系统DBMS"><a href="#一、数据库管理系统DBMS" class="headerlink" title="一、数据库管理系统DBMS"></a>一、数据库管理系统DBMS</h1><h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">bin</span><br><span class="line">config</span><br><span class="line">db（保存数据）</span><br><span class="line"><span class="bullet">- </span>admin</span><br><span class="line"><span class="bullet">  - </span>123adsk.txt&#123;username,password,class...&#125;</span><br><span class="line"><span class="bullet">  - </span>dndsjnd.txt&#123;username,password,class...&#125;</span><br><span class="line"><span class="bullet">- </span>course</span><br><span class="line"><span class="bullet">- </span>school</span><br><span class="line">src</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="写程序："><a href="#写程序：" class="headerlink" title="写程序："></a>写程序：</h3><pre><code>a. 数据库在本地    1.找到目录    2.添加数据b. 数据库在远程    1.socket 连接上远程机器    2.socket 发送（命令）# add|123asdkc. 做些什么？？？</code></pre><h4 id="a-程序"><a href="#a-程序" class="headerlink" title="a. 程序"></a>a. 程序</h4><pre><code>程序，socket客户端</code></pre><h4 id="b-数据"><a href="#b-数据" class="headerlink" title="b. 数据"></a>b. 数据</h4><pre><code>socket服务端</code></pre><h4 id="c-制作一套规则"><a href="#c-制作一套规则" class="headerlink" title="c. 制作一套规则"></a>c. 制作一套规则</h4><pre><code>add|123asdkdelete|123asdk...</code></pre><h4 id="d-socket客户端和服务端用户认证-授权，限制"><a href="#d-socket客户端和服务端用户认证-授权，限制" class="headerlink" title="d. socket客户端和服务端用户认证,授权，限制"></a>d. socket客户端和服务端用户认证,授权，限制</h4><p>– SQLserver（收费）</p><p><code>Oracle，sqlite，access。。。</code></p><p><code>MySQL，SqlServer，Oracle，sqlite，access。。。</code></p><h5 id="服务端和客户端"><a href="#服务端和客户端" class="headerlink" title="服务端和客户端"></a>服务端和客户端</h5><p>mysql：</p><pre><code>add|asdf</code></pre><p>SQLServer：</p><pre><code>a|asdf</code></pre><h1 id="二、下载安装："><a href="#二、下载安装：" class="headerlink" title="二、下载安装："></a>二、下载安装：</h1><p><code>1.下载</code></p><p><a href="https://cdn.mysql.com//Downloads/MySQL-5.7/mysql-5.7.26-winx64.zip" target="_blank" rel="noopener">MySQL 5.7.26 Portable ZIP</a></p><p><em>MySQL 5.7以后的Windows版本没有my.ini配置文件，可在解压后的根文件夹里自行新建。</em></p><p><em>配置文件如下仅供参考，可自行按需修改</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[client]</span><br><span class="line">port=3306</span><br><span class="line">default-character-set=utf8</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">basedir=$mysql$</span><br><span class="line">datadir=$mysql$/data</span><br><span class="line">port=3306</span><br><span class="line">character-set-server=utf8</span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line">max_connections=20</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure><p><code>2.解压到任意目录</code></p><p><code>3.服务器端运行起来</code></p><pre><code>mysqld</code></pre><p><code>4.客户端连接</code></p><h2 id="省事："><a href="#省事：" class="headerlink" title="省事："></a>省事：</h2><ul><li>将mysqld制作成Windows服务 （<code>mysqld.exe --install</code>）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">net start mysql</span><br><span class="line">net stop mysql</span><br></pre></td></tr></table></figure><ul><li>打开服务管理，直接…</li></ul><h1 id="三、MySQL数据库"><a href="#三、MySQL数据库" class="headerlink" title="三、MySQL数据库"></a>三、MySQL数据库</h1><ol><li><p>概念</p><pre><code>数据库，文件夹数据库表，文件数据行，文件中的一行数据</code></pre></li><li><p>使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">启动服务器：</span><br><span class="line">net start mysql</span><br><span class="line">或</span><br><span class="line">D:\Program Files\......\mysql\bin\mysqld</span><br><span class="line"></span><br><span class="line">service mysql start</span><br><span class="line"></span><br><span class="line">/etc/init.d/mysql start</span><br><span class="line"></span><br><span class="line">客户端：</span><br><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure></li></ol><p>初试：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>; <span class="comment"># 查看当前MySQL都有哪些数据，根目录都有哪些文件夹</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> 数据库名;<span class="comment"># 创建文件夹</span></span><br><span class="line"><span class="keyword">use</span> 数据库名;<span class="comment"># 使用选中数据库，进入目录</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;<span class="comment"># 查看当前数据库下都有哪些数据表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(nid <span class="built_in">int</span>,<span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>),pwd <span class="built_in">varchar</span>(<span class="number">64</span>)); <span class="comment"># 创建数据表</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名;<span class="comment"># 查看表中的所有数据</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名(nid,<span class="keyword">name</span>,pwd) <span class="keyword">value</span>(<span class="number">12</span>,<span class="string">'xiaoming'</span>,<span class="string">'123'</span>); <span class="comment"># 插入数据</span></span><br></pre></td></tr></table></figure><p><strong>注意：sql语句结尾一定要加;(英文格式的分号)</strong></p><ol start="3"><li><p>用户授权</p><p> 用户管理特殊命令：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">创建用户</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> 用户名@IP地址 <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'密码'</span>;</span><br><span class="line">创建用户并分配与root相同的权限</span><br><span class="line">    <span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="keyword">admin</span>@<span class="string">'%'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'admin'</span> <span class="keyword">with</span> <span class="keyword">grant</span> <span class="keyword">option</span>;</span><br><span class="line">删除用户</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">user</span> 用户名@IP地址;</span><br><span class="line">修改用户</span><br><span class="line"><span class="keyword">rename</span> <span class="keyword">user</span> 用户名@IP地址; to 新用户名@IP地址;</span><br><span class="line">修改密码</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">password</span> <span class="keyword">for</span> 用户名@IP地址 = <span class="keyword">Password</span>(<span class="string">'新密码'</span>);</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> <span class="keyword">password</span> = <span class="keyword">password</span>(<span class="string">'新密码'</span>);               // 适用于mysql 5.5版</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> authentication_string = <span class="keyword">password</span>(<span class="string">'新密码'</span>);  // 适用于mysql 5.7及后续版本</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;                                            // 改完密码一定要刷新</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">password</span>(<span class="string">'123456'</span>);// 查看加密后的密文</span><br></pre></td></tr></table></figure></li></ol><p><strong><em>PS：用户权限相关数据保存在mysql数据库的user表中，所以也可以直接对其进行操作（不建议）</em></strong></p><pre><code>权限管理特殊命令：</code></pre><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">grants</span> <span class="keyword">for</span> <span class="string">'用户'</span>@<span class="string">'IP地址'</span>;                    <span class="comment">-- 查看权限</span></span><br><span class="line"><span class="keyword">grant</span>  权限 <span class="keyword">on</span> 数据库.表 <span class="keyword">to</span>   <span class="string">'用户'</span>@<span class="string">'IP地址'</span>;      <span class="comment">-- 授权</span></span><br><span class="line"><span class="keyword">revoke</span> 权限 <span class="keyword">on</span> 数据库.表 <span class="keyword">from</span> <span class="string">'用户'</span>@<span class="string">'IP地址'</span>;      <span class="comment">-- 取消权限</span></span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;                                   <span class="comment">-- 刷新权限</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> xiaoming <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'123456'</span> <span class="keyword">with</span>  <span class="keyword">grant</span> <span class="keyword">option</span>; 指定密码是123456的xiaoming的权限（为了防止有多个用户名叫xiaoming的用户）</span><br></pre></td></tr></table></figure><p><strong>with  grant option 是将grant权限也赋给某人</strong></p><pre><code>对于权限：</code></pre><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">all privileges  除<span class="keyword">grant</span>外的所有权限 (<span class="keyword">privileges</span> 可以尝试省略)</span><br><span class="line"><span class="keyword">select</span>          仅查权限</span><br><span class="line"><span class="keyword">select</span>,<span class="keyword">insert</span>   查和插入权限</span><br><span class="line">...</span><br><span class="line"><span class="keyword">usage</span>                   无访问权限</span><br><span class="line"><span class="keyword">alter</span>                   使用<span class="keyword">alter</span> <span class="keyword">table</span></span><br><span class="line"><span class="keyword">alter</span> routine           使用<span class="keyword">alter</span> <span class="keyword">procedure</span>和<span class="keyword">drop</span> <span class="keyword">procedure</span></span><br><span class="line"><span class="keyword">create</span>                  使用<span class="keyword">create</span> <span class="keyword">table</span></span><br><span class="line"><span class="keyword">create</span> routine          使用<span class="keyword">create</span> <span class="keyword">procedure</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">temporary</span> <span class="keyword">tables</span> 使用<span class="keyword">create</span> <span class="keyword">temporary</span> <span class="keyword">tables</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span>             使用<span class="keyword">create</span> <span class="keyword">user</span>、<span class="keyword">drop</span> <span class="keyword">user</span>、<span class="keyword">rename</span> <span class="keyword">user</span>和<span class="keyword">revoke</span>  <span class="keyword">all</span> <span class="keyword">privileges</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span>             使用<span class="keyword">create</span> <span class="keyword">view</span></span><br><span class="line"><span class="keyword">delete</span>                  使用<span class="keyword">delete</span></span><br><span class="line"><span class="keyword">drop</span>                    使用<span class="keyword">drop</span> <span class="keyword">table</span></span><br><span class="line"><span class="keyword">execute</span>                 使用<span class="keyword">call</span>和存储过程</span><br><span class="line"><span class="keyword">file</span>                    使用<span class="keyword">select</span> <span class="keyword">into</span> <span class="keyword">outfile</span> 和 <span class="keyword">load</span> <span class="keyword">data</span> <span class="keyword">infile</span></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">option</span>            使用<span class="keyword">grant</span> 和 <span class="keyword">revoke</span></span><br><span class="line"><span class="keyword">index</span>                   使用<span class="keyword">index</span></span><br><span class="line"><span class="keyword">insert</span>                  使用<span class="keyword">insert</span></span><br><span class="line"><span class="keyword">lock</span> <span class="keyword">tables</span>             使用<span class="keyword">lock</span> <span class="keyword">table</span></span><br><span class="line">process                 使用<span class="keyword">show</span> <span class="keyword">full</span> <span class="keyword">processlist</span></span><br><span class="line"><span class="keyword">select</span>                  使用<span class="keyword">select</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>          使用<span class="keyword">show</span> <span class="keyword">databases</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">view</span>               使用<span class="keyword">show</span> <span class="keyword">view</span></span><br><span class="line"><span class="keyword">update</span>                  使用<span class="keyword">update</span></span><br><span class="line">reload                  使用<span class="keyword">flush</span></span><br><span class="line"><span class="keyword">shutdown</span>                使用mysqladmin <span class="keyword">shutdown</span>(关闭MySQL)</span><br><span class="line">super                   使用<span class="keyword">change</span> <span class="keyword">master</span>、<span class="keyword">kill</span>、<span class="keyword">logs</span>、<span class="keyword">purge</span>、<span class="keyword">master</span>和<span class="keyword">set</span> <span class="keyword">global</span>。还允许mysqladmin调试登陆</span><br><span class="line"><span class="keyword">replication</span> <span class="keyword">client</span>      服务器位置的访问</span><br><span class="line"><span class="keyword">replication</span> <span class="keyword">slave</span>       由复制从属使用</span><br></pre></td></tr></table></figure><pre><code>对于目标数据库以及内部其他：</code></pre><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数据库名.*           数据库中的所有</span><br><span class="line">数据库名.表          指定数据库中的某张表</span><br><span class="line">数据库名.存储过程    指定数据库中的存储过程</span><br><span class="line">*.*                  所有数据库</span><br></pre></td></tr></table></figure><pre><code>对于用户和IP：</code></pre><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用户名@IP地址        用户只能在改IP下才能访问</span><br><span class="line">用户名@192.168.1.%   用户只能在改IP段下才能访问(通配符%表示任意)</span><br><span class="line">用户名@%             用户可以再任意IP下访问(默认IP地址为%)</span><br></pre></td></tr></table></figure><h1 id="四-SQL语句"><a href="#四-SQL语句" class="headerlink" title="四.SQL语句"></a>四.SQL语句</h1><p><strong>SQL语句的划分</strong></p><ol><li><p>DDL(Data Defined Language)</p><p> <code>数据定义语言 包括create,alter,drop操作，如数据库中创建数据对象，修改数据对象，删除数据对象。</code></p></li><li><p>DML(Data Manipulation Language)</p><p> <code>数据操作语言 包括对数据库的insert,update,delete操作</code></p></li><li><p>DQL(Data Query Language)</p><p> <code>数据查询语言 包括对数据库的select操作，用于获取表中的数据，包括where,group by,having,order by, left/right/inner (outer) join on 的自连接，子连接等。</code></p></li><li><p>DCL(Data Control Language)</p><p> <code>数据控制语言 包括grant，revoke，deny 操作，一般设置相关数据库对象访问权限</code></p></li></ol><p><strong>事务控制语言(TCL)关于数据完整性一致性的</strong></p><h2 id="数据库级别"><a href="#数据库级别" class="headerlink" title="数据库级别"></a>数据库级别</h2><p> 查询数据库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">DATABASES</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">DATABASES</span> <span class="keyword">LIKE</span> <span class="string">'%yu%'</span> // 过滤显示 只显示含有关键词的</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">DATABASES</span> <span class="keyword">LIKE</span> <span class="string">'yu%'</span>// 过滤显示 只显示含有首部部有关键词的</span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">DATABASES</span> <span class="keyword">LIKE</span> <span class="string">'%yu'</span>// 过滤显示 只显示含有尾部有关键词的</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span>  <span class="keyword">database</span>( );// 获取自己目前所在的数据库</span><br></pre></td></tr></table></figure><p> 创建数据库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> 数据库名;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> 数据库名 <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> 数据库名 <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> gbk <span class="keyword">COLLATE</span> gbk_chinese_ci</span><br><span class="line"><span class="keyword">use</span> 数据库名;</span><br><span class="line"><span class="keyword">drop</span> 数据库名;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">DATABASE</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;</span><br></pre></td></tr></table></figure><h2 id="表级别"><a href="#表级别" class="headerlink" title="表级别"></a>表级别</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;                                       // 查看表名和视图名</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> student2;                        // 查看创建语句</span><br><span class="line"></span><br><span class="line">desc 数据表名;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span>  表名(nid <span class="built_in">int</span>, <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">60</span>))</span><br><span class="line"></span><br><span class="line">// 复制表结构</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 新表名 <span class="keyword">select</span> * <span class="keyword">from</span> 旧表名 <span class="keyword">where</span> <span class="number">1</span>=<span class="number">2</span>; // 复制表结构，不包括主键和自增</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 新表名 <span class="keyword">like</span> 旧表名;                    // 复制表结构，包括主键和自增</span><br><span class="line"></span><br><span class="line">// 复制表结构和表数据</span><br><span class="line">creat table 新表名 <span class="keyword">select</span> * <span class="keyword">form</span> 旧表名;            // 复制整个表结构和表数据到新表        </span><br><span class="line"></span><br><span class="line">// 复制表数据</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 新表名 <span class="keyword">select</span> * <span class="keyword">from</span> 旧表名;            // 复制整个表数据到新表，前提表结构要一致，但字段名可以不同</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 新表名(字段<span class="number">1</span>,字段<span class="number">2</span>) <span class="keyword">select</span> 字段<span class="number">1</span>,字段<span class="number">2</span> <span class="keyword">from</span> 旧表名;      // 复制指定的部分表数据到新表，指定的字段的数据类型和字段数量要对应一致，字段名可以不同</span><br><span class="line"></span><br><span class="line"><span class="keyword">rename</span> <span class="keyword">table</span> 原数据库名 <span class="keyword">to</span> 新数据库名;  // 修改数据表名 方法一</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 原数据库名 remove 新数据库名;  // 修改数据表名 方法二</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">modify</span> 字段名 数据类型;  // 修改字段的类型</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> 字段名 数据类型;  // 给表添加一个字段</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> 字段名 数据类型 <span class="keyword">after</span> 字段一名;// 给表添加一个字段在字段一后</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> 字段名; // 删除字段</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">change</span> 旧列名 新列名 新类型; // 修改列名</span><br><span class="line"></span><br><span class="line">// 清空表</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名;// 只会清空表数据，自增不会归零</span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> 表名;// 会清空表结构和表数据，即自增归零</span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'char%'</span>;// 查看数据类型的编码方式</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">names</span> gbk;   // 设置编码方式</span><br></pre></td></tr></table></figure><h3 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">a.默认值</span><br><span class="line"></span><br><span class="line">b.是否可以为空</span><br><span class="line"></span><br><span class="line">c.自增列（一张表只能有一个，数字，必须是索引-主键（主键索引））</span><br><span class="line"></span><br><span class="line">d.主键索引：</span><br><span class="line">一张表只能有一个主键唯一不能重复，不能为null，一般情况下，自增列设置主键</span><br><span class="line"><span class="code">唯一索引：unique</span></span><br><span class="line"><span class="code">nid int not null unique,</span></span><br><span class="line"></span><br><span class="line"><span class="code">可以为null，一张表可以有多个唯一列</span></span><br><span class="line"><span class="code">1,2,3,4,5,6,null</span></span><br><span class="line"></span><br><span class="line">-- 约束</span><br><span class="line">-- 索引，加速查找</span><br><span class="line"></span><br><span class="line">e.外键foreign key,一对多</span><br><span class="line"><span class="code">两张表建立约束</span></span><br><span class="line"></span><br><span class="line"><span class="code">--约束</span></span><br><span class="line"><span class="code">--foreign key,一对多</span></span><br><span class="line"></span><br><span class="line">f.数据类型：数值 、时间和字符串</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> xxx(</span><br><span class="line">nid ... primary <span class="keyword">key</span>,</span><br><span class="line">...</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line"><span class="keyword">num</span> <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">age <span class="built_in">int</span>,</span><br><span class="line">gender <span class="built_in">int</span>,</span><br><span class="line">primary <span class="keyword">key</span> (<span class="keyword">name</span>, <span class="keyword">num</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>非空约束：<br>  <code>not null</code></li></ul><pre><code>name num age a   88   9 a   99   9 a   88   0        # 不符合</code></pre><ul><li>主键:</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">不能为null，</span><br><span class="line">不能重复，</span><br><span class="line">一张表只有一个主键（可以多列组成主键）</span><br></pre></td></tr></table></figure><p>一般用法：</p><p><code>nid int auto_increment primary key,</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb5(</span><br><span class="line">nid <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment primary <span class="keyword">key</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">16</span>),</span><br><span class="line">age <span class="built_in">int</span> <span class="keyword">default</span> <span class="number">19</span></span><br><span class="line">)<span class="keyword">engine</span>=<span class="keyword">innodb</span> <span class="keyword">default</span> <span class="keyword">charset</span>=utf8;</span><br></pre></td></tr></table></figure><ul><li>添加外键：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> userinfo <span class="keyword">add</span> <span class="keyword">constraint</span> fk_u_p <span class="keyword">foreign</span> <span class="keyword">key</span> userinfo(part_id) <span class="keyword">references</span> part(nid);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> 表名;<span class="comment"># 直接删除表 (表结构也会删除) 不支持事务，不能回滚数据</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名;<span class="comment"># 速度慢，清空表内容 (表结构不删除)，自增不会回到原点，支持事务，可以回滚</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> 表名;<span class="comment"># 速度快，清空表内容 (表结构删除和重建)，自增回到原点，不支持事务，不能回滚</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名;</span><br></pre></td></tr></table></figure><hr><h3 id="数值："><a href="#数值：" class="headerlink" title="数值："></a>数值：</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">bit 二进制</span><br><span class="line">tinyint</span><br><span class="line">smallint</span><br><span class="line">int</span><br><span class="line">bigint</span><br></pre></td></tr></table></figure><h4 id="bit-M"><a href="#bit-M" class="headerlink" title="bit[(M)]"></a>bit[(M)]</h4><pre><code>二进制位（101001），m表示二进制位的长度（1-64），默认m＝1</code></pre><p>​    </p><h4 id="tinyint-m-unsigned-zerofill"><a href="#tinyint-m-unsigned-zerofill" class="headerlink" title="tinyint[(m)] [unsigned] [zerofill]"></a>tinyint[(m)] [unsigned] [zerofill]</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">小整数，数据类型用于保存一些范围的整数数值范围：</span><br><span class="line"></span><br><span class="line">有符号：</span><br><span class="line"></span><br><span class="line"><span class="code">-128 ～ 127</span></span><br><span class="line"></span><br><span class="line">无符号：</span><br><span class="line"></span><br><span class="line"><span class="code">0 ～ 255</span></span><br></pre></td></tr></table></figure><p><strong>特别的： MySQL中无布尔值，使用tinyint(1)构造。</strong></p><h4 id="int-m-unsigned-zerofill"><a href="#int-m-unsigned-zerofill" class="headerlink" title="int[(m)][unsigned][zerofill]"></a>int[(m)][unsigned][zerofill]</h4><pre><code>整数，数据类型用于保存一些范围的整数数值范围：    有符号：-2147483648 ～ 2147483647    无符号：0 ～ 4294967295</code></pre><p><strong>特别的：整数类型中的m仅用于显示，对存储范围无限制。例如： int(5),当插入数据2时，select 时数据显示为： 00002</strong></p><h4 id="bigint-m-unsigned-zerofill"><a href="#bigint-m-unsigned-zerofill" class="headerlink" title="bigint[(m)][unsigned][zerofill]"></a>bigint[(m)][unsigned][zerofill]</h4><pre><code>大整数，数据类型用于保存一些范围的整数数值范围：    有符号：                -9223372036854775808 ～ 9223372036854775807    无符号：                0  ～  18446744073709551615</code></pre><h4 id="decimal-m-d-unsigned-zerofill"><a href="#decimal-m-d-unsigned-zerofill" class="headerlink" title="decimal[(m[,d])] [unsigned] [zerofill]"></a>decimal[(m[,d])] [unsigned] [zerofill]</h4><pre><code>准确的小数值，m是数字总个数（负号不算），d是小数点后个数。 m最大值为65，d最大值为30。</code></pre><p><em>存储时超出规定范围，会在规定小数位数那里四舍五入来存储</em></p><p><strong>特别的：</strong></p><p><strong>对于精确数值计算时需要用此类型</strong></p><p><strong>decaimal能够存储精确值的原因在于其内部按照字符串存储。</strong></p><h4 id="FLOAT-M-D-UNSIGNED-ZEROFILL"><a href="#FLOAT-M-D-UNSIGNED-ZEROFILL" class="headerlink" title="FLOAT[(M,D)] [UNSIGNED] [ZEROFILL]"></a>FLOAT[(M,D)] [UNSIGNED] [ZEROFILL]</h4><p><em>存储时超出规定范围，会在规定小数位数那里截断来存储</em></p><pre><code>单精度浮点数（非准确小数值），m是数字总个数，d是小数点后个数。无符号：</code></pre><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">-3.402823466E+38 to -1.175494351E-38,</span><br><span class="line"></span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">1.175494351E-38 to 3.402823466E+38</span><br></pre></td></tr></table></figure><pre><code>有符号：</code></pre><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">1.175494351E-38 to 3.402823466E+38</span><br></pre></td></tr></table></figure><p><strong>数值越大，越不准确</strong></p><h4 id="DOUBLE-M-D-UNSIGNED-ZEROFILL"><a href="#DOUBLE-M-D-UNSIGNED-ZEROFILL" class="headerlink" title="DOUBLE[(M,D)] [UNSIGNED] [ZEROFILL]"></a>DOUBLE[(M,D)] [UNSIGNED] [ZEROFILL]</h4><pre><code>双精度浮点数（非准确小数值），m是数字总个数，d是小数点后个数。</code></pre><p>无符号：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">-1.7976931348623157E+308 to -2.2250738585072014E-308</span><br><span class="line"></span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">2.2250738585072014E-308 to 1.7976931348623157E+308</span><br></pre></td></tr></table></figure><p>有符号：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">2.2250738585072014E-308 to 1.7976931348623157E+308</span><br></pre></td></tr></table></figure><p><strong>数值越大，越不准确</strong></p><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><h4 id="定长"><a href="#定长" class="headerlink" title="定长"></a>定长</h4><h4 id="char-m"><a href="#char-m" class="headerlink" title="char (m)"></a>char (m)</h4><pre><code>char数据类型用于表示固定长度的字符串，可以包含最多达255个字符。其中m代表字符串的长度。</code></pre><p><strong>PS: 即使数据小于m长度，也会占用m长度</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb13(n <span class="built_in">char</span>(<span class="number">7</span>),b <span class="built_in">int</span>,c <span class="built_in">int</span>)</span><br><span class="line"><span class="keyword">insert</span> ssss</span><br></pre></td></tr></table></figure><pre><code>查找速度快，浪费空间</code></pre><h4 id="变长"><a href="#变长" class="headerlink" title="变长"></a>变长</h4><h4 id="varchar-m"><a href="#varchar-m" class="headerlink" title="varchar(m)"></a>varchar(m)</h4><pre><code>varchars数据类型用于变长的字符串，可以包含最多达255个字符。其中m代表该数据类型所允许保存的字符串的最大长度，只要长度小于该最大值的字符串都可以被保存在该数据类型中。</code></pre><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb13(n <span class="built_in">varchar</span>(<span class="number">7</span>),b <span class="built_in">int</span>,c <span class="built_in">int</span>)</span><br><span class="line"><span class="keyword">insert</span> ssss</span><br><span class="line"><span class="keyword">insert</span> sssssss</span><br><span class="line"><span class="keyword">insert</span> sssssssss</span><br></pre></td></tr></table></figure><pre><code>查找速度慢，节省空间</code></pre><p><strong>注：</strong></p><p><strong>虽然varchar使用起来较为灵活，但是从整个系统的性能角度来说，char数据类型的处理速度更快，有时甚至可以超出varchar处理速度的50%。因此，用户在设计数据库时应当综合考虑各方面的因素，以求达到最佳的平衡</strong></p><h3 id="enum"><a href="#enum" class="headerlink" title="enum"></a>enum</h3><pre><code>枚举类型（单选）    An ENUM column can have a maximum of 65,535 distinct elements. (The practical limit is less than 3000.)</code></pre><p><strong>示例：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> shirts (</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">40</span>),</span><br><span class="line"><span class="keyword">size</span> ENUM(<span class="string">'x-small'</span>, <span class="string">'small'</span>, <span class="string">'medium'</span>, <span class="string">'large'</span>, <span class="string">'x-large'</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> shirts (<span class="keyword">name</span>, <span class="keyword">size</span>) <span class="keyword">VALUES</span> (<span class="string">'dress shirt'</span>,<span class="string">'large'</span>), (<span class="string">'t-shirt'</span>,<span class="string">'medium'</span>),(<span class="string">'polo shirt'</span>,<span class="string">'small'</span>);</span><br></pre></td></tr></table></figure><h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><pre><code>集合类型（多选）    A SET column can have a maximum of 64 distinct members.</code></pre><p><strong>示例：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> myset (<span class="keyword">col</span> <span class="keyword">SET</span>(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>));</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> myset (<span class="keyword">col</span>) <span class="keyword">VALUES</span> (<span class="string">'a,d'</span>), (<span class="string">'d,a'</span>), (<span class="string">'a,d,a'</span>), (<span class="string">'a,d,d'</span>), (<span class="string">'d,a,d'</span>);</span><br></pre></td></tr></table></figure><h3 id="二进制数据："><a href="#二进制数据：" class="headerlink" title="二进制数据："></a>二进制数据：</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">TinyBlob、Blob、MediumBlob、LongBlob</span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="bullet">* </span>上传数据</span><br><span class="line"><span class="bullet">* </span>Blob，强制二进制方式</span><br><span class="line"><span class="bullet">* </span>varchar(65), “D:\home.avi”将上传的文件保存在硬盘，D:\home.avi</span><br></pre></td></tr></table></figure><h3 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h3><h4 id="text"><a href="#text" class="headerlink" title="text"></a>text</h4><pre><code>text数据类型用于保存变长的大字符串，可以组多到65535 (2**16 − 1)个字符。</code></pre><h4 id="mediumtext"><a href="#mediumtext" class="headerlink" title="mediumtext"></a>mediumtext</h4><pre><code>A TEXT column with a maximum length of 16,777,215 (2**24 − 1) characters.</code></pre><h4 id="longtext"><a href="#longtext" class="headerlink" title="longtext"></a>longtext</h4><pre><code>A TEXT column with a maximum length of 4,294,967,295 or 4GB (2**32 − 1) characters.</code></pre><h3 id="DATE"><a href="#DATE" class="headerlink" title="DATE"></a>DATE</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">YYYY-MM-DD（1000-01-01/9999-12-31）</span><br></pre></td></tr></table></figure><h3 id="日期时间"><a href="#日期时间" class="headerlink" title="日期时间"></a>日期时间</h3><h4 id="TIME"><a href="#TIME" class="headerlink" title="TIME"></a>TIME</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">HH:MM:SS（'-838:59:59'/'838:59:59'）</span><br></pre></td></tr></table></figure><h4 id="YEAR"><a href="#YEAR" class="headerlink" title="YEAR"></a>YEAR</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">YYYY（1901/2155）</span><br></pre></td></tr></table></figure><h4 id="DATETIME"><a href="#DATETIME" class="headerlink" title="DATETIME"></a>DATETIME</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">YYYY-MM-DD HH:MM:SS（1000-01-01 00:00:00/9999-12-31 23:59:59）</span><br></pre></td></tr></table></figure><h4 id="TIMESTAMP"><a href="#TIMESTAMP" class="headerlink" title="TIMESTAMP"></a>TIMESTAMP</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">YYYYMMDD HHMMSS（1970-01-01 00:00:00/2038-01-19 11:14:07(2037 年某时)）</span><br></pre></td></tr></table></figure><hr><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>插入 insert(‘helloworld’,1,2,’abcd’) // 从下标1开始</p><hr><h2 id="数据行级别"><a href="#数据行级别" class="headerlink" title="数据行级别"></a>数据行级别</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名;</span><br><span class="line"></span><br><span class="line">添加列：<span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> 列名 类型</span><br><span class="line">删除列：<span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">column</span> 列名</span><br><span class="line">修改列：</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">modify</span> <span class="keyword">column</span> 列名 类型;  <span class="comment">-- 类型</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">change</span> 原列名 新列名 类型; <span class="comment">-- 列名，类型</span></span><br><span class="line">  </span><br><span class="line">添加主键：</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> primary <span class="keyword">key</span>(列名);</span><br><span class="line">删除主键：</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> primary <span class="keyword">key</span>;</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名  <span class="keyword">modify</span>  列名 <span class="built_in">int</span>, <span class="keyword">drop</span> primary <span class="keyword">key</span>;</span><br><span class="line">  </span><br><span class="line">添加外键：<span class="keyword">alter</span> <span class="keyword">table</span> 从表 <span class="keyword">add</span> <span class="keyword">constraint</span> 外键名称（形如：FK_从表_主表） <span class="keyword">foreign</span> <span class="keyword">key</span> 从表(外键字段) <span class="keyword">references</span> 主表(主键字段);</span><br><span class="line">删除外键：<span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">foreign</span> <span class="keyword">key</span> 外键名称</span><br><span class="line">  </span><br><span class="line">修改默认值：<span class="keyword">ALTER</span> <span class="keyword">TABLE</span> testalter_tbl <span class="keyword">ALTER</span> i <span class="keyword">SET</span> <span class="keyword">DEFAULT</span> <span class="number">1000</span>;</span><br><span class="line">删除默认值：<span class="keyword">ALTER</span> <span class="keyword">TABLE</span> testalter_tbl <span class="keyword">ALTER</span> i <span class="keyword">DROP</span> <span class="keyword">DEFAULT</span>;</span><br></pre></td></tr></table></figure><h5 id="1-增"><a href="#1-增" class="headerlink" title="1.增"></a>1.增</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb1(<span class="keyword">name</span>,age) <span class="keyword">values</span>(<span class="string">'alex'</span>,<span class="number">18</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb2(<span class="keyword">name</span>,age) <span class="keyword">values</span>(<span class="string">'alex'</span>,<span class="number">18</span>),(<span class="string">'eric'</span>,<span class="number">19</span>),(<span class="string">'got'</span>,<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb6(</span><br><span class="line">nid <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment primary <span class="keyword">key</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">age <span class="built_in">int</span></span><br><span class="line">)<span class="keyword">engine</span>=<span class="keyword">innodb</span> <span class="keyword">default</span> <span class="keyword">charset</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb7(</span><br><span class="line">nid <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment primary <span class="keyword">key</span>,</span><br><span class="line">caption <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">gender <span class="built_in">varchar</span>(<span class="number">20</span>)</span><br><span class="line">)<span class="keyword">engine</span>=<span class="keyword">innodb</span> <span class="keyword">default</span> <span class="keyword">charset</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb7(caption,gender)<span class="keyword">values</span>(<span class="string">'kakap'</span>,<span class="string">'1'</span>),(<span class="string">'hu'</span>,<span class="string">'2'</span>),(<span class="string">'fafa'</span>,<span class="string">'2'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb6(<span class="keyword">name</span>,age)<span class="keyword">select</span> caption,gender <span class="keyword">from</span> tb7;<span class="comment"># 将tb7中选中的数据插入到tb6中的指定位置（前提类型对应得能转换）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb6(<span class="keyword">name</span>,age)<span class="keyword">select</span> caption,caption <span class="keyword">from</span> tb7;<span class="comment"># 会报错。。原因：类型不一致，且无法转换</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb6(<span class="keyword">name</span>,age)<span class="keyword">select</span> caption,nid <span class="keyword">from</span> tb7;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb6(<span class="keyword">name</span>,age)<span class="keyword">select</span> caption,gender <span class="keyword">from</span> tb7 <span class="keyword">where</span> nid&gt;<span class="number">2</span>;</span><br></pre></td></tr></table></figure><h5 id="2-删"><a href="#2-删" class="headerlink" title="2.删"></a>2.删</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tb7 <span class="keyword">where</span> nid=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tb7 <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">'kakap'</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tb7 <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">'kakap'</span> <span class="keyword">and</span> nid=<span class="number">5</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tb7 <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">'kakap'</span> <span class="keyword">or</span> nid=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tb7 <span class="keyword">where</span> nid&lt;<span class="number">2</span>;</span><br></pre></td></tr></table></figure><h5 id="3-改"><a href="#3-改" class="headerlink" title="3.改"></a>3.改</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">update</span> tb7 <span class="keyword">set</span> age=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">update</span> tb7 <span class="keyword">set</span> age=<span class="number">2</span> <span class="keyword">where</span> nid=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">update</span> tb7 <span class="keyword">set</span> age=<span class="number">12</span>,<span class="keyword">name</span>=<span class="string">'opoo'</span> <span class="keyword">where</span> nid &gt;<span class="number">12</span>;</span><br></pre></td></tr></table></figure><h5 id="4-查"><a href="#4-查" class="headerlink" title="4.查"></a>4.查</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb7;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb7 <span class="keyword">where</span> nid&gt;=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb7 <span class="keyword">where</span> nid&lt;=<span class="number">5</span> <span class="keyword">name</span>=<span class="string">'hu'</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>,age,nid <span class="keyword">from</span> <span class="keyword">where</span> nid&lt;=<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p><strong>PS:尽量不要用select * from … 因为它效率低，要想查询全部项，可以吧每一项名称列出来。。。</strong></p><h5 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a. 条件</span><br><span class="line"><span class="code">    select * from 表 where id &gt; 1 and name != 'alex' and num = 12;</span></span><br><span class="line"> </span><br><span class="line"><span class="code">    select * from 表 where id between 5 and 16;</span></span><br><span class="line"> </span><br><span class="line"><span class="code">    select * from 表 where id in (11,22,33)</span></span><br><span class="line"><span class="code">    select * from 表 where id not in (11,22,33)</span></span><br><span class="line"><span class="code">    select * from 表 where id in (select nid from 表)</span></span><br></pre></td></tr></table></figure><p><strong>注意：where里不能使用聚合函数(如max(),min(),avg(),count()等</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> b. 通配符</span><br><span class="line">    <span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'ale%'</span>  - ale开头的所有（多个字符串）</span><br><span class="line">    <span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'ale_'</span>  - ale开头的所有（一个字符）</span><br><span class="line"> </span><br><span class="line">c. 限制</span><br><span class="line">    <span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">limit</span> <span class="number">5</span>;            - 前5行</span><br><span class="line">    <span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">limit</span> <span class="number">4</span>,<span class="number">5</span>;          - 从第4行开始的5行</span><br><span class="line">    <span class="keyword">select</span> * <span class="keyword">from</span> 表 <span class="keyword">limit</span> <span class="number">5</span> <span class="keyword">offset</span> <span class="number">4</span>    - 从第<span class="number">4</span>行开始的<span class="number">5</span>行***推荐用***</span><br></pre></td></tr></table></figure><p><strong>翻页</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="code">页码：pageNo   </span></span><br><span class="line"><span class="code">页面容量：pageSize</span></span><br><span class="line"><span class="code">总记录数: cnt</span></span><br><span class="line"><span class="code">到数据库中取 哪些数据limit (pageNo-1)*pageSize ,pageSize; </span></span><br><span class="line"><span class="code">总页数  totalpage = (cnt%pageSize==0)?(cnt/pageSize):(cnt/pageSize+1);   =尾页 </span></span><br><span class="line"> </span><br><span class="line">d. 排序</span><br><span class="line"><span class="code">    select * from 表 order by 列 asc              - 根据 “列” 从小到大排列</span></span><br><span class="line"><span class="code">    select * from 表 order by 列 desc             - 根据 “列” 从大到小排列</span></span><br><span class="line"><span class="code">    select * from 表 order by 列1 desc,列2 asc    - 根据 “列1” 从大到小排列，如果相同则按列2从小到大排序</span></span><br><span class="line"> </span><br><span class="line">e. 分组</span><br><span class="line"><span class="code">    select num from 表 group by num</span></span><br><span class="line"><span class="code">    select num,nid from 表 group by num,nid</span></span><br><span class="line"><span class="code">    select num,nid from 表  where nid &gt; 10 group by num,nid order nid desc</span></span><br><span class="line"><span class="code">    select num,nid,count(*),sum(num),max(num),min(num),agv(num) from 表 group by num,nid</span></span><br><span class="line"> </span><br><span class="line"><span class="code">    select num from 表 group by num having max(id) &gt; 10</span></span><br><span class="line"><span class="code">select num as a,count(nid) as b from group by part//as 可以省略</span></span><br></pre></td></tr></table></figure><p><strong>特别的：group by必须在where之后，order by之前</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">group by + group_concat()</span><br><span class="line">group_concat(字段名)可以作为一个输出字段来使用，表示分组之后，根据分组结果，使用group_concat()来放置每一组的某字段的值的集合</span><br><span class="line"></span><br><span class="line">典例：</span><br><span class="line"><span class="keyword">select</span> sex <span class="keyword">from</span> employee <span class="keyword">group</span> <span class="keyword">by</span> sex;</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line">| sex  |</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line">| 女   |</span><br><span class="line">| 男   |</span><br><span class="line">+<span class="comment">------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sex,<span class="keyword">group_concat</span>(<span class="keyword">name</span>) <span class="keyword">from</span> employee <span class="keyword">group</span> <span class="keyword">by</span> sex;</span><br><span class="line">+<span class="comment">------+--------------------+</span></span><br><span class="line">| sex  | group_concat(name) |</span><br><span class="line">+<span class="comment">------+--------------------+</span></span><br><span class="line">| 女   | 李四               |</span><br><span class="line">| 男   | 张三,王五,Aric     |</span><br><span class="line">+<span class="comment">------+--------------------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sex,<span class="keyword">group_concat</span>(d_id) <span class="keyword">from</span> employee <span class="keyword">group</span> <span class="keyword">by</span> sex;</span><br><span class="line">+<span class="comment">------+--------------------+</span></span><br><span class="line">| sex  | group_concat(d_id) |</span><br><span class="line">+<span class="comment">------+--------------------+</span></span><br><span class="line">| 女   | 1002               |</span><br><span class="line">| 男   | 1001,1003,1004     |</span><br><span class="line">+<span class="comment">------+--------------------+</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">f. 连表</span><br><span class="line"></span><br><span class="line">    无对应关系则不显示</span><br><span class="line">    <span class="keyword">select</span> A.num, A.name, B.name</span><br><span class="line">    <span class="keyword">from</span> A,B</span><br><span class="line">    <span class="keyword">WHERE</span> A.nid = B.nid</span><br></pre></td></tr></table></figure><p><img src="pic/sqljoin.png" alt="avatar"><br> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">     无对应关系则不显示</span><br><span class="line">    <span class="keyword">select</span> A.num, A.name, B.name</span><br><span class="line">    <span class="keyword">from</span> A <span class="keyword">INNER</span> <span class="keyword">JOIN</span> B<span class="comment"># 对Right数据进行过滤，去除掉NULL</span></span><br><span class="line">    <span class="keyword">ON</span> A.nid = B.nid</span><br><span class="line"> </span><br><span class="line">    A表所有显示，如果B中无对应关系，则值为<span class="literal">null</span></span><br><span class="line">    <span class="keyword">select</span> A.num, A.name, B.name***<span class="comment">###优先用</span></span><br><span class="line">    <span class="keyword">from</span> A <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> B</span><br><span class="line">    <span class="keyword">ON</span> A.nid = B.nid</span><br><span class="line"></span><br><span class="line">    <span class="keyword">select</span> A.num, A.name, B.name</span><br><span class="line">    <span class="keyword">from</span> A <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> B<span class="comment"># 对LEFT数据进行过滤，去除掉NULL</span></span><br><span class="line">    <span class="keyword">ON</span> A.nid = B.nid</span><br><span class="line"> </span><br><span class="line">    B表所有显示，如果B中无对应关系，则值为<span class="literal">null</span></span><br><span class="line">    <span class="keyword">select</span> A.num, A.name, B.name</span><br><span class="line">    <span class="keyword">from</span> A <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> B</span><br><span class="line">    <span class="keyword">ON</span> A.nid = B.nid</span><br><span class="line"></span><br><span class="line">* 自连接</span><br><span class="line"><span class="keyword">select</span> A.id B.t_id <span class="keyword">from</span> <span class="keyword">self</span> <span class="string">'A'</span> <span class="keyword">left</span> <span class="keyword">join</span> <span class="keyword">self</span> <span class="string">'B'</span> <span class="keyword">on</span> A.tid = B.id;</span><br><span class="line"> </span><br><span class="line">g. 组合</span><br><span class="line">    组合，自动处理重合</span><br><span class="line">    <span class="keyword">select</span> nickname</span><br><span class="line">    <span class="keyword">from</span> A</span><br><span class="line">    <span class="keyword">union</span></span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">name</span></span><br><span class="line">    <span class="keyword">from</span> B</span><br><span class="line"> </span><br><span class="line">    组合，不处理重合</span><br><span class="line">    <span class="keyword">select</span> nickname</span><br><span class="line">    <span class="keyword">from</span> A</span><br><span class="line">    <span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">name</span></span><br><span class="line">    <span class="keyword">from</span> B</span><br><span class="line"></span><br><span class="line">条件：</span><br><span class="line">&gt; &lt; = &gt;= != &lt;=</span><br><span class="line"><span class="keyword">in</span> (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"><span class="keyword">not</span> <span class="keyword">in</span> (...)</span><br><span class="line"><span class="keyword">in</span> (<span class="keyword">select</span> nid <span class="keyword">from</span> tb1)</span><br><span class="line"></span><br><span class="line"><span class="comment">---------------------------------------</span></span><br><span class="line"><span class="keyword">select</span> t.name,t.sex</span><br><span class="line"><span class="keyword">from</span> stu t</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> c.teacher,c.cname</span><br><span class="line"><span class="keyword">from</span> <span class="keyword">class</span> c;</span><br><span class="line"></span><br><span class="line">+<span class="comment">-----------+----------+</span></span><br><span class="line">| name      | sex      |</span><br><span class="line">+<span class="comment">-----------+----------+</span></span><br><span class="line">| 李四      | 男       |</span><br><span class="line">| 田七      | 女       |</span><br><span class="line">| 赵六      | 男       |</span><br><span class="line">| 陈老师    | 1902Java |</span><br><span class="line">| 李老师    | 1903Java |</span><br><span class="line">| 吴老师    | 1904Java |</span><br><span class="line">| 于老师    | 1902UI   |</span><br><span class="line">| 方老师    | 1901C++  |</span><br><span class="line">+<span class="comment">-----------+----------+</span></span><br><span class="line">8 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"><span class="comment">--------------------------------------</span></span><br><span class="line"></span><br><span class="line">h. 列转行</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">student_id <span class="keyword">AS</span> <span class="keyword">SID</span>,</span><br><span class="line"><span class="keyword">MAX</span>( <span class="keyword">CASE</span> course_id <span class="keyword">WHEN</span> <span class="number">1</span> <span class="keyword">THEN</span> <span class="keyword">num</span> <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span> ) <span class="keyword">AS</span> 物理 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">score </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">student_id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="keyword">user</span>,</span><br><span class="line"><span class="keyword">MAX</span>(<span class="keyword">CASE</span> course_id <span class="keyword">WHEN</span> <span class="string">"数学"</span> <span class="keyword">THEN</span> score <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">as</span> <span class="string">'数学'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">i. 行转列</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">user</span>,<span class="string">'语文'</span> <span class="keyword">AS</span> course , cn_score <span class="keyword">AS</span> score <span class="keyword">from</span> <span class="keyword">test</span></span><br><span class="line">    <span class="keyword">union</span></span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">user</span>,<span class="string">'数学'</span> <span class="keyword">AS</span> course, math_score <span class="keyword">AS</span> score <span class="keyword">from</span> <span class="keyword">test</span></span><br><span class="line">    <span class="keyword">union</span></span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">user</span>,<span class="string">'英语'</span> <span class="keyword">AS</span> course, en_score <span class="keyword">AS</span> score <span class="keyword">from</span> <span class="keyword">test</span></span><br><span class="line">    <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">user</span>,course;</span><br></pre></td></tr></table></figure></p><h5 id="会话"><a href="#会话" class="headerlink" title="会话"></a>会话</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">设置会话变量有三种：</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">session</span> var_name = <span class="keyword">value</span>;</span><br><span class="line"><span class="keyword">set</span> @@session.var_name = <span class="keyword">value</span>;</span><br><span class="line"><span class="keyword">set</span> var_name = <span class="keyword">value</span>;</span><br><span class="line">查看一个会话变量也有如下三种方式：</span><br><span class="line"><span class="keyword">select</span> @@var_name;</span><br><span class="line"><span class="keyword">select</span> @@session.var_name;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">session</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%var%'</span>;</span><br><span class="line">查看系统中所有的会话变量</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">session</span> <span class="keyword">variables</span>;</span><br></pre></td></tr></table></figure><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><blockquote><p>事务是一个最小的不可再分的工作单元<br>一个事务对应一个完整业务(如：银行账户转账业务)</p></blockquote><h4 id="ACID特性"><a href="#ACID特性" class="headerlink" title="ACID特性"></a>ACID特性</h4><ul><li>原子性(atomic) </li><li>一致性(consistency)</li><li>隔离性(isolation)</li><li>持久性(durability)</li></ul><ol><li>事务 - 长期有效</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// 将自动提交改成手动提交，对多次操作有效，只要没执行set autocommit = 1，当前数据库数据的提交状态始终是手动提交</span><br><span class="line">set autocommit = 0;  // 关闭自动提交，设置手动提交</span><br><span class="line">savepoint 回滚点名;  // 设置回滚点</span><br><span class="line">commit               // 提交剩余正确的事务</span><br><span class="line">rollback to 回滚点名 // 回滚到指定回滚点</span><br><span class="line">set autocommit = 1;  // 开启自动提交，取消手动提交,同时做了一个commit操作</span><br></pre></td></tr></table></figure><p><strong>注意：回滚仅能撤销未commit的操作，在commit之前设置的回滚点会失效</strong></p><ol start="2"><li>事务 - 仅对单次事务有效<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">start transaction    // 开启事务</span><br><span class="line">rollback             // 回滚事务</span><br><span class="line">commit               // 提交事务</span><br></pre></td></tr></table></figure></li></ol><p><strong>start transaction 开启事务后，变成手动提交，在遇到rollback或commit后就自动关闭了事务，变回自动提交</strong></p><p><strong>脏读</strong></p><h1 id="五、数据库管理"><a href="#五、数据库管理" class="headerlink" title="五、数据库管理"></a>五、数据库管理</h1><h3 id="运用Navicat管理数据库"><a href="#运用Navicat管理数据库" class="headerlink" title="运用Navicat管理数据库"></a>运用Navicat管理数据库</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">连接数据库</span><br><span class="line">-- 查找</span><br><span class="line">-- 修改</span><br><span class="line">-- 更新</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="数据库备份与恢复"><a href="#数据库备份与恢复" class="headerlink" title="数据库备份与恢复"></a>数据库备份与恢复</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">导出数据库：</span><br><span class="line">未登录状态下：</span><br><span class="line">mysqldump -u用户名 -p密码 数据库名称 &gt;导出文件路径           # 结构+数据</span><br><span class="line">mysqldump -u用户名 -p密码 -d 数据库名称 &gt;导出文件路径        # 结构 </span><br><span class="line"></span><br><span class="line">导入数据库:</span><br><span class="line">未登录状态下：</span><br><span class="line">mysqldump -uroot -p密码  数据库名称 &lt;文件路径</span><br><span class="line">登录状态下：</span><br><span class="line">source 文件路径</span><br><span class="line"></span><br><span class="line">补充</span><br><span class="line">- avg()获取平均值</span><br><span class="line"><span class="keyword">select</span> student</span><br></pre></td></tr></table></figure><p>作业：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">3mysql&gt; select student_id,avg(num) from score group by student_id having avg(num)&gt;60;</span><br><span class="line">+<span class="comment">------------+----------+</span></span><br><span class="line">| student_id | avg(num) |</span><br><span class="line">+<span class="comment">------------+----------+</span></span><br><span class="line">|          3 |  82.2500 |</span><br><span class="line">|          4 |  64.2500 |</span><br><span class="line">|          5 |  64.2500 |</span><br><span class="line">|          6 |  69.0000 |</span><br><span class="line">|          7 |  66.0000 |</span><br><span class="line">|          8 |  66.0000 |</span><br><span class="line">|          9 |  67.0000 |</span><br><span class="line">|         10 |  74.2500 |</span><br><span class="line">|         11 |  74.2500 |</span><br><span class="line">|         12 |  74.2500 |</span><br><span class="line">|         13 |  87.0000 |</span><br><span class="line">+<span class="comment">------------+----------+</span></span><br><span class="line">11 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>mysql&gt; <span class="keyword">select</span> student.sid,student.sname,<span class="keyword">sum</span>(course_id),<span class="keyword">sum</span>(<span class="keyword">num</span>) <span class="keyword">from</span> score</span><br><span class="line">-&gt; <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> student <span class="keyword">on</span> student.sid=score.student_id</span><br><span class="line">-&gt; <span class="keyword">group</span> <span class="keyword">by</span> student_id;</span><br><span class="line">+<span class="comment">------+-------+----------------+----------+</span></span><br><span class="line">| sid  | sname | sum(course_id) | sum(num) |</span><br><span class="line">+<span class="comment">------+-------+----------------+----------+</span></span><br><span class="line">|    1 | 理解  |              7 |       85 |</span><br><span class="line">|    2 | 钢蛋  |              8 |      175 |</span><br><span class="line">|    3 | 张三  |             10 |      329 |</span><br><span class="line">|    4 | 张一  |             10 |      257 |</span><br><span class="line">|    5 | 张二  |             10 |      257 |</span><br><span class="line">|    6 | 张四  |             10 |      276 |</span><br><span class="line">|    7 | 铁锤  |             10 |      264 |</span><br><span class="line">|    8 | 李三  |             10 |      264 |</span><br><span class="line">|    9 | 李一  |             10 |      268 |</span><br><span class="line">|   10 | 李二  |             10 |      297 |</span><br><span class="line">|   11 | 李四  |             10 |      297 |</span><br><span class="line">|   12 | 如花  |             10 |      297 |</span><br><span class="line">|   13 | 刘三  |              3 |       87 |</span><br><span class="line">+<span class="comment">------+-------+----------------+----------+</span></span><br><span class="line">13 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>mysql&gt; <span class="keyword">select</span> <span class="keyword">count</span>(tname) <span class="keyword">as</span> <span class="keyword">num</span> <span class="keyword">from</span> teacher <span class="keyword">where</span> tname <span class="keyword">like</span> <span class="string">'李%'</span>;</span><br><span class="line">+<span class="comment">-----+</span></span><br><span class="line">| num |</span><br><span class="line">+<span class="comment">-----+</span></span><br><span class="line">|   2 |</span><br><span class="line">+<span class="comment">-----+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="number">6</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">7</span>mysql&gt; <span class="keyword">select</span> * <span class="keyword">from</span> (</span><br><span class="line">-&gt; <span class="keyword">select</span> score.student_id <span class="keyword">as</span> stid,</span><br><span class="line">-&gt; student.sname <span class="keyword">as</span> stname</span><br><span class="line">-&gt; <span class="keyword">from</span></span><br><span class="line">-&gt; score</span><br><span class="line">-&gt; <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span></span><br><span class="line">-&gt; student <span class="keyword">on</span></span><br><span class="line">-&gt; score.student_id=student.sid</span><br><span class="line">-&gt; <span class="keyword">where</span> score.course_id=<span class="number">1</span> <span class="keyword">or</span> score.course_id=<span class="number">2</span></span><br><span class="line">-&gt; ) <span class="keyword">as</span> v</span><br><span class="line">-&gt; <span class="keyword">group</span> <span class="keyword">by</span> stid</span><br><span class="line">-&gt; <span class="keyword">having</span> <span class="keyword">count</span>(stid)=<span class="number">2</span>;</span><br><span class="line">+<span class="comment">------+--------+</span></span><br><span class="line">| stid | stname |</span><br><span class="line">+<span class="comment">------+--------+</span></span><br><span class="line">|    1 | 理解   |</span><br><span class="line">|    3 | 张三   |</span><br><span class="line">|    4 | 张一   |</span><br><span class="line">|    5 | 张二   |</span><br><span class="line">|    6 | 张四   |</span><br><span class="line">|    7 | 铁锤   |</span><br><span class="line">|    8 | 李三   |</span><br><span class="line">|    9 | 李一   |</span><br><span class="line">|   10 | 李二   |</span><br><span class="line">|   11 | 李四   |</span><br><span class="line">|   12 | 如花   |</span><br><span class="line">+<span class="comment">------+--------+</span></span><br><span class="line"></span><br><span class="line">8<span class="keyword">SELECT</span></span><br><span class="line">student_id,</span><br><span class="line">student.sname</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">score.student_id <span class="keyword">AS</span> student_id,</span><br><span class="line">teacher.tname <span class="keyword">AS</span> tname,</span><br><span class="line">course.cname <span class="keyword">AS</span> cname</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">course</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> teacher <span class="keyword">ON</span> teacher.tid = course.teacher_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> score <span class="keyword">ON</span> score.course_id = course.cid</span><br><span class="line">) <span class="keyword">AS</span> tb</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span></span><br><span class="line">student <span class="keyword">ON</span></span><br><span class="line">student.sid=tb.student_id</span><br><span class="line"><span class="keyword">WHERE</span> tb.tname = <span class="string">'李平老师'</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> tb.student_id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">student_id <span class="keyword">AS</span> <span class="keyword">SID</span>,</span><br><span class="line">( <span class="keyword">SELECT</span> <span class="keyword">num</span> <span class="keyword">FROM</span> score <span class="keyword">AS</span> InnerTb <span class="keyword">WHERE</span> InnerTb.student_id = OuterTb.student_id <span class="keyword">AND</span> course_id = <span class="number">1</span> ) <span class="keyword">AS</span> 生物,</span><br><span class="line">( <span class="keyword">SELECT</span> <span class="keyword">num</span> <span class="keyword">FROM</span> score <span class="keyword">AS</span> InnerTb <span class="keyword">WHERE</span> InnerTb.student_id = OuterTb.student_id <span class="keyword">AND</span> course_id = <span class="number">2</span> ) <span class="keyword">AS</span> 物理,</span><br><span class="line">( <span class="keyword">SELECT</span> <span class="keyword">num</span> <span class="keyword">FROM</span> score <span class="keyword">AS</span> InnerTb <span class="keyword">WHERE</span> InnerTb.student_id = OuterTb.student_id <span class="keyword">AND</span> course_id = <span class="number">3</span> ) <span class="keyword">AS</span> 体育,</span><br><span class="line">( <span class="keyword">SELECT</span> <span class="keyword">num</span> <span class="keyword">FROM</span> score <span class="keyword">AS</span> InnerTb <span class="keyword">WHERE</span> InnerTb.student_id = OuterTb.student_id <span class="keyword">AND</span> course_id = <span class="number">4</span> ) <span class="keyword">AS</span> 美术,</span><br><span class="line"><span class="keyword">sum</span>( OuterTb.num ) <span class="keyword">AS</span> <span class="keyword">Sum</span>,</span><br><span class="line"><span class="keyword">avg</span>( OuterTb.num ) <span class="keyword">AS</span> <span class="keyword">Avg</span> </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">score <span class="keyword">AS</span> OuterTb </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">student_id </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line"><span class="keyword">Avg</span> <span class="keyword">ASC</span>;</span><br><span class="line"></span><br><span class="line">18 </span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">course_id,</span><br><span class="line"><span class="keyword">MAX</span>(<span class="keyword">num</span>) <span class="keyword">as</span> <span class="keyword">Max</span>,</span><br><span class="line"><span class="keyword">MIN</span>(<span class="keyword">num</span>) <span class="keyword">as</span> <span class="keyword">Min</span></span><br><span class="line"><span class="keyword">from</span> score</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">course_id;</span><br><span class="line"></span><br><span class="line">19</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">student_id,</span><br><span class="line"></span><br><span class="line"><span class="number">20</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">course.cname,</span><br><span class="line">teacher.tname,</span><br><span class="line"><span class="keyword">AVG</span>(score.num) <span class="keyword">as</span> <span class="keyword">Avg</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">course</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> teacher <span class="keyword">ON</span> teacher.tid=course.teacher_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> score <span class="keyword">ON</span> score.course_id=course.cid</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> course.cid</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">Avg</span> <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line">21</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">score.student_id,</span><br><span class="line"><span class="keyword">MAX</span>(<span class="keyword">CASE</span> course.cid</span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">1</span> <span class="keyword">THEN</span></span><br><span class="line">score.num</span><br><span class="line"><span class="keyword">ELSE</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">) <span class="keyword">AS</span> 物理</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">score</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> course <span class="keyword">ON</span> course.cid=score.course_id</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> student_id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 物理 <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">22</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">course.cname <span class="keyword">AS</span> 课程名称,</span><br><span class="line"><span class="keyword">COUNT</span>( <span class="number">2</span> ) <span class="keyword">AS</span> 人数 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">score</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> course <span class="keyword">ON</span> score.course_id = course.cid </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">course_id;</span><br><span class="line"></span><br><span class="line">23</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">score.student_id,</span><br><span class="line">student.sname,</span><br><span class="line"><span class="keyword">COUNT</span>(course_id)</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">score</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> student <span class="keyword">ON</span> score.student_id = student.sid </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">student_id </span><br><span class="line"><span class="keyword">HAVING</span></span><br><span class="line"><span class="keyword">COUNT</span>( course_id ) = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">24</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">gender,</span><br><span class="line"><span class="keyword">COUNT</span>( <span class="keyword">sid</span> ) <span class="keyword">AS</span> 人数 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">student </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">gender;</span><br><span class="line"></span><br><span class="line">25</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">* </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">student </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">sname <span class="keyword">LIKE</span> <span class="string">'李%'</span>;</span><br><span class="line"></span><br><span class="line">26</span><br></pre></td></tr></table></figure><p>数据库操作：<br>1、数据库连接写入配置文件：<br>    用户名、密码、数据库端口、编码<br>2、数据库每一表(程序中创建一个类)</p><h1 id="六、数据库高级应用"><a href="#六、数据库高级应用" class="headerlink" title="六、数据库高级应用"></a>六、数据库高级应用</h1><h2 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h2><p>视图的优点：保护基本表的数据。</p><p>视图的特点：</p><ul><li>视图的数据来源于基本表，对视图的数据进行添加、删除直接影响基本表。</li><li>视图的列可以来自不同的表，是表的抽象和逻辑意义上建立的。</li><li>视图的建立和删除不影响基本表。</li><li>当时图来自多个基本表时,不允许添加和删除数据,但可以修改。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">创建视图</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> 视图名 <span class="keyword">as</span> 查询表</span><br><span class="line">例如：</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> v_product <span class="keyword">as</span> <span class="keyword">select</span> t_id,t_name <span class="keyword">from</span> t_product; </span><br><span class="line"> </span><br><span class="line">删除视图</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> 视图名<span class="number">1</span>,视图名<span class="number">2</span>,视图名<span class="number">3</span>;</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> <span class="keyword">if</span> <span class="keyword">exists</span> 视图名<span class="number">1</span>,视图名<span class="number">2</span>,视图名<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">修改视图</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span> <span class="keyword">view</span> 视图名 a <span class="keyword">select</span> t_id,t_name <span class="keyword">from</span> t_product;    // 方式一</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">view</span> v_product <span class="keyword">as</span> <span class="keyword">select</span> t_id,t_name <span class="keyword">from</span> t_product;            // 方式二</span><br><span class="line"></span><br><span class="line">显示视图信息</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">table</span> <span class="keyword">status</span> <span class="keyword">from</span> 数据库名;                      // 查看该数据库视图的状态</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">table</span> <span class="keyword">status</span> <span class="keyword">from</span> 数据库名\G;                    // 查看该数据库视图的状态，分行显示</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">table</span> <span class="keyword">status</span> <span class="keyword">from</span> 数据库名 <span class="keyword">like</span> <span class="string">'v_stu'</span>;         // 查看该数据库指定的视图的状态</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">table</span> <span class="keyword">status</span> <span class="keyword">from</span> 数据库名\G <span class="keyword">like</span> <span class="string">'v_stu'</span>;       // 查看该数据库指定的视图的状态，分行显示</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> information_schema;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> views\G <span class="keyword">where</span> table_name=<span class="string">'v_%'</span>;                                 // 查看所有数据库下的所有视图信息</span><br></pre></td></tr></table></figure><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><h3 id="索引种类"><a href="#索引种类" class="headerlink" title="索引种类"></a>索引种类</h3><p><em>索引列顺序：</em>让选择性最强的索引列放在前面。</p><p><strong>索引的选择性</strong>是指：不重复的索引值和记录总数的比值。最大为1</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">index</span> <span class="keyword">from</span> 表名\G           // 查询索引</span><br></pre></td></tr></table></figure><ul><li>数据量大</li><li>经常查询</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">普通索引 - 加速查找</span><br><span class="line">唯一索引 - 加速查找，约束列数据不能重复，null</span><br><span class="line">主键索引 - 加速查找，约束列数据不能重复，不能为null</span><br><span class="line">组合索引 - 多列可以创建一个索引文件</span><br></pre></td></tr></table></figure><ol><li>普通索引</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> @indexname <span class="keyword">on</span> @tablename(@columnname); <span class="comment">--新建索引</span></span><br><span class="line"></span><br><span class="line">// 创建索引的关键词:index/key</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb111(</span><br><span class="line"><span class="keyword">sid</span> <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment primary <span class="keyword">key</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">email <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">extra <span class="built_in">text</span>,</span><br><span class="line"><span class="keyword">index</span>/<span class="keyword">key</span> ix_name (<span class="keyword">name</span>),</span><br><span class="line"><span class="keyword">unique</span> ix_name (<span class="keyword">name</span>,email)  <span class="comment">-- 唯一索引(联合唯一索引)</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> in1(</span><br><span class="line"><span class="keyword">sid</span> <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment primary <span class="keyword">key</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">email <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> ix_name <span class="keyword">on</span> tb111(<span class="keyword">name</span>);<span class="comment">-- 新建索引</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> ix_name <span class="keyword">on</span> tb111;<span class="comment">-- 删除索引</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">index</span> <span class="keyword">from</span> tb111;<span class="comment">-- 显示索引</span></span><br></pre></td></tr></table></figure><p><em>创建索引如果没有指定索引名，那么默认是和列名一样</em></p><ol start="2"><li>唯一索引</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> <span class="keyword">index</span> uni_index <span class="keyword">on</span> tb111(<span class="keyword">name</span>);                       // 方式一</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb111(</span><br><span class="line"><span class="keyword">sid</span> <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment primary <span class="keyword">key</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">email <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">extra <span class="built_in">text</span>,,</span><br><span class="line"><span class="keyword">unique</span> ix_name (<span class="keyword">name</span>,email)  <span class="comment">-- 唯一索引(联合唯一索引)          // 方式二</span></span><br><span class="line">)<span class="keyword">engine</span>=<span class="keyword">INNODB</span> <span class="keyword">default</span> <span class="keyword">charset</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb111(</span><br><span class="line"><span class="keyword">sid</span> <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment primary <span class="keyword">key</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">email <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">extra <span class="built_in">text</span>,</span><br><span class="line"><span class="keyword">unique</span> <span class="keyword">index</span>/<span class="keyword">key</span> (<span class="keyword">name</span>)  <span class="comment">-- 唯一索引                            // 方式三</span></span><br><span class="line">)<span class="keyword">engine</span>=<span class="keyword">INNODB</span> <span class="keyword">default</span> <span class="keyword">charset</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> @tablename <span class="keyword">add</span> <span class="keyword">unique</span> <span class="keyword">index</span> uni_index tb111(<span class="keyword">name</span>);      // 方式四</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb111(</span><br><span class="line"><span class="keyword">sid</span> <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment primary <span class="keyword">key</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">unique</span>,                               // 方式五</span><br><span class="line">email <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">extra <span class="built_in">text</span>，</span><br><span class="line">)<span class="keyword">engine</span>=<span class="keyword">INNODB</span> <span class="keyword">default</span> <span class="keyword">charset</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">unique</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 表名// 删除索引</span><br></pre></td></tr></table></figure><ol start="3"><li>主键索引</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">   //  创建表 + 创建主键</span><br><span class="line">   <span class="keyword">create</span> <span class="keyword">table</span> in1(</span><br><span class="line">       nid <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment primary <span class="keyword">key</span>,</span><br><span class="line">       <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">       email <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">       extra <span class="built_in">text</span>,</span><br><span class="line">       <span class="keyword">index</span> ix_name (<span class="keyword">name</span>)</span><br><span class="line">   )</span><br><span class="line"></span><br><span class="line">   <span class="keyword">OR</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">create</span> <span class="keyword">table</span> in1(</span><br><span class="line">       nid <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span> auto_increment,</span><br><span class="line">       <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">       email <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">       extra <span class="built_in">text</span>,</span><br><span class="line">       primary <span class="keyword">key</span>(ni1),</span><br><span class="line">       <span class="keyword">index</span> ix_name (<span class="keyword">name</span>)</span><br><span class="line">   )</span><br><span class="line">   </span><br><span class="line">- 不能重复，不能为空</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> @tablename <span class="keyword">add</span> primary <span class="keyword">key</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> @tablename <span class="keyword">drop</span> primary <span class="keyword">key</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> @tablename <span class="keyword">modify</span> @columnname <span class="built_in">int</span> <span class="keyword">drop</span> primary <span class="keyword">key</span>;</span><br></pre></td></tr></table></figure><p>4.组合索引</p><p><em>注:对于同时搜索n个条件时，组合索引的性能好于多个单一索引合并</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">// 创建索引</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> ix_name_email <span class="keyword">on</span> in3(<span class="keyword">name</span>,email);</span><br><span class="line"></span><br><span class="line">name,pwd</span><br><span class="line">- 普通组合索引</span><br><span class="line">无约束</span><br><span class="line">name,pwd</span><br><span class="line">- 联合唯一索引</span><br><span class="line">有约束，两列(多列)数据同时不相同(单个相同不影响)，才能插入，不然报错</span><br><span class="line">查找：最左匹配</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'virualv'</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'virualv'</span> <span class="keyword">and</span> pwd = <span class="string">'123'</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> pwd = <span class="string">'123'</span><span class="comment"># 不会走索引</span></span><br><span class="line"></span><br><span class="line">查找：最左匹配</span><br><span class="line"><span class="keyword">name</span>,pwd,email</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'virualv'</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> pwd = <span class="string">'123'</span><span class="comment"># 不会走索引</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> email = <span class="string">'virualv'</span><span class="comment"># 不会走索引</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'virualv'</span> <span class="keyword">and</span> pwd = <span class="string">'123'</span></span><br></pre></td></tr></table></figure><hr><p>5.覆盖索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> nid = <span class="number">1</span> </span><br><span class="line"><span class="comment"># 先去索引中找</span></span><br><span class="line"><span class="comment"># 再去数据库中找</span></span><br><span class="line"><span class="keyword">select</span> nid <span class="keyword">from</span> tb1 <span class="keyword">where</span> nid &lt; <span class="number">10</span></span><br><span class="line"><span class="comment"># 先去索引中找</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 只需要在索引表中就能获取到数据时</span></span><br><span class="line"><span class="comment">-- 这种情况就表示应用上了索引，并且不用去数据库中操作，叫做覆盖索引</span></span><br></pre></td></tr></table></figure><p>6.合并索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">nidname(单独索引)email(单独索引)pwd</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'virualv'</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb <span class="keyword">where</span> email = <span class="string">'virualv666@163.com'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'virualv'</span> <span class="keyword">or</span> email = <span class="string">'virualv666@163.com'</span></span><br><span class="line"></span><br><span class="line">nid<span class="keyword">name</span>(组)email(合)pwd</span><br><span class="line"><span class="comment">#最左前缀</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'virualv'</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb <span class="keyword">where</span> email = <span class="string">'virualv666@163.com'</span> <span class="comment">######无法满足最左前缀####### </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'virualv'</span> <span class="keyword">or</span> email = <span class="string">'virualv666@163.com'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--&gt; 组合和合并索引的取舍，由业务需求来决定</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 执行计划-- 相对比较准确的表达出当前SQL运行状况</span></span><br><span class="line">是否走索引，不走索引，则直接从数据库中去找</span><br><span class="line"><span class="keyword">explain</span> <span class="keyword">SQL</span>语句</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>、<span class="keyword">explain</span> <span class="keyword">SQL</span>语句</span><br><span class="line"><span class="keyword">type</span>：<span class="keyword">ALL</span> - 全数据表扫描</span><br><span class="line"><span class="keyword">type</span>：<span class="keyword">index</span>- 全索引表扫描</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、<span class="keyword">limit</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> email=<span class="string">'virualv666@163.com'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> email=<span class="string">'virualv666@163.com'</span> <span class="keyword">limit</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--------------SQL:ALL、index,都是有优化的余地--------------</span></span><br><span class="line"></span><br><span class="line">3、range</span><br></pre></td></tr></table></figure><p>7.全文索引</p><p><em>只能在MyISAM引擎里使用,INNODB不支持</em></p><p><strong>设置前文索引的列必须是char,varchar,text 3种类型，其他的类型对应的列，不能加上全文索引</strong></p><p><em>待补充</em></p><p><strong>至少插入3行样本数据，用于测试的关键词 至少4个字符，不能是停止词：非常频繁出现的常用词，例如:the,some,my,you等 这样过于平常而被认为是不具语义的词，存在一个</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t3(</span><br><span class="line">nid <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">sex <span class="built_in">char</span>(<span class="number">1</span>),</span><br><span class="line">fulltext <span class="keyword">index</span> FullTex_inx(<span class="keyword">name</span>)</span><br><span class="line">)<span class="keyword">engine</span>=MyISAM <span class="keyword">default</span> <span class="keyword">charset</span>=utf8;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t3(</span><br><span class="line">nid <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">sex <span class="built_in">char</span>(<span class="number">1</span>)</span><br><span class="line">)<span class="keyword">engine</span>=MyISAM <span class="keyword">default</span> <span class="keyword">charset</span>=utf8;</span><br><span class="line"><span class="keyword">create</span> fulltext <span class="keyword">index</span> FullTex_inx t3(<span class="keyword">name</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> t3 <span class="keyword">where</span> <span class="keyword">match</span>(<span class="keyword">name</span>) against (索引词); </span><br><span class="line"></span><br><span class="line">**待处理</span><br><span class="line"><span class="comment">------计算匹配度   </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span>  t_person4.*, <span class="keyword">match</span>(t_info) against (<span class="string">'今天吃了'</span>)  <span class="keyword">from</span> t_person4 \G; </span><br><span class="line"></span><br><span class="line"> <span class="comment">----测试的关键词出现在所在行中，匹配度就不是0，否则就是0 </span></span><br><span class="line"><span class="keyword">select</span>  t_person4.*, <span class="keyword">match</span>(t_info) against (<span class="string">'katherine'</span>)  <span class="keyword">from</span> t_person4 \G; </span><br><span class="line">**</span><br></pre></td></tr></table></figure><p>8.空间索引</p><p><em>只有如下字段类型可以建空间索引</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// 建立空间索引</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t4(</span><br><span class="line">nid geometry <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">age <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">info <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">spatial <span class="keyword">index</span> spat_idx(nid)</span><br><span class="line">)<span class="keyword">engine</span>=MyISAM <span class="keyword">default</span> <span class="keyword">charset</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">index</span> <span class="keyword">from</span> t4\G;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> t4;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t4(</span><br><span class="line">nid geometry <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">age <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">info <span class="built_in">varchar</span>(<span class="number">255</span></span><br><span class="line">)<span class="keyword">engine</span>=MyISAM <span class="keyword">default</span> <span class="keyword">charset</span>=utf8;</span><br><span class="line">// 建立空间索引</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t4 <span class="keyword">add</span> spatial <span class="keyword">index</span> spat_idx(nid);</span><br></pre></td></tr></table></figure><p>9.正确使用索引（命中索引）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">- like '%xx'</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'%cn'</span>;</span><br><span class="line">- 使用函数</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> <span class="keyword">reverse</span>(<span class="keyword">name</span>) = <span class="string">'wupeiqi'</span>;</span><br><span class="line">- or</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> nid = <span class="number">1</span> <span class="keyword">or</span> email = <span class="string">'seven@live.com'</span>;</span><br><span class="line">特别的：当or条件中有未建立索引的列才失效，以下会走索引</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> nid = <span class="number">1</span> <span class="keyword">or</span> <span class="keyword">name</span> = <span class="string">'seven'</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> nid = <span class="number">1</span> <span class="keyword">or</span> email = <span class="string">'seven@live.com'</span> <span class="keyword">and</span> <span class="keyword">name</span> = <span class="string">'alex'</span></span><br><span class="line">- 类型不一致</span><br><span class="line">如果列是字符串类型，传入条件是必须用引号引起来，不然...</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> <span class="keyword">name</span> = <span class="number">999</span>;</span><br><span class="line">- !=</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> <span class="keyword">name</span> != <span class="string">'alex'</span></span><br><span class="line">特别的：如果是主键，则还是会走索引</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> nid != <span class="number">123</span></span><br><span class="line">- &gt;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> <span class="keyword">name</span> &gt; <span class="string">'alex'</span></span><br><span class="line">特别的：如果是主键或索引是整数类型，则还是会走索引</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> nid &gt; <span class="number">123</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">where</span> <span class="keyword">num</span> &gt; <span class="number">123</span></span><br><span class="line">- <span class="keyword">order</span> <span class="keyword">by</span></span><br><span class="line"><span class="keyword">select</span> email <span class="keyword">from</span> tb1 <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">name</span> <span class="keyword">desc</span>;</span><br><span class="line">当根据索引排序时候，选择的映射如果不是索引，则不走索引</span><br><span class="line">特别的：如果对主键排序，则还是走索引：</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb1 <span class="keyword">order</span> <span class="keyword">by</span> nid <span class="keyword">desc</span>;</span><br><span class="line"> </span><br><span class="line">- 组合索引最左前缀</span><br><span class="line">如果组合索引为：(name,email)</span><br><span class="line">name and email       <span class="comment">-- 使用索引</span></span><br><span class="line">name                 <span class="comment">-- 使用索引</span></span><br><span class="line">email                <span class="comment">-- 不使用索引</span></span><br><span class="line"></span><br><span class="line">其他注意事项：</span><br><span class="line">- 避免使用<span class="keyword">select</span> *</span><br><span class="line">- <span class="keyword">count</span>(<span class="number">1</span>)或<span class="keyword">count</span>(列) 代替 <span class="keyword">count</span>(*)</span><br><span class="line">- 创建表时尽量时 <span class="built_in">char</span> 代替 <span class="built_in">varchar</span></span><br><span class="line">- 表的字段顺序固定长度的字段优先</span><br><span class="line">- 组合索引代替多个单列索引（经常使用多个条件查询时）</span><br><span class="line">- 尽量使用短索引</span><br><span class="line">- 使用连接（<span class="keyword">JOIN</span>）来代替子查询(Sub-Queries)</span><br><span class="line">- 连表时注意条件类型需一致</span><br><span class="line">- 索引散列值（重复少）不适合建索引，例：性别不适合</span><br></pre></td></tr></table></figure><p>删除索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// 方式一</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 表名;</span><br><span class="line"></span><br><span class="line">//方式二</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">index</span> 索引名;</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> primary <span class="keyword">key</span>;     // 删除主键索引</span><br></pre></td></tr></table></figure><p><strong>禁用和启用索引</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">enable</span> <span class="keyword">keys</span>;        // 启用索引</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">disable</span> <span class="keyword">keys</span>;       // 禁用索引</span><br></pre></td></tr></table></figure><h2 id="索引的优点"><a href="#索引的优点" class="headerlink" title="索引的优点"></a>索引的优点</h2><ul><li>索引通常远小于数据行的大小，只读取索引能大大减少数据访问量。</li><li>一些存储引擎（例如 MyISAM）在内存中只缓存索引，而数据依赖于操作系统来缓存。因此，只访问索引可以</li><li>不使用系统调用（通常比较费时）。</li><li>对于 InnoDB 引擎，若辅助索引能够覆盖查询，则无需访问主索引。</li></ul><h1 id="普通索引，数字，num-！-123-？？？？"><a href="#普通索引，数字，num-！-123-？？？？" class="headerlink" title="普通索引，数字，num ！=123 ？？？？"></a>普通索引，数字，num ！=123 ？？？？</h1><h1 id="name-email-pwd-email-pwd-是否走索引？"><a href="#name-email-pwd-email-pwd-是否走索引？" class="headerlink" title="(name,email,pwd) ? email,pwd 是否走索引？"></a>(name,email,pwd) ? email,pwd 是否走索引？</h1><h1 id="如何创建短索引？"><a href="#如何创建短索引？" class="headerlink" title="如何创建短索引？"></a>如何创建短索引？</h1><p><em>待补充</em> </p><p><strong>注意：</strong></p><ol><li>索引是在存储引擎中实现的，也就是说不同的存储引擎会使用不同的索引</li><li>MyISAM和InnoDB存储引擎：只支持BTREE索引，也就是说默认使用BTREE，不能更换</li><li>MEMORY/HEAP存储引擎支持HASH和BTREE索引</li><li>索引我们分为四类来讲，单列索引（普通索引，唯一索引，主键索引）、组合索引、全文索引、空间索引。</li></ol><h4 id="mysql-慢日志"><a href="#mysql-慢日志" class="headerlink" title="mysql 慢日志"></a>mysql 慢日志</h4><h2 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tb <span class="keyword">limit</span> (<span class="keyword">start</span><span class="number">-1</span>)*pageSize,pageSize</span><br></pre></td></tr></table></figure><p>limit原理</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">每页显示10条：</span><br><span class="line">当前 118 120， 125</span><br><span class="line"></span><br><span class="line">倒序：</span><br><span class="line">            大      小</span><br><span class="line">            980    970  7 6  6 5  54  43  32</span><br><span class="line"></span><br><span class="line">21 19 98     </span><br><span class="line">下一页：</span><br><span class="line"></span><br><span class="line">    <span class="keyword">select</span> </span><br><span class="line">        * </span><br><span class="line">    <span class="keyword">from</span> </span><br><span class="line">        tb1 </span><br><span class="line">    <span class="keyword">where</span> </span><br><span class="line">        nid &lt; (<span class="keyword">select</span> nid <span class="keyword">from</span> (<span class="keyword">select</span> nid <span class="keyword">from</span> tb1 <span class="keyword">where</span> nid &lt; 当前页最小值 <span class="keyword">order</span> <span class="keyword">by</span> nid <span class="keyword">desc</span> <span class="keyword">limit</span> 每页数据 *【页码-当前页】) A <span class="keyword">order</span> <span class="keyword">by</span> A.nid <span class="keyword">asc</span> <span class="keyword">limit</span> <span class="number">1</span>)  </span><br><span class="line">    <span class="keyword">order</span> <span class="keyword">by</span> </span><br><span class="line">        nid <span class="keyword">desc</span> </span><br><span class="line">    <span class="keyword">limit</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">select</span> </span><br><span class="line">        * </span><br><span class="line">    <span class="keyword">from</span> </span><br><span class="line">        tb1 </span><br><span class="line">    <span class="keyword">where</span> </span><br><span class="line">        nid &lt; (<span class="keyword">select</span> nid <span class="keyword">from</span> (<span class="keyword">select</span> nid <span class="keyword">from</span> tb1 <span class="keyword">where</span> nid &lt; <span class="number">970</span>  <span class="keyword">order</span> <span class="keyword">by</span> nid <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">40</span>) A <span class="keyword">order</span> <span class="keyword">by</span> A.nid <span class="keyword">asc</span> <span class="keyword">limit</span> <span class="number">1</span>)  </span><br><span class="line">    <span class="keyword">order</span> <span class="keyword">by</span> </span><br><span class="line">        nid <span class="keyword">desc</span> </span><br><span class="line">    <span class="keyword">limit</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">上一页：</span><br><span class="line"></span><br><span class="line">    <span class="keyword">select</span> </span><br><span class="line">        * </span><br><span class="line">    <span class="keyword">from</span> </span><br><span class="line">        tb1 </span><br><span class="line">    <span class="keyword">where</span> </span><br><span class="line">        nid &lt; (<span class="keyword">select</span> nid <span class="keyword">from</span> (<span class="keyword">select</span> nid <span class="keyword">from</span> tb1 <span class="keyword">where</span> nid &gt; 当前页最大值 <span class="keyword">order</span> <span class="keyword">by</span> nid <span class="keyword">asc</span> <span class="keyword">limit</span> 每页数据 *【当前页-页码】) A <span class="keyword">order</span> <span class="keyword">by</span> A.nid <span class="keyword">asc</span> <span class="keyword">limit</span> <span class="number">1</span>)  </span><br><span class="line">    <span class="keyword">order</span> <span class="keyword">by</span> </span><br><span class="line">        nid <span class="keyword">desc</span> </span><br><span class="line">    <span class="keyword">limit</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">select</span> </span><br><span class="line">        * </span><br><span class="line">    <span class="keyword">from</span> </span><br><span class="line">        tb1 </span><br><span class="line">    <span class="keyword">where</span> </span><br><span class="line">        nid &lt; (<span class="keyword">select</span> nid <span class="keyword">from</span> (<span class="keyword">select</span> nid <span class="keyword">from</span> tb1 <span class="keyword">where</span> nid &gt; <span class="number">980</span> <span class="keyword">order</span> <span class="keyword">by</span> nid <span class="keyword">asc</span> <span class="keyword">limit</span> <span class="number">20</span>) A <span class="keyword">order</span> <span class="keyword">by</span> A.nid <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">1</span>)  </span><br><span class="line">    <span class="keyword">order</span> <span class="keyword">by</span> </span><br><span class="line">        nid <span class="keyword">desc</span> </span><br><span class="line">    <span class="keyword">limit</span> <span class="number">10</span>;</span><br></pre></td></tr></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><ol><li>局部变量</li></ol><p><code>作用范围在存储过程的语句块内，函数内有效，超出范围不可见</code></p><ol start="2"><li><p>用户变量</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@变量名     变量名自取</span><br><span class="line"><span class="keyword">set</span> @变量名 = 值<span class="number">1</span>;</span><br><span class="line"><span class="keyword">set</span> @变量名 = 值<span class="number">1</span>；</span><br><span class="line"><span class="keyword">select</span> 值<span class="number">1</span> <span class="keyword">into</span> @变量名;</span><br><span class="line"><span class="keyword">select</span> @变量名 := 值<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">作用范围：单次连接期间有效；退出登录，重新登录后获取的值是null</span><br></pre></td></tr></table></figure></li><li><p>会话变量</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@@变量名 三百多个(mysql 5.5中) 513个(mysql 5.7中) ,变量名固定</span><br><span class="line"><span class="code">session 变量名固定</span></span><br><span class="line"><span class="code">@@session.变量名</span></span><br><span class="line"></span><br><span class="line">作用范围：单次连接期间有效，退出登录，重新登录，恢复成默认值</span><br></pre></td></tr></table></figure></li><li><p>全局变量</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">三百多个(mysql 5.5中) 499个(mysql 5.7中)</span><br><span class="line">@@global.变量名</span><br><span class="line">global 变量名固定</span><br><span class="line"></span><br><span class="line">作用范围：在服务启动期间有效，如果服务重启，失败，恢复成默认值（退出登录，重新登录，你设置的值仍旧有效，除非  重启服务），服务重启，恢复成默认值。</span><br></pre></td></tr></table></figure></li></ol><h2 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h2><h4 id="存储过程编写"><a href="#存储过程编写" class="headerlink" title="存储过程编写"></a>存储过程编写</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// 创建存储过程</span><br><span class="line">delimiter &amp;&amp;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> pro_add(<span class="keyword">in</span> a <span class="built_in">int</span>,<span class="keyword">in</span> b <span class="built_in">int</span>,<span class="keyword">out</span> <span class="keyword">result</span> <span class="built_in">int</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">declare</span> c <span class="built_in">int</span>;</span><br><span class="line"><span class="keyword">set</span> c = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">set</span> c = a+b;</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">result</span> = c;</span><br><span class="line"><span class="keyword">end</span> &amp;&amp;;</span><br><span class="line">delimiter  ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> @ <span class="keyword">result</span>=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">call</span> pro_add(<span class="number">10</span>,<span class="number">13</span>,@<span class="keyword">result</span>); </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> @<span class="keyword">result</span>;</span><br><span class="line"></span><br><span class="line">// 删除存储过程</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">procedure</span> <span class="keyword">if</span> <span class="keyword">exists</span> pro_add</span><br></pre></td></tr></table></figure><h2 id="函数-1"><a href="#函数-1" class="headerlink" title="函数"></a>函数</h2><ol><li><p>条件分支语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// 多重if,case分支  既能用于等值判断，又能用于区间判断</span><br><span class="line">if 条件 then</span><br><span class="line">语句块;</span><br><span class="line">elseif 条件2 then</span><br><span class="line">语句块;</span><br><span class="line">elseif 条件3 then</span><br><span class="line">语句块;</span><br><span class="line">else</span><br><span class="line">语句块;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span>;     // 结束语句 （注意不要忘了<span class="keyword">end</span> <span class="keyword">if</span>后的分号<span class="string">';'</span>）</span><br><span class="line"></span><br><span class="line">// <span class="keyword">case</span>语法 只能用于等值判断</span><br><span class="line"><span class="keyword">case</span> 变量名</span><br><span class="line"><span class="keyword">when</span> 值<span class="number">1</span> <span class="keyword">then</span> 语句块<span class="number">1</span>;</span><br><span class="line">when 值2 then 语句块2;</span><br><span class="line">......</span><br><span class="line">else 语句块n;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">case</span>;</span><br></pre></td></tr></table></figure></li><li><p>循环语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">while语句</span><br><span class="line"></span><br><span class="line">leave while/repeat/loop 语句</span><br><span class="line"></span><br><span class="line">iterate // 类似于java中的continue</span><br><span class="line"></span><br><span class="line">repeat 语句</span><br><span class="line"></span><br><span class="line">循环标签 </span><br><span class="line"></span><br><span class="line">loop 语句</span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">function</span> <span class="keyword">status</span>\G;</span><br><span class="line"></span><br><span class="line">或在 information_schema库中的routine_name表 中查</span><br><span class="line">或在 mysql库中的function表 中查</span><br></pre></td></tr></table></figure></li></ol><h4 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h4><h2 id="游标"><a href="#游标" class="headerlink" title="游标"></a>游标</h2><h2 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h2><h4 id="每个表有如下四种触发器："><a href="#每个表有如下四种触发器：" class="headerlink" title="每个表有如下四种触发器："></a>每个表有如下四种触发器：</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">before <span class="keyword">insert</span></span><br><span class="line"><span class="keyword">after</span> <span class="keyword">insert</span></span><br><span class="line"><span class="keyword">before</span> <span class="keyword">update</span></span><br><span class="line"><span class="keyword">after</span> <span class="keyword">update</span></span><br><span class="line"><span class="keyword">before</span> <span class="keyword">delete</span></span><br><span class="line"><span class="keyword">after</span> <span class="keyword">delete</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// before <span class="keyword">insert</span></span><br><span class="line">delimiter $$</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">trigger</span> <span class="keyword">if</span> <span class="keyword">exists</span> tri_stuInsert;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> tri_stuInsert <span class="keyword">before</span> <span class="keyword">insert</span> <span class="keyword">on</span> stu</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">each</span> <span class="keyword">row</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_log(t_createDate,eventName) <span class="keyword">values</span>(<span class="keyword">now</span>(),<span class="string">'INSERT'</span>);</span><br><span class="line"><span class="keyword">end</span> $$</span><br><span class="line"></span><br><span class="line">delimiter ;</span><br><span class="line"></span><br><span class="line">// after <span class="keyword">insert</span></span><br><span class="line">delimiter $$</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">trigger</span> <span class="keyword">if</span> <span class="keyword">exists</span> tri_stuInsert;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> tri_stuInsert <span class="keyword">after</span> <span class="keyword">insert</span> <span class="keyword">on</span> stu</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">each</span> <span class="keyword">row</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_log(t_createDate,eventName) <span class="keyword">values</span>(<span class="keyword">now</span>(),<span class="string">'Insert'</span>);</span><br><span class="line"><span class="keyword">end</span> $$</span><br><span class="line">delimiter ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">trigger</span> <span class="keyword">if</span> <span class="keyword">exists</span> tri_stuInsert;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// before <span class="keyword">update</span></span><br><span class="line">delimiter $$</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">trigger</span> <span class="keyword">if</span> <span class="keyword">exists</span> tri_update;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> tri_update <span class="keyword">before</span> <span class="keyword">update</span> <span class="keyword">on</span> stu</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">each</span> <span class="keyword">rows</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_log(t_createDate,eventName) <span class="keyword">values</span>(<span class="keyword">now</span>(),<span class="string">'Update'</span>);</span><br><span class="line"><span class="keyword">end</span> $$</span><br><span class="line">delimiter ;</span><br><span class="line"></span><br><span class="line">// after <span class="keyword">update</span></span><br><span class="line">delimiter $$</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">trigger</span> <span class="keyword">if</span> <span class="keyword">exists</span> tri_update;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> tri_update <span class="keyword">after</span> <span class="keyword">update</span> <span class="keyword">on</span> stu</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">each</span> <span class="keyword">rows</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_log(t_createDate,eventName) <span class="keyword">values</span>(<span class="keyword">now</span>(),<span class="string">'Update'</span>);</span><br><span class="line"><span class="keyword">end</span> $$</span><br><span class="line">delimiter ;</span><br><span class="line"></span><br><span class="line">// before <span class="keyword">delete</span></span><br><span class="line">delimiter $$</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">trigger</span> <span class="keyword">if</span> <span class="keyword">exists</span> tri_delete;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> tri_delete <span class="keyword">before</span> <span class="keyword">delete</span> <span class="keyword">on</span> stu</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">each</span> <span class="keyword">row</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_log(t_createDate,eventName) <span class="keyword">values</span>(<span class="keyword">now</span>(),<span class="string">'Delete'</span>);</span><br><span class="line"><span class="keyword">end</span> $$</span><br><span class="line">delimiter ;</span><br><span class="line"></span><br><span class="line">// after <span class="keyword">delete</span></span><br><span class="line">delimiter $$</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">trigger</span> <span class="keyword">if</span> <span class="keyword">exists</span> tri_delete;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> tri_delete <span class="keyword">after</span> <span class="keyword">delete</span> <span class="keyword">on</span> stu</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">each</span> <span class="keyword">row</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_log(t_createDate,eventName) <span class="keyword">values</span>(<span class="keyword">now</span>(),<span class="string">'Delete'</span>);</span><br><span class="line"><span class="keyword">end</span> $$</span><br><span class="line">delimiter ;</span><br><span class="line"></span><br><span class="line">// 查询 触发器</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">triggers</span> <span class="keyword">from</span> 表名\G;</span><br></pre></td></tr></table></figure><hr><p>部分参考于</p><ul><li><a href="http://www.cnblogs.com/wupeiqi/articles/5713315.html" target="_blank" rel="noopener">Page 1</a></li><li><a href="http://www.cnblogs.com/wupeiqi/articles/5713323.html" target="_blank" rel="noopener">Page 2</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Database </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
            <tag> db </tag>
            
            <tag> database </tag>
            
            <tag> mysql </tag>
            
            <tag> mariadb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 知识库</title>
      <link href="/2019/09/15/Java-%E7%9F%A5%E8%AF%86%E5%BA%93/"/>
      <url>/2019/09/15/Java-%E7%9F%A5%E8%AF%86%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><h1 id="String"><a href="#String" class="headerlink" title="String"></a>String</h1><ul><li><p>String和StringBuffer，StringBuilder的区别？</p><blockquote><ol><li>都是final类，都不允许被继承；</li><li>String类长度是不可变的，StringBuffer和StringBuilder类长度是可以改变的；</li><li>StringBuffer类是线程安全的，StringBuilder不是线程安全的；</li></ol><ul><li><strong>String和StringBuffer</strong>：</li></ul><ol><li>String类型和StringBuffer类型的主要性能区别：String是不可变对象，每次修改都会 生成新的string    对象，然后将指针指向新的对象。故如果经常修改字符串的长度不要使用String这样会对系统性能产生影响</li><li>使用StringBuffer类时，每次都是对StringBuffer对象本身操作。而不是生成新的对象并改变，所以推    荐使用StringBuffer类，特别是在对字符串操作频繁的情况下。</li></ol><ul><li><p><strong>StringBuilder</strong><br>StringBuilder是5.0新增的， 此类提供一个与StringBuffer兼容的API，但是不保证同步。<br>  该类被设计作为StringBuffer的简易替换。用在字符串缓冲区被单个线程使用的时候。如果可能，简易优先采用该类，因为在大多数现实中，它比StringBuffer要快。</p></li><li><p><strong>使用策略</strong>：</p></li></ul><ol><li>基本原则：如果要操作少量的数据，用String；单线程操作大量数据，用StringBuffer；多线程操作大量数据，用StringBuffer</li></ol></blockquote><h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1></li></ul><a id="more"></a><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><h3 id="什么是封装"><a href="#什么是封装" class="headerlink" title="什么是封装"></a>什么是封装</h3><p>封装是吧类中的属性私有化，并提供公共的方法来返回属性的值，如果想从外部修改这些属性，只能通过公共的方法，而无法直接访问属性。类中的属性被隐藏，所以封装也称为数据的隐藏。</p><h3 id="封装的步骤"><a href="#封装的步骤" class="headerlink" title="封装的步骤"></a>封装的步骤</h3><ol><li>将属性私有化（private）</li><li>编写set和get方法（set，get访问器）</li></ol><p><em>装箱</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.yunsi.baozhuang.d0318;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 装箱</span></span><br><span class="line"><span class="comment"> * 基本数据类型---》包装类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Administrator</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test01</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//int---&gt;Integer</span></span><br><span class="line"><span class="keyword">int</span> num1=<span class="number">10</span>;</span><br><span class="line">Integer num2 = <span class="keyword">new</span> Integer(num1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//String---&gt;Integer</span></span><br><span class="line">String s=<span class="string">"10"</span>; </span><br><span class="line">Integer num3 = <span class="keyword">new</span> Integer(s);</span><br><span class="line"></span><br><span class="line"><span class="comment">//double---&gt;Double</span></span><br><span class="line"><span class="keyword">double</span> num4 = <span class="number">2.3</span>;</span><br><span class="line">Double num5 = <span class="keyword">new</span> Double(num4);</span><br><span class="line"></span><br><span class="line"><span class="comment">//String--&gt;Double</span></span><br><span class="line">String s2=<span class="string">"2.3"</span>;</span><br><span class="line">Double num6 = <span class="keyword">new</span> Double(s2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//char---&gt;Character</span></span><br><span class="line"><span class="keyword">char</span> zifu=<span class="string">'a'</span>;</span><br><span class="line">Character zifu2 = <span class="keyword">new</span> Character(zifu);</span><br><span class="line"></span><br><span class="line"><span class="comment">//不支持</span></span><br><span class="line"><span class="comment">//String s3="a";</span></span><br><span class="line"><span class="comment">//Character zifu3 = new Character(s3);</span></span><br><span class="line">System.out.println(<span class="string">"-----------------------------"</span>);</span><br><span class="line"><span class="comment">//int---&gt;Integer</span></span><br><span class="line">Integer num7 = Integer.valueOf(num1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//String---&gt;Integer</span></span><br><span class="line">Integer num8 = Integer.valueOf(s);</span><br><span class="line"><span class="comment">//Integer.valueOf("10",2); </span></span><br><span class="line">Integer num9 = Integer.valueOf(s, <span class="number">2</span>);</span><br><span class="line">System.out.println(<span class="string">"num9="</span>+num9);  <span class="comment">//2</span></span><br><span class="line"></span><br><span class="line">Integer num10 = Integer.valueOf(<span class="string">"111"</span>, <span class="number">2</span>);</span><br><span class="line">System.out.println(<span class="string">"num10="</span>+num10); <span class="comment">//7</span></span><br><span class="line"></span><br><span class="line">Integer num11 = Integer.valueOf(<span class="string">"111"</span>, <span class="number">8</span>);</span><br><span class="line">System.out.println(<span class="string">"num11="</span>+num11);<span class="comment">//73</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>拆箱</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.yunsi.baozhuang.d0318;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 拆箱</span></span><br><span class="line"><span class="comment"> * 包装类----》基本数据类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Administrator</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test02</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//Integer---》int</span></span><br><span class="line">Integer num1 = <span class="keyword">new</span> Integer(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">int</span> num2 = num1.intValue();</span><br><span class="line"></span><br><span class="line"><span class="comment">//Double---&gt;double</span></span><br><span class="line">Double num3 = <span class="keyword">new</span> Double(<span class="number">10.23</span>);</span><br><span class="line"><span class="keyword">double</span> num4 = num3.doubleValue();</span><br><span class="line"></span><br><span class="line"><span class="comment">//Character---&gt;char</span></span><br><span class="line">Character zifu = <span class="keyword">new</span> Character(<span class="string">'a'</span>);</span><br><span class="line"><span class="keyword">char</span> zifu2 = zifu.charValue();</span><br><span class="line"></span><br><span class="line"><span class="comment">//String---&gt;int</span></span><br><span class="line">String s=<span class="string">"123"</span>;</span><br><span class="line"><span class="keyword">int</span> num5=Integer.parseInt(s);</span><br><span class="line"></span><br><span class="line"><span class="comment">//String---&gt;double </span></span><br><span class="line">String s2=<span class="string">"1.23"</span>;</span><br><span class="line"><span class="keyword">double</span> num6 = Double.parseDouble(s2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//" java.lang.NumberFormatException: 数据格式异常 </span></span><br><span class="line">String s3=<span class="string">"123abc"</span>;</span><br><span class="line"><span class="keyword">int</span> num7=Integer.parseInt(s3);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="封装的好处"><a href="#封装的好处" class="headerlink" title="封装的好处"></a>封装的好处</h5><ul><li>类的属性可对外只读或只写（读与写的权限两者不能同时获得，每次调用一个方法只能有一种全权限）</li><li>类可以完全控制自己的属性（因为set和get访问器由提供，所有类中的属性的控制权在于类而不是对象）</li><li>类可以修改属性的数据类型，而不会影响外部调用（对象只负责通过set，get方法调用类的属性，在set，get方法未被删除的情况下，属性类型的改变不会影响对象的调用）</li></ul><h4 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h4><ul><li>使用封装使类中的属性与外界分离，使代码结构更为清晰</li><li>由于外界对类属性的调用做了一定限制，提高了代码的安全性</li></ul><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><h2 id="1-什么是继承"><a href="#1-什么是继承" class="headerlink" title="1.什么是继承"></a>1.什么是继承</h2><p>继承是从已有的类中派生出新的类，新的类能够吸收已有的类的属性和方法，并能派生出新的属性和方法。</p><h3 id="2-继承的实现"><a href="#2-继承的实现" class="headerlink" title="2.继承的实现"></a>2.继承的实现</h3><p> 只能继承public和protected修饰的，不管在不在同一包里<br> 继承默认(default) 修饰的，只能在同一个包里<br> 构造方法不能继承。只能调用，通过super调用。</p><ol><li>使用super关键字，super代表父类对象；</li><li>在子类构造方法中调用且必须是第一句；</li><li>不可以访问父类中定义为private的属性和方法。 </li></ol><p>继承父类的属性：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">super</span>();<span class="comment">//访问无参构造</span></span><br><span class="line"><span class="keyword">super</span>(@参数); <span class="comment">//访问带参构造</span></span><br><span class="line"><span class="keyword">super</span>.@属性名; <span class="comment">//访问父类的属性</span></span><br><span class="line"><span class="keyword">this</span>.@属性名; <span class="comment">//当子类中没有这个属性时，this就访问父类的这个属性</span></span><br></pre></td></tr></table></figure><p>继承父类的方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">super</span>.@方法名();</span><br></pre></td></tr></table></figure><h3 id="3-继承下构造方法的执行过程"><a href="#3-继承下构造方法的执行过程" class="headerlink" title="3.继承下构造方法的执行过程"></a>3.继承下构造方法的执行过程</h3><pre><code>执行顺序：父类静态成员 -&gt; 父类静态代码块 -&gt; 子类静态成员 -&gt; 子类静态代码块 -&gt; 父类实例成员，普通代码块 -&gt; 父类构造函数 -&gt; 子类实例成员，普通代码块 -&gt; 子类构造函数</code></pre><h3 id="4-方法重写（重点）"><a href="#4-方法重写（重点）" class="headerlink" title="4.方法重写（重点）"></a>4.方法重写（重点）</h3><ol><li>方法名相同</li><li>参数列表相同</li><li>返回值类型相同或者是其子类</li><li>子类重写的时候访问权限不能严于父类(访问权限比父类要松）或者访问级别&gt;=父类 </li></ol><ul><li>严格程度从大到小排序   private&gt; default&gt; protected&gt;public</li><li>访问级别排序：  public&gt;protected&gt;default&gt;private</li></ul><ol start="5"><li>父类的静态方法不能被子类覆盖为非静态方法，父类的非静态方法不能被子类覆盖为静态方法</li></ol><ul><li>如果父类有静态方法，子类也有同名的静态方法，这个不叫重写，只是方法同名而已</li><li>重写只针对普通方法，跟静态方法无关。  </li></ul><ol start="6"><li>子类可以定义与父类同名的静态方法，以便在子类中隐藏父类的静态方法。</li></ol><ul><li>如果子类没有和父类同名的静态方法，子类Sub.ceshi5()调用的就是父类的静态方法 </li><li>如果子类Sub中，有和父类同名的静态方法，子类Sub.ceshi5()调用的就是子类自身的静态方法</li></ul><ol start="7"><li>父类的私有方法，只能父类自己使用，子类无法访问</li></ol><p><strong>重写和重载的区别？（重点）</strong></p><ul><li><p>方法的重写：父子类，方法同名，同参，返回值相同或是其子类，访问权限不能严于父类的方法权限。</p></li><li><p>方法的重载：同一个类，方法同名，参数列表不同（个数，类型，顺序），和返回值、访问权限无关。</p></li></ul><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><h3 id="1-什么叫多态"><a href="#1-什么叫多态" class="headerlink" title="1. 什么叫多态"></a>1. 什么叫多态</h3><ul><li>多态是同一个行为具有多个不同表现形式或形态的能力。</li><li>多态就是同一个接口，使用不同的实例而执行不同操作</li></ul><h3 id="多态的实现方式"><a href="#多态的实现方式" class="headerlink" title="多态的实现方式"></a>多态的实现方式</h3><h5 id="方式一：重写"><a href="#方式一：重写" class="headerlink" title="方式一：重写"></a>方式一：重写</h5><pre><code>参见 继承 -&gt; 4.方法重写</code></pre><h5 id="方式二：接口"><a href="#方式二：接口" class="headerlink" title="方式二：接口"></a>方式二：接口</h5><ol><li><p>生活中的接口最具代表性的就是插座，例如一个三接头的插头都能接在三孔插座中，因为这个是每个国家都有各自规定的接口规则，有可能到国外就不行，那是因为国外自己定义的接口类型。</p></li><li><p>java中的接口类似于生活中的接口，就是一些方法特征的集合，但没有方法的实现。具体可以看 java接口 这一章节的内容。</p></li></ol><h5 id="方式三：抽象类和抽象方法"><a href="#方式三：抽象类和抽象方法" class="headerlink" title="方式三：抽象类和抽象方法"></a>方式三：抽象类和抽象方法</h5><h6 id="抽象类和抽象方法"><a href="#抽象类和抽象方法" class="headerlink" title="抽象类和抽象方法"></a>抽象类和抽象方法</h6><p><strong>抽象类</strong></p><p>拥有抽象方法的类就是抽象类（但抽象类中也可以不包含抽象方法），抽象类要使用abstract关键字声明。</p><ol><li>抽象方法必须定义在抽象类中，反过来，抽象类类不一定有抽象方法</li><li>抽象类可以拥有普通类所拥有的一切成员（普通变量，静态变量，静态代码块，普通代码块，构造，内部类，普通方法，静态方法） ，还能拥有抽象方法</li><li>抽象类不能实例化（不能new)</li><li>抽象方法必须在子类中被实现，除非子类是抽象类</li></ol><h3 id="3-多态存在的三个必要条件"><a href="#3-多态存在的三个必要条件" class="headerlink" title="3. 多态存在的三个必要条件"></a>3. 多态存在的三个必要条件</h3><ol><li>要有继承</li><li>要有方法的重写</li><li>父类引用指向子类对象 向上转型</li></ol><h3 id="4-多态的优点"><a href="#4-多态的优点" class="headerlink" title="4. 多态的优点"></a>4. 多态的优点</h3><ol><li>消除类型之间的耦合关系</li><li>可替换性</li><li>可扩充性</li><li>接口性</li><li>灵活性</li><li>简化性</li></ol><h3 id="instanceof关键字"><a href="#instanceof关键字" class="headerlink" title="instanceof关键字"></a>instanceof关键字</h3><ul><li>instanceof 是 Java 的一个二元操作符，类似于 ==，&gt;，&lt; 等操作符。</li><li>instanceof 是 Java 的保留关键字。它的作用是测试它左边的对象是否是它右边的类的实例，返回 boolean 的数据类型。</li></ul><p><em>注意：使用 instanceof 时，对象的类型必须和 instanceof 后面的参数所指定的类在继承上有上下级关系</em></p><h1 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h1><p><strong>对抽象类和接口的区别的理解</strong></p><ol><li>能够包含的元素上（不同的地方）<br>抽象类可以存储普通类拥有的一切成员（普通变量，静态变量，静态代码块，普通代码块，构造，内部类，普通方法）+抽象方法必须在子类中被实现，除非子类是抽象类<br>接口：只能存储全局的静态变量+全局的抽象方法，其他任何内容都不存储。</li><li>抽象类不能实例化，接口也不能实例化。（相同点）</li><li>抽象类中的抽象方法，必须被子类重写<del>实现</del>，除非子类也是一个抽象类<br>接口中的抽象方法吗，必须被实现类实现，除非这个类也是抽象类（相同的地方）</li><li>1个类只能继承一个抽象父类，但是1个类可以实现多个接口（不同的地方）</li><li>抽象类，只能有1个直接父类，java中只支持单根继承<br>接口，可以有多个父类，1个接口可以继承自多个父接口，支持多继承<br>一个接口不能实现另一个接口，但可以继承多个其他接口（不同的地方）</li></ol><h2 id="接口的优点"><a href="#接口的优点" class="headerlink" title="接口的优点:"></a>接口的优点:</h2><ul><li>接口有比抽象更好的特性</li><li>可以被多继承</li><li>设计和实现完全分离</li><li>更自然的使用多态</li><li>更容易的搭建程序框架</li><li>更容易更换实现</li><li>接口是一种约定：有些接口只有名称（Serilizable接口）</li><li>面向接口编程：程序设计时，面向接口的约定，而不考虑具体实现</li><li>接口中的成员变量，默认都是public static final的，必须显式初始化</li><li>接口中的方法，默认都是public abstract的</li><li>接口没有构造方法，不能被实例化</li><li>一个接口不能实现另一个接口，但可以继承多个其他接口</li><li>一个类必须实现接口的全部抽象方法，除非这个类也是抽象类</li></ul><h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><h4 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.通配符</span><br><span class="line">^</span><br><span class="line">$</span><br><span class="line"><span class="bullet">*  </span>匹配前面的子表达式零次或多次。例如，zo<span class="bullet">* 能匹配 "z" 以及 "zoo"。*</span> 等价于&#123;0,&#125;。</span><br><span class="line"><span class="bullet">+  </span>匹配前面的子表达式一次或多次。例如，'zo+'能匹配"zo"以及"zoo"，但不能匹配 "z"。+ 等价于 &#123;1,&#125;。</span><br><span class="line">?  匹配前面的子表达式零次或一次。例如，"do(es)?"可以匹配 "do"、"does"中的"does"、"doxy"中的 "do"。?等价于&#123;0,1&#125;。</span><br><span class="line">&#123;&#125;  限定符  限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配</span><br><span class="line">[]</span><br><span class="line">\</span><br><span class="line">()</span><br><span class="line">|</span><br></pre></td></tr></table></figure><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><ul><li>所有的异常类是从java.lang.Exception类继承的子类。</li><li>Exception 类是Throwable 类的子类；<blockquote><p>Throwable有两个子类，一个是Error类，另一个是Exception类<br>Error中的错误是程序员不能处理的运行环境错误，如jvm虚拟机内存溢出崩溃，等严重错误<br>Exception是能程序员捕并处理的异常</p></blockquote></li><li>Exception类中包含两类异常：<br>  RuntimeException 类，属于unchecked异常<br>  Exception 类 和 Throws 类，属于 checked异常</li></ul><h2 id="1-处理异常"><a href="#1-处理异常" class="headerlink" title="1. 处理异常"></a>1. 处理异常</h2><ul><li>try 块：用于捕获异常其后可接多个catch块。如果没有catch块，则必须跟一个finally块。</li><li>catch 块：用于处理try捕获的异常</li><li>finally 块：无论是否捕获或处理异常，finally块里的语句都会被执行。</li><li>在如下四种情况下，finally块不会执行：<ol><li>在finally 语句块中发生了异常。</li><li>在前面的代码中用了System.exit()。</li><li>程序所在的线程死亡。</li><li>关闭CPU。</li></ol></li></ul><p><strong>注意：try-catch块中存在return语句，finally块还会执行。执行顺序：先执行try，如果有异常执行catch然后执行至return前一句后跳至finally执行，待finally执行完了后跳回执行return。</strong></p><h2 id="2-使用throws声明并抛出异常"><a href="#2-使用throws声明并抛出异常" class="headerlink" title="2. 使用throws声明并抛出异常"></a>2. 使用throws声明并抛出异常</h2><p>声明格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">方法名<span class="keyword">throws</span> 异常<span class="number">1</span>,异常<span class="number">2</span>...</span><br></pre></td></tr></table></figure><p><strong>注意：处理异常的两种方式</strong></p><ol><li>方式一：调用者处理异常，即用try-catch来处理</li><li>方式二：调用者继续抛出异常(main()方法声明的异常由java虚拟机来处理) <br> 使用throws关键字将异常抛给调用者后，如果调用者不想处理该异常，可以继续向上抛出。但最终要有能够处理该异常的调用者。</li></ol><p>代码一：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.yunsi.exception02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.DateFormat;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * throws 抛出异常 ， 方法本身没有处理异常，将异常上抛，给调用者去处理 </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 对于调用者，有可能处理 try-catch-finaly </span></span><br><span class="line"><span class="comment"> *         有可能不处理，  继续上抛  继续throws抛出 </span></span><br><span class="line"><span class="comment"> * 如果调用者，一直不处理 ，最终调用者main() ,这个时候，异常由jvm来处理。 </span></span><br><span class="line"><span class="comment"> * 访问修饰符  返回值类型 方法名（参数列表） throws 异常1，异常2，....&#123;</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Administrator</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test01</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 抛出可查异常 ParseException</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> ParseException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">parseTime</span><span class="params">()</span> <span class="keyword">throws</span> ParseException</span>&#123;</span><br><span class="line">String s=<span class="string">"2012-3afaf-3"</span>;</span><br><span class="line">DateFormat df = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">Date date=df.parse(s);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对parseTime()方法，抛出的异常 ， diaoYongFirst（）选择继续上抛</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> ParseException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">diaoYongFirst</span><span class="params">()</span> <span class="keyword">throws</span> ParseException</span>&#123;</span><br><span class="line">parseTime();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对parseTime()方法，抛出的异常 ，diaoYongSecond()选择自己处理掉</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">diaoYongSecond</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">parseTime();</span><br><span class="line">&#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码二：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yunsi.exception02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * java.text.ParseException: Unparseable date: "2012-3afaf-3"</span></span><br><span class="line"><span class="comment">at java.text.DateFormat.parse(DateFormat.java:337)</span></span><br><span class="line"><span class="comment">at com.yunsi.exception02.Test01.parseTime(Test01.java:29)</span></span><br><span class="line"><span class="comment">at com.yunsi.exception02.Test01.diaoYongFirst(Test01.java:37)</span></span><br><span class="line"><span class="comment">at com.yunsi.exception02.Test01App2.main(Test01App2.java:16)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">分析异常的栈信息： 从下往上看，最下面一行：是调用的地方，发生异常的语句  ，最上面一行：离异常最近的地方</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Administrator</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test01App</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * main()作为最后一级调用者，也没有处理异常，选择的继续上抛，最终如果发生异常由 JVM处理</span></span><br><span class="line"><span class="comment"> * 消极的处理方式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> ParseException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ParseException </span>&#123;</span><br><span class="line">Test01 te = <span class="keyword">new</span> Test01();</span><br><span class="line"><span class="comment">//调用方法</span></span><br><span class="line">te.diaoYongFirst();</span><br><span class="line">System.out.println(<span class="string">"*********异常处理之后的代码不能执行************"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码三</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">package com.yunsi.exception02;</span><br><span class="line"></span><br><span class="line">public class Test01App3 &#123;</span><br><span class="line">/**</span><br><span class="line"> * main作为最后一级调用者，调用了 diaoYongSecond()， </span><br><span class="line"> *  而这个方法diaoYongSecond()本身内部进行了try-catch处理 </span><br><span class="line"> *  所以main无需处理，直接使用就行了</span><br><span class="line"> * @param args</span><br><span class="line"> */</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">Test01 te = new Test01();</span><br><span class="line">te.diaoYongSecond();</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;************异常之后的代码可以执行****************&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码四：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yunsi.exception02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test02</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 显示的抛出2个异常</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> ParseException</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> FileNotFoundException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ceshi</span><span class="params">()</span>  <span class="keyword">throws</span> ParseException,FileNotFoundException</span>&#123;</span><br><span class="line">System.out.println(<span class="string">"---------Test02.ceshi()-------------"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 抛出的异常个数，要和捕获的catch数量一致</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">diaoYongFirst</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">ceshi();</span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 继续上抛的，异常个数，也要和原始方法中异常抛出的个数一致</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> FileNotFoundException</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> ParseException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">diaoYongSecond</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException,ParseException</span>&#123;</span><br><span class="line">ceshi();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 如果抛出的是父类异常Exception, 覆盖掉所有的子类异常，也是可以的</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">diaoYongThird</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">ceshi();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码五：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yunsi.exception02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test03</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ceshi</span><span class="params">()</span> <span class="keyword">throws</span> NullPointerException,StringIndexOutOfBoundsException</span>&#123;</span><br><span class="line">System.out.println(<span class="string">"----------Test03.ceshi()中抛出了2个不可查异常-------------------"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  ceshi()抛出2个不可查异常，编译器检测不到，所以没捕获，没继续上抛，也不会报错</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">diaoYongFirst</span><span class="params">()</span></span>&#123;</span><br><span class="line">ceshi();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 因为ceshi()抛出的是不可查异常，本方法 diaoYongSecond()抛出错误的异常，编译器也检测不到 </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> NullPointerException</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> ArrayIndexOutOfBoundsException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">diaoYongSecond</span><span class="params">()</span> <span class="keyword">throws</span> NullPointerException,ArrayIndexOutOfBoundsException</span>&#123;</span><br><span class="line">ceshi();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>使用throw抛出异常</em><br>格式(需要独立成一行语句，且需要用”throws 异常类的名称”声明)：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> 异常类的名称</span><br></pre></td></tr></table></figure><h3 id="3-自定义异常"><a href="#3-自定义异常" class="headerlink" title="3. 自定义异常"></a>3. 自定义异常</h3><p>自定义异常步骤：</p><ol><li>定义异常类(继承 Throwable 类，Exception类 RuntimeException)</li><li>编写构造方法，继承父类的实现</li><li>实例化自定义异常对象</li><li>使用throw 抛出</li></ol><p>示例代码一</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yunsi.exception04;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@SuppressWarnings("serial")</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IllegalAgeException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">369902796174092820L</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">IllegalAgeException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(message);  <span class="comment">//调用父类Exception的带参构造</span></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例代码二</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yunsi.exception05;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IllegalAgeException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">393878154469874217L</span>;</span><br><span class="line"><span class="keyword">private</span> String errorCode; <span class="comment">//错误码</span></span><br><span class="line"><span class="keyword">private</span> String errorMsg; <span class="comment">//错误消息  </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getErrorCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> errorCode;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setErrorCode</span><span class="params">(String errorCode)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.errorCode = errorCode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getErrorMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> errorMsg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setErrorMsg</span><span class="params">(String errorMsg)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.errorMsg = errorMsg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 错误消息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">IllegalAgeException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(message); <span class="comment">//调用父类Exception的构造  </span></span><br><span class="line"><span class="keyword">this</span>.errorMsg=message;  <span class="comment">//异常消息字符串，也需要赋值给本类的属性  </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> message  错误消息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> errorCode  错误的状态码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">IllegalAgeException</span><span class="params">(String message,String errorCode)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(message); <span class="comment">//调用父类Exception的构造  </span></span><br><span class="line"><span class="keyword">this</span>.errorMsg=message;  <span class="comment">//异常消息字符串，也需要赋值给本类的属性  </span></span><br><span class="line"><span class="keyword">this</span>.errorCode=errorCode;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例代码三</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yunsi.exception06;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IllegalAgeException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> String errorCode; <span class="comment">//错误码</span></span><br><span class="line"><span class="keyword">private</span> String errorMsg; <span class="comment">//错误消息  </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getErrorCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> errorCode;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setErrorCode</span><span class="params">(String errorCode)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.errorCode = errorCode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 此处叫做方法重写，会重写 java.lang.Throwable类的getMessage(),会调用</span></span><br><span class="line"><span class="comment"> * 本类重写之后getMessage()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getMessage</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"##"</span>+errorMsg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setErrorMsg</span><span class="params">(String errorMsg)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.errorMsg = errorMsg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">IllegalAgeException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(message); <span class="comment">//调用父类Exception的构造  </span></span><br><span class="line"><span class="keyword">this</span>.errorMsg=message;  <span class="comment">//异常消息字符串，也需要赋值给本类的属性  </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">IllegalAgeException</span><span class="params">(String message,String errorCode)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(message); <span class="comment">//调用父类Exception的构造  </span></span><br><span class="line"><span class="keyword">this</span>.errorMsg=message;  <span class="comment">//异常消息字符串，也需要赋值给本类的属性  </span></span><br><span class="line"><span class="keyword">this</span>.errorCode=errorCode;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h1><p><em>集合相关类的结构图</em></p><p><img src="pic/set1.png" alt="avatar"></p><p><strong>体系结构</strong></p><ul><li>集合主要包含两大接口Collection和Map</li><li>List和Set继承Collection接口。Map也属于集合系统，但是和Collection接口不同</li><li>Set无序，不重复，重复进行赋值操作会覆盖这个键之前对应的值。HashSet和TreeSet是主要的实现类，其中HashSet是完全无序，TreeSet是按它自己的排序规则排序（但可以通过排序规则也可以自定义）。</li><li>List有序、元素可重复。ArrayList、LinkedList和Vector（已淘汰）是主要的实现类</li><li>Map是键值对集合，可以根据键查找值。其中Key不能重复（唯一），值可以重复。HashMap，TreeMap和HashTable是Map的主要实现类</li></ul><p><em>TreeSet等实现规则排序的方法：自然排序和定义比较器</em></p><ol><li><p>自然排序</p><p>通过实现Comparable接口是重写compareTo()方法</p></li><li><p>定义比较器</p><p>定义一个类，实现Comparator接口，覆盖compare方法</p></li></ol><p>工具包位于java.util.*</p><h3 id="List"><a href="#List" class="headerlink" title="List"></a>List</h3><h4 id="ArrayList"><a href="#ArrayList" class="headerlink" title="ArrayList"></a>ArrayList</h4><p>实例化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;(); <span class="comment">// 构建一个存储String类型数据的ArrayList</span></span><br></pre></td></tr></table></figure><p>添加数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list.add(@要添加的数据)</span><br></pre></td></tr></table></figure><p>删除数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String a = list.remove(<span class="meta">@Index</span>)<span class="comment">// 删除指定下标（@Index）的元素，删除的内容被返回保存在a里</span></span><br></pre></td></tr></table></figure><p>修改数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list.set(<span class="meta">@index</span>,<span class="meta">@NewValue</span>);</span><br></pre></td></tr></table></figure><p>遍历数据：（有三种方法）</p><ol><li>for (int i = 0; i &lt; list.size(); i++)遍历/遍历；</li><li>for (Object tmp:list)遍历/增强for遍历/foreach遍历；</li><li>使用Iterator迭代器遍历</li></ol><p><strong>三种遍历方式的效率比较</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yunsi.list01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ArrayList存储数据：</span></span><br><span class="line"><span class="comment"> *  for索引遍历耗时：681ms   效率最高   </span></span><br><span class="line"><span class="comment">foreach遍历耗时：759ms</span></span><br><span class="line"><span class="comment">Iterator迭代器遍历耗时：756ms  </span></span><br><span class="line"><span class="comment">如果循环次数较小的时候 ，foreach和Iterator比较效率不明确 ，但是循环次数较大的时候，Iterator迭代器的效率高于Foreach效率</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> *  List&lt;引用数据类型&gt;  集合名 = new ArrayList&lt;引用数据类型&gt;(); </span></span><br><span class="line"><span class="comment"> *   = new LinkedList&lt;引用数据类型&gt;();</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Administrator</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//抑制编译器警告，抑制没被使用的元素的警告 ，注解加在类上，对整个类都有效</span></span><br><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"unused"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestArrayList02</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">List&lt;Integer&gt; list=  <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100000</span>;i++)&#123;</span><br><span class="line"><span class="comment">//list.add(i);</span></span><br><span class="line">list.add(Integer.valueOf(i));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//int maxCount=1000;</span></span><br><span class="line"><span class="keyword">int</span> maxCount=<span class="number">10000</span>;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"----------方式1---------------"</span>);</span><br><span class="line"><span class="keyword">long</span> startTime1 = System.currentTimeMillis();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;maxCount;i++)&#123;</span><br><span class="line">loopOfFor(list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> endTime1 = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"----------方式2---------------"</span>);</span><br><span class="line"><span class="keyword">long</span> startTime2 = System.currentTimeMillis();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;maxCount;i++)&#123;</span><br><span class="line">loopOfForeach(list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> endTime2 = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"----------方式3---------------"</span>);</span><br><span class="line"><span class="keyword">long</span> startTime3 = System.currentTimeMillis();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;maxCount;i++)&#123;</span><br><span class="line">loopOfIterator(list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> endTime3 = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"for索引遍历耗时："</span>+(endTime1-startTime1)+<span class="string">"ms"</span>);</span><br><span class="line">System.out.println(<span class="string">"foreach遍历耗时："</span>+(endTime2-startTime2)+<span class="string">"ms"</span>);</span><br><span class="line">System.out.println(<span class="string">"Iterator迭代器遍历耗时："</span>+(endTime3-startTime3)+<span class="string">"ms"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * for索引遍历</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> list</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">loopOfFor</span><span class="params">(List&lt;Integer&gt; list)</span></span>&#123;</span><br><span class="line">Integer value;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;list.size();i++)&#123;</span><br><span class="line">value=(Integer)list.get(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * foreach遍历</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> list</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">loopOfForeach</span><span class="params">(List&lt;Integer&gt; list)</span></span>&#123;</span><br><span class="line">Integer value;</span><br><span class="line"><span class="keyword">for</span>(Object temp:list)&#123;</span><br><span class="line">value=(Integer)temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 迭代器遍历</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> list</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">loopOfIterator</span><span class="params">(List&lt;Integer&gt; list)</span></span>&#123;</span><br><span class="line">Integer value;</span><br><span class="line">Iterator&lt;Integer&gt; it = list.iterator();</span><br><span class="line"><span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">value = (Integer)it.next();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结论： 在遍历ArrayList中，loopOfFor效率最高，loopOfForeach和loopOfIterator之间关系不明确，但是在增大运行次数时loopOfIterator的效率略优于loopOfForeach</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.yunsi.list01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * for索引遍历耗时：508ms</span></span><br><span class="line"><span class="comment">foreach遍历耗时：4ms</span></span><br><span class="line"><span class="comment">Iterator迭代器遍历耗时：3ms</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * LinkedList存储的时候 ，遍历 </span></span><br><span class="line"><span class="comment"> * Iterator迭代器的效率最高   ，  for效率最低  ，Foreach其次，效率比for高，比Iterator低。 </span></span><br><span class="line"><span class="comment"> * Foreach底层还是Iterator迭代器，Foreach只是为了访问方便设计出来的，功能不够完善。 </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Administrator</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"unused"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestLinkedList03</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">List&lt;Integer&gt; list=  <span class="keyword">new</span> LinkedList&lt;Integer&gt;();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10000</span>;i++)&#123;</span><br><span class="line"><span class="comment">//list.add(i);</span></span><br><span class="line">list.add(Integer.valueOf(i));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//循环次数</span></span><br><span class="line"><span class="keyword">int</span> maxCount=<span class="number">100</span>;</span><br><span class="line"><span class="comment">//int maxCount=10;</span></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"----------方式1---------------"</span>);</span><br><span class="line"><span class="keyword">long</span> startTime1 = System.currentTimeMillis();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;maxCount;i++)&#123;</span><br><span class="line">loopOfFor(list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> endTime1 = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"----------方式2---------------"</span>);</span><br><span class="line"><span class="keyword">long</span> startTime2 = System.currentTimeMillis();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;maxCount;i++)&#123;</span><br><span class="line">loopOfForeach(list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> endTime2 = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"----------方式3---------------"</span>);</span><br><span class="line"><span class="keyword">long</span> startTime3 = System.currentTimeMillis();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;maxCount;i++)&#123;</span><br><span class="line">loopOfIterator(list);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> endTime3 = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"for索引遍历耗时："</span>+(endTime1-startTime1)+<span class="string">"ms"</span>);</span><br><span class="line">System.out.println(<span class="string">"foreach遍历耗时："</span>+(endTime2-startTime2)+<span class="string">"ms"</span>);</span><br><span class="line">System.out.println(<span class="string">"Iterator迭代器遍历耗时："</span>+(endTime3-startTime3)+<span class="string">"ms"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * for索引遍历</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> list</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">loopOfFor</span><span class="params">(List&lt;Integer&gt; list)</span></span>&#123;</span><br><span class="line">Integer value;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;list.size();i++)&#123;</span><br><span class="line">value=(Integer)list.get(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * foreach遍历</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> list</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">loopOfForeach</span><span class="params">(List&lt;Integer&gt; list)</span></span>&#123;</span><br><span class="line">Integer value;</span><br><span class="line"><span class="keyword">for</span>(Object temp:list)&#123;</span><br><span class="line">value=(Integer)temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 迭代器遍历</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> list</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">loopOfIterator</span><span class="params">(List&lt;Integer&gt; list)</span></span>&#123;</span><br><span class="line">Integer value;</span><br><span class="line">Iterator&lt;Integer&gt; it = list.iterator();</span><br><span class="line"><span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">value = (Integer)it.next();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//System.out.println(value);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结论2:在LinkedList中，Iterator迭代器方式的速度比基本的for快。</strong></p><p><em>从数据结构的角度分析：for循环更适合访问顺序存储结构，Iterator迭代器更适合访问链式存储结构</em></p><h1 id="时间日期"><a href="#时间日期" class="headerlink" title="时间日期"></a>时间日期</h1><h4 id="Calendar"><a href="#Calendar" class="headerlink" title="Calendar"></a>Calendar</h4><p>Calendar是一个abstract类，所以不能实例化 由其子类GergorainCalendar来实例化。<br>其有如下方法可调用：</p><ul><li>getTime()</li><li>setTime(@Dated_Object)</li><li>add(@field,@int)     // @field指的是类似Calendar.DAY_OF_YEAR的int型数据，@int指的是所要加int型数，如果要减就写负整数。</li><li>get(@field)    // @field意思同上，该方法作用是获取指定数据如Calendar.DATY_OF_YEAR.</li></ul><h4 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h4><ul><li>get()</li><li>getTime()</li><li>getMonth()</li><li>getDay()</li><li>getYear()</li><li>getMinutes()</li><li>getHours()</li></ul><h4 id="SimpleDateFormat"><a href="#SimpleDateFormat" class="headerlink" title="SimpleDateFormat"></a>SimpleDateFormat</h4><p>SimpleDateFormat是DateFormat这个抽象类的一个子类</p><ul><li>format(@Date)        // 负责Format转String</li><li>parse(@source)    // 负责String转Date</li></ul><p><em>指定格式时间显示（pattern）Date和String类型之间转换实例</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yunsi.homework1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.DateFormat;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *由String类型转换为Date类型，pattern是指定显示格式的例如"yyyy-MM-dd HH-mm-ss"</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> pattern</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getStrFromDate</span> <span class="params">(Date date,String pattern)</span> </span>&#123;</span><br><span class="line">DateFormat df = <span class="keyword">new</span> SimpleDateFormat(pattern);</span><br><span class="line"><span class="keyword">return</span> df.format(date);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *由Date类型转换为String类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> source</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> pattern</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">getDateFromStr</span><span class="params">(String source, String pattern)</span> </span>&#123;</span><br><span class="line">DateFormat df = <span class="keyword">new</span> SimpleDateFormat(pattern);</span><br><span class="line">Date date = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">date = df.parse(source);</span><br><span class="line">&#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> date;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>Date和Calendar类的综合应用</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.yunsi.homework1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.GregorianCalendar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestCalendar</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Calendar cal = <span class="keyword">new</span> GregorianCalendar();</span><br><span class="line">Date date = <span class="keyword">new</span> Date(System.currentTimeMillis());</span><br><span class="line">cal.setTime(date);</span><br><span class="line">System.out.println(cal.getTime());</span><br><span class="line">cal.add(Calendar.DAY_OF_YEAR, <span class="number">2</span>);</span><br><span class="line">System.out.println(cal.getTime());</span><br><span class="line">cal.add(Calendar.DAY_OF_YEAR, -<span class="number">4</span>);</span><br><span class="line">cal.add(Calendar.MINUTE, <span class="number">23</span>);</span><br><span class="line">cal.add(Calendar.HOUR, <span class="number">6</span>);</span><br><span class="line">System.out.println(cal.getTime());</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="IO流"><a href="#IO流" class="headerlink" title="IO流"></a>IO流</h1><h2 id="分类结构图"><a href="#分类结构图" class="headerlink" title="分类结构图"></a>分类结构图</h2><p><img src="pic/IOStream.png" alt="avatar"></p><h2 id="字符流"><a href="#字符流" class="headerlink" title="字符流"></a>字符流</h2><h5 id="BufferedReader"><a href="#BufferedReader" class="headerlink" title="BufferedReader"></a>BufferedReader</h5><p>用于读取</p><h5 id="BufferedWriter"><a href="#BufferedWriter" class="headerlink" title="BufferedWriter"></a>BufferedWriter</h5><h5 id="FileReader"><a href="#FileReader" class="headerlink" title="FileReader"></a>FileReader</h5><h5 id="FileWriter"><a href="#FileWriter" class="headerlink" title="FileWriter"></a>FileWriter</h5><h2 id="字节流"><a href="#字节流" class="headerlink" title="字节流"></a>字节流</h2><h5 id="FileInputStream"><a href="#FileInputStream" class="headerlink" title="FileInputStream"></a>FileInputStream</h5><h5 id="FileOutputStream"><a href="#FileOutputStream" class="headerlink" title="FileOutputStream"></a>FileOutputStream</h5><h5 id="BufferedInputStream"><a href="#BufferedInputStream" class="headerlink" title="BufferedInputStream"></a>BufferedInputStream</h5><h5 id="BufferedOutputStream"><a href="#BufferedOutputStream" class="headerlink" title="BufferedOutputStream"></a>BufferedOutputStream</h5><h5 id="DataInputStream"><a href="#DataInputStream" class="headerlink" title="DataInputStream"></a>DataInputStream</h5><h5 id="DataOutputStream"><a href="#DataOutputStream" class="headerlink" title="DataOutputStream"></a>DataOutputStream</h5><h5 id="ByteArrayInputStream"><a href="#ByteArrayInputStream" class="headerlink" title="ByteArrayInputStream"></a>ByteArrayInputStream</h5><h5 id="ByteArrayOutputStream"><a href="#ByteArrayOutputStream" class="headerlink" title="ByteArrayOutputStream"></a>ByteArrayOutputStream</h5><h2 id="Properties配置文件读取（待补充）"><a href="#Properties配置文件读取（待补充）" class="headerlink" title="Properties配置文件读取（待补充）"></a>Properties配置文件读取（待补充）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Properties p = <span class="keyword">new</span> Properties();</span><br><span class="line">p.load(Class)</span><br></pre></td></tr></table></figure><h1 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h1><h4 id="transient关键字"><a href="#transient关键字" class="headerlink" title="transient关键字"></a>transient关键字</h4><blockquote><ul><li><p>一旦变量被transient修饰，变量将不再是对象持久化的一部分，该变量内容在序列化后无法获得访问。</p></li><li><p>transient关键字只能修饰变量，而不能修饰方法和类。注意，本地变量是不能被transient关键字修饰的。变量如果是用户自定义类变量，则该类需要实现Serializable接口。</p></li><li><p>被transient关键字修饰的变量不再能被序列化，一个静态变量不管是否被transient修饰，均不能被序列化。</p></li></ul></blockquote><h2 id="序列化-1"><a href="#序列化-1" class="headerlink" title="序列化"></a>序列化</h2><ul><li>通过输出流对象将一些可序列化（实现了Serializable接口）的类对象写入到文件中保存<h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2></li><li>通过输出流对象从序列化文件中读取出对象并强制类型转换成原来的类型</li></ul><h1 id="多线程与多进程"><a href="#多线程与多进程" class="headerlink" title="多线程与多进程"></a>多线程与多进程</h1><p><strong>进程具有三个重要的性质：独立性、动态性、并发性</strong></p><h3 id="线程与进程的概念和区别"><a href="#线程与进程的概念和区别" class="headerlink" title="线程与进程的概念和区别"></a>线程与进程的概念和区别</h3><ul><li><p>线程是CPU调度和分派的基本单位</p></li><li><p>进程是s程序运行和资源分配的基本单位。</p></li><li><p>两者区别：</p><blockquote><ul><li><p>线程共享内存空间，进程的内存是独立的</p></li><li><p>子线程和父线程之间共享进程的内存，之间的数据是共享的；</p><p>  而子进程是根据父进程克隆了一份内存，两者数据是独立的。</p></li><li><p>同一个进程中的线程间可以直接进行相互通信，但两个进程间相互通信，则需要通过一个中间代理来实现。</p></li><li><p>创建线程较为简单，但创建新的进程则需要 对父进程进行克隆。</p></li><li><p>一个线程可以控制操作与其在同一进程中的其他线程，但一个进程只能操作其自身中的子进程。</p></li><li><p>对主线程进行修改操作可能影响到其他子线程，但对父进程并不会影响到其他子进程</p></li><li><p>删除线程，不影响同进程中的其他线程的运行；但杀死主进程，子进程也会跟着被杀死。</p></li></ul></blockquote></li></ul><h3 id="Java实现多线程的三种方式"><a href="#Java实现多线程的三种方式" class="headerlink" title="Java实现多线程的三种方式"></a>Java实现多线程的三种方式</h3><ul><li><p>继承Thread类，重写run方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;  </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Override run() ..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Thread t = <span class="keyword">new</span> Test();</span><br><span class="line">        t.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实现Runnable接口，并重写run方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Override run() ..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Thread t = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Test());</span><br><span class="line">        t.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实现Callable接口，并重写call方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">implements</span> <span class="title">Callable</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Override call() ..."</span>;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        FutureTask futureTask = <span class="keyword">new</span> FutureTask(<span class="keyword">new</span> Test());</span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(futureTask);</span><br><span class="line">        thread.start();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Object o = futureTask.get();</span><br><span class="line">            System.out.println(o);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ExecutionException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="线程的基本组成成分"><a href="#线程的基本组成成分" class="headerlink" title="线程的基本组成成分"></a>线程的基本组成成分</h3><p>在普通单线程程序中，一般只有三个线程：main()主线程 和 后台： gc垃圾回收器 （会帮你回收没有引用指向的堆中的内存垃圾）以及 异常（负责打印程序的异常堆栈信息）</p><h3 id="多线程的五种状态，和转换"><a href="#多线程的五种状态，和转换" class="headerlink" title="多线程的五种状态，和转换"></a>多线程的五种状态，和转换</h3><ul><li><p>五种状态</p><ul><li><p>创建状态</p><blockquote><p>当生成线程对象，并没有调用该线程对象的start方法时，这是线程处于创建状态。</p></blockquote></li><li><p>就绪状态</p><blockquote><p>当调用线程对象的start方法之后，但此时线程调度程序还没有把该线程设置为当前线程，所以线程并不会立即进入运行状态，此时处于就绪状态。在线程运行之后，从等待或睡眠中唤醒时，也会处于就绪状态。</p></blockquote></li><li><p>运行状态</p><blockquote><p>当线程调度程序将处于就绪状态的线程设置为当前线程，此时线程就进入了运行状态，开始执行run方法。</p></blockquote></li><li><p>阻塞状态</p><blockquote><p>线程正在运行时，被暂停，通常是为了等待某个时间点的发生（如某项资源就绪）之后再继续回到就绪状态，sleep()，wait()，IO阻塞等都会导致线程阻塞。sleep一般设置休眠时间，wait一般通过notify或notifyAll来解除等待。</p></blockquote></li><li><p>死亡状态</p><blockquote><p>如果一个线程的run方法执行完毕，该线程就会死亡。死亡的线程无法再次调用start方法进入就绪状态再次执行。</p></blockquote></li></ul><p><img src="H:%5CDocuments%5CDocs%5Cnote%5CJava%5Cpic%5Cmultithreads.png" alt="multithreads"></p></li></ul><h3 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h3><h3 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h3><ul><li><p>懒汉式单例</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JVM</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JVM instance = <span class="keyword">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 构造私有化</span></span><br><span class="line">    <span class="keyword">private</span> JVM&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JVM <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == instance)&#123;</span><br><span class="line">            instance = <span class="keyword">new</span> JVM;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JVMApp</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        JVM j1 = JVM.getInstance();</span><br><span class="line">        JVM j2 = JVM.getInstance();</span><br><span class="line">        JVM j3 = JVM.getInstance();</span><br><span class="line">        System.out.println(j1);</span><br><span class="line">        System.out.println(j2);</span><br><span class="line">        System.out.println(j3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>懒汉式单例应对多线程的3种线程安全的写法</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JVM</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JVM instance = <span class="keyword">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 构造私有化</span></span><br><span class="line">    <span class="keyword">private</span> JVM&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 方式一</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">static</span> JVM <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == instance)&#123;</span><br><span class="line">            instance = <span class="keyword">new</span> JVM();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 方式二</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JVM <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (JVM.class)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == instance)&#123;</span><br><span class="line">            instance = <span class="keyword">new</span> JVM();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 方式三</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JVM <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == instance)&#123; <span class="comment">// 外层为了提高效率</span></span><br><span class="line">            <span class="keyword">synchronized</span> (JVM.class)&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> == instance)&#123; <span class="comment">// 内层为保证线程安全</span></span><br><span class="line">            instance = <span class="keyword">new</span> JVM();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>饿汉式单例</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">JVM</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">static</span> JVM instance=<span class="keyword">new</span> JVM();        </span><br><span class="line">     <span class="function"><span class="keyword">private</span> <span class="title">JVM</span><span class="params">()</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">     &#125;  </span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JVM <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">         <span class="keyword">return</span> instance;</span><br><span class="line">     &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="同步-异步"><a href="#同步-异步" class="headerlink" title="同步 异步"></a>同步 异步</h2>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> it </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Software Download Center</title>
      <link href="/2019/09/15/Software-Download-Center/"/>
      <url>/2019/09/15/Software-Download-Center/</url>
      
        <content type="html"><![CDATA[<h2 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h2><hr><p><a href="https://dl.google.com/tag/s/appguid%3D%7B8A69D345-D564-463C-AFF1-A69D9E530F96%7D%26iid%3D%7B1A20E467-7816-489B-9CA3-6C386CBBDB37%7D%26lang%3Den%26browser%3D4%26usagestats%3D0%26appname%3DGoogle%2520Chrome%26needsadmin%3Dtrue%26ap%3Dx64-stable-statsdef_0%26brand%3DGCEA/dl/chrome/install/googlechromestandaloneenterprise64.msi" target="_blank" rel="noopener">Chrome Offical</a><br><a href="http://www.chromeliulanqi.com/ChromeStandaloneSetup64.exe" target="_blank" rel="noopener">Chrome Mirrors</a><br><a href="http://static.centbrowser.cn/installer_32/" target="_blank" rel="noopener">CentBrowser</a>（选择最新版本下载即可）<br><a href="https://download.mozilla.org/?product=firefox-esr-latest-ssl&os=win64&lang=zh-CN" target="_blank" rel="noopener">FireFox ESR</a><br><a href="https://www.twinkstar.com/" target="_blank" rel="noopener">星愿浏览器</a></p><a id="more"></a><h2 id="杀毒软件"><a href="#杀毒软件" class="headerlink" title="杀毒软件"></a>杀毒软件</h2><hr><p><a href="https://www.huorong.cn/downv4.html" target="_blank" rel="noopener">火绒杀毒</a><br><a href="http://download.eset.com/com/eset/apps/home/eav/windows/latest/eav_nt64.exe" target="_blank" rel="noopener">ESET NOD32 Antivirus</a></p><h2 id="聊天工具"><a href="#聊天工具" class="headerlink" title="聊天工具"></a>聊天工具</h2><hr><p><a href="https://tim.qq.com/download.html" target="_blank" rel="noopener">TIM</a><br><a href="https://im.qq.com/pcqq" target="_blank" rel="noopener">QQ</a><br><a href="https://dldir1.qq.com/weixin/Windows/WeChatSetup.exe" target="_blank" rel="noopener">微信</a><br><a href="http://www.yy.com/web/pcyy_download/" target="_blank" rel="noopener">YY</a><br><a href="https://alimarket.taobao.com/markets/qnww/aliww-download?spm=a21e4.8038711.0.0.7c0e297dN7CB9a&wh_from=win" target="_blank" rel="noopener">旺旺</a></p><h2 id="影音"><a href="#影音" class="headerlink" title="影音"></a>影音</h2><hr><p><a href="http://player.qq.com/" target="_blank" rel="noopener">QQ影音</a><br><a href="http://lotus.sp.iqiyi.com/ota?id=&pubplatform=1&pubarea=pcltdown_15030501&qipuid=&u=&pu=2357004988" target="_blank" rel="noopener">爱奇艺</a><br><a href="https://node.video.qq.com/x/api/download_pc" target="_blank" rel="noopener">腾讯视频</a><br><a href="https://pd.youku.com/pc" target="_blank" rel="noopener">优酷</a><br><a href="https://www.lanzous.com/i44rcmj" target="_blank" rel="noopener">Potplayer简洁版</a><br><a href="https://t1.daumcdn.net/potplayer/PotPlayer/Version/Latest/PotPlayerSetup64.exe" target="_blank" rel="noopener">Potplayer</a><br><a href="https://music.163.com/api/pc/download/latest" target="_blank" rel="noopener">网易云音乐</a><br><a href="https://dldir1.qq.com/music/clntupate/QQMusic_YQQProductNew.exe" target="_blank" rel="noopener">QQ音乐</a><br><a href="https://emumo.xiami.com/apps/mobile?spm=a2oj1.12028025.topnav.5.54771372M6OMSV" target="_blank" rel="noopener">虾米音乐</a></p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><hr><p><a href="https://pan.baidu.com/s/1I_QR2k5yID1AMu-BRlxLng#7kab" target="_blank" rel="noopener">WPS Office 2019专业纯净版</a><br><a href="https://www.7-zip.org/a/7z1900-x64.exe" target="_blank" rel="noopener">7Zip压缩</a><br><a href="https://www.lanzous.com/i1ud0cb" target="_blank" rel="noopener">WinRAR</a><br><a href="https://msdn.itellyou.cn/" target="_blank" rel="noopener">Microsoft相关软件下载</a>(复制下载链接到迅雷即可下载)<br><a href="https://www.lanzous.com/i2fyw4h" target="_blank" rel="noopener">迅雷开心版</a><br><a href="https://www.lanzous.com/i2hswed" target="_blank" rel="noopener">迅雷精简版</a><br><a href="https://www.lanzous.com/i2fyvzc" target="_blank" rel="noopener">TeamViewer便携版</a><br><a href="https://www.lanzous.com/i44rcob" target="_blank" rel="noopener">AIDA64 business599-Lite</a><br><a href="https://www.lanzous.com/i2fyvgd" target="_blank" rel="noopener">Putty</a><br><a href="https://www.lanzous.com/i2fyv7e" target="_blank" rel="noopener">Microsoft运行库</a></p><h2 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h2><p><a href="https://media.st.dl.bscstorage.net/client/installer/SteamSetup.exe" target="_blank" rel="noopener">Steam</a><br><a href="https://origin-a.akamaihd.net/Origin-Client-Download/origin/live/OriginThinSetup.exe" target="_blank" rel="noopener">Origin</a><br><a href="https://www.battlenet.com.cn/download/getInstaller?os=win&installer=Battle.net-Setup-CN.exe" target="_blank" rel="noopener">暴雪战网</a></p><p><a href="https://gad.netease.com/gad/access?project_id=4093740&s=DqS6pTX9HlyI2cbSQ6OREt5pz8s%3D&code_type=1" target="_blank" rel="noopener">网易UU加速器</a><br><a href="https://jiasu.qq.com/" target="_blank" rel="noopener">腾讯网游加速器</a><br><a href="http://www.xunyou.com/download.shtml" target="_blank" rel="noopener">迅游网游加速器</a></p><hr><h1 id="以下软件与普通用户无关，普通用户可以忽略不看"><a href="#以下软件与普通用户无关，普通用户可以忽略不看" class="headerlink" title="以下软件与普通用户无关，普通用户可以忽略不看"></a>以下软件与普通用户无关，普通用户可以忽略不看</h1><hr><h2 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h2><h3 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h3><p><a href="https://code.visualstudio.com/docs/?dv=win64user" target="_blank" rel="noopener">VS Code</a></p><h3 id="Java-IDE"><a href="#Java-IDE" class="headerlink" title="Java IDE"></a>Java IDE</h3><p><a href="https://github.com/frekele/oracle-java/releases" target="_blank" rel="noopener">JDK</a></p><p><a href="https://www.eclipse.org/downloads/packages/" target="_blank" rel="noopener">Eclipse 官方下载页直达链接</a></p><p><a href="https://www.jetbrains.com/idea/download/download-thanks.html?platform=windows" target="_blank" rel="noopener">IntelliJ IDEA(付费产品)</a></p><p><a href="https://www.genuitec.com/download/myeclipse/installers/me2017stable2.0/myeclipse-2017-2.0-offline-installer-windows.exe" target="_blank" rel="noopener">MyEclipse(付费产品)</a></p><h3 id="Python-IDE"><a href="#Python-IDE" class="headerlink" title="Python IDE"></a>Python IDE</h3><p><a href="https://www.jetbrains.com/pycharm/download/#section=windows" target="_blank" rel="noopener">PyCharm(付费产品)</a></p><h3 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h3><p><a href="https://www.jetbrains.com/webstorm/download/download-thanks.html" target="_blank" rel="noopener">WebStorm(付费产品)</a></p><hr><p><em>以上所有软件著作权归原作者所有，本人只做链接信息收集，不为使用者使用过程中所产生的一切后果承担法律责任</em></p><p><strong>上述所提及分付费产品，仅作为学习交流用途，如果喜欢请前去官网支持正版！</strong></p>]]></content>
      
      
      <categories>
          
          <category> Lifestyle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> software </tag>
            
            <tag> download </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
